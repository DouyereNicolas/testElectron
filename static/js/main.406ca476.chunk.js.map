{"version":3,"sources":["contexts/userContext.tsx","components/section-count.tsx","assets/img/image1.jpg","assets/img/image4.jpg","assets/img/image6.jpg","assets/img/image7.jpg","assets/img/image8.jpg","assets/img/image9.jpg","components/gallery-home.tsx","components/nos-valeurs.tsx","components/hero-parallax.tsx","assets/img/2869279.jpg","assets/img/5197057.jpg","assets/img/5197052.jpg","pages/Home.tsx","models/utils/Url.ts","services/usersServices.ts","assets/img/HeimdallContructionSansFond.png","components/user/loginForm.tsx","pages/Login.tsx","models/estimate.ts","services/estimate-service.ts","components/estimate/estimate-form.tsx","pages/estimate-add.tsx","services/tasksServices.ts","models/role.ts","components/planning/planning.tsx","components/planning/TasksList.tsx","models/enums/materialCategory.ts","components/user/ProfileDetail.tsx","pages/CheckProfile.tsx","services/Materials-services.ts","components/material/ViewMaterial.tsx","components/material/MaterialDetail.tsx","components/site/sites-card.tsx","services/sites-service.ts","components/site/Sites-list.tsx","components/site/Site-detail.tsx","models/sites.ts","models/sitesData.ts","helpers/parameters-helper.ts","components/site/site-form-mat.tsx","components/site/sites-form.tsx","pages/sites-add.tsx","services/problems-service.ts","components/problem/ProblemRow.tsx","models/enums/jobEmployee.ts","pages/CheckProblems.tsx","models/utils/DateDetail.ts","models/Problem.ts","models/ProblemData.ts","components/problem/UpdateProblem.tsx","components/problem/DetailProblem.tsx","models/Materials.ts","models/MaterialData.ts","components/material/CreateMaterial.tsx","components/problem/CreateProblem.tsx","components/site/site-edit.tsx","models/Users.ts","models/UsersData.ts","components/user/CreateUser.tsx","components/user/UpdateUser.tsx","components/material/UpdateMaterial.tsx","components/planning/AddTask.tsx","components/planning/ModifyTask.tsx","components/planning/containerModifyTask.tsx","services/auth-service.ts","components/dashbaord/context/fulldata.js","components/dashbaord/Pages/DashboardEmployees/DashboardEmployees.js","pages/dashboard.tsx","components/planning/PlanningChantier.jsx","pages/ContainerPlanningChantier.jsx","components/planning/ContainerUniqSite.tsx","components/header.tsx","components/Footer.tsx","App.tsx","index.tsx"],"names":["UserContext","createContext","undefined","reducerUser","state","action","type","id","payload","Number","localStorage","getItem","role","Error","UserProvider","children","useReducer","dispatch","memoizedUser","useMemo","Provider","value","useUser","useContext","NumberMove","time","targetContainer","useRef","useState","top","setTop","count","setCount","isAnimated","setIsAnimated","handleWheel","current","getBoundingClientRect","useEffect","window","addEventListener","removeEventListener","n","index","setTimeout","c","animate","className","ref","SectionCount","style","display","GalleryHome","height","src","image1","alt","loading","image4","image6","image7","image8","image9","NosValeurs","HeroParallax","Home","ImgServiceAdapte","ImgGrosOeuvre","ImgTravauxService","Url","login","password","a","removeItem","fetch","POST_LOGIN_URL","method","mode","body","JSON","stringify","headers","then","response","json","token","message","setToken","setItem","user","role_id","validity","moment","unix","expires_in","toString","clear","GET_ALL_USERS_URL","getUserById","GET_USER_SEARCH_URL","replace","ARG_USER_ID","getUsersByRole","GET_USERS_BY_ROLE_URL","ARG_ROLE_ID","getFullUsers","postUser","POST_USER_URL","deleteUser","DELETE_USER_URL","catch","err","updateUser","PUT_USER_URL","updateOneUserPassword","postUserData","data","POST_USER_DATA_URL","userData_userId","userData_key","userData_column","updateUserData","PUT_USER_DATA_URL","userData_id","ARG_SITE_ID","ARG_MATERIAL_ID","ARG_TASK_ID","ARG_PROBLEM_ID","ARG_DATA_ID","ARG_DATE","BASE_URL","GET_SITE_SEARCH_URL","GET_ALL_SITES_URL","GET_SITE_BY_USER_URL","POST_SITE_URL","PUT_SITE_URL","DELETE_SITE_URL","GET_SITE_DATA_URL","POST_SITE_DATA_URL","PUT_SITE_DATA_URL","DELETE_SITE_DATA_URL","GET_SITE_DATE_URL","DELETE_USER_DATA_URL","DELETE_PROBLEM_URL","GET_ALL_PROBLEM_URL","GET_PROBLEM_URL","UPDATE_PROBLEM_URL","POST_PROBLEM_URL","DELETE_PROBLEM_DATA_URL","GET_ALL_PROBLEM_DATA_URL","GET_PROBLEM_DATA_URL","GET_PROBLEM_DATA_BY_ID_URL","UPDATE_PROBLEM_DATA_URL","POST_PROBLEM_DATA_URL","GET_ALL_MATERIALS_URL","GET_ALL_MATERIALS_CATEGORY_URL","GET_MATERIAL_DETAIL_URL","PUT_MATERIAL_URL","DELETE_MATERIAL_URL","POST_MATERIAL_URL","POST_MATERIAL_DATA_URL","PUT_MATERIAL_DATA_URL","GET_ALL_TASKS_URL","POST_TASK_URL","PUT_TASK_URL","GET_TASK_DATA_URL","POST_TASK_DATA_URL","PUT_TASK_DATA_URL","LoginForm","history","useHistory","handleUserContext","form","setForm","handleInputChange","e","fieldName","target","name","fieldValue","newField","handleSubmit","preventDefault","newForm","length","errorMsg","error","isValid","username","validateForm","isAuthenticated","push","toast","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","toastClassName","theme","logo","onSubmit","htmlFor","placeholder","onChange","Login","Estimate","place","budget","firstname","lastname","email","tel","desc","this","addEstimate","estimate","EstimateForm","setPlace","setBudget","setFirstname","setLastname","setEmail","setTel","setDesc","send","from_name","to_name","reply_to","console","log","status","text","success","warn","EstimateAdd","Date","getTime","getTaskById","getTaskByUserId","addTask","task","modifyTask","addTaskData","getTaskDataById","supprTaskData","GetRole","Planning","buttonMoi","buttonAgenda","Task","supprimer","modify","localizer","momentLocalizer","taskData","setTaskData","taskId","setTaskId","setTask","detailTask","setShow","ressourceId","getAllDataTask","collection","document","getElementsByTagName","i","innerHTML","nameMonth","getElementsByClassName","click","tabTextJour","divHeader","elem","childNodes","j","show","handleClose","modalDetails","getElementById","right","to","Modal","onHide","animation","Body","map","plop","taskData_key","append","taskData_column","Button","variant","onClick","defaultDate","defaultView","events","onSelectEvent","ContainerPlanning","id_user","setEvents","events2","title","task_title","start","task_dateStart","end","task_dateEnd","task_id","supprTask","MaterialCategory","Role","hc_role_id","hc_role_name","CUSTOMER","EMPLOYEE","DIRECTOR","MANAGER","UNDEFINED","ProfileDetail","showUpdate","setShowUpdate","handleCloseUpdate","setPassword","confirmPassword","setConfirmPassword","handlePwdChange","disableSubmit","disabled","validatePwd","openModalDelete","confirmDelete","location","reload","checkRole","userData","getStringEnum","Moment","created_at","date","format","updated_at","CheckProfile","userId","roleId","userContext","users","setUsers","getAllUsers","postMaterials","material","material_ref","deleteOneMaterial","updateOneMaterial","material_id","postDataMaterial","materialData_materialId","data_key","data_column","updateOneMaterialData","materialData_id","MaterialCategoryUtils","PELLE","MARTEAU","PERCEUSE","VEHICULE","TRANSPALETTE","BROUETTE","DIABLE","cat","ViewMaterial","materialId","setMaterialId","resp","datas","getTextCategory","MaterialDetail","materials","setMaterials","getAllMaterial","element","Table","striped","hover","scope","SitesCard","site","setDates","getDiffDate","site_date_start","site_date_end","now","siteNbDays","diff","percent","minHeight","site_id","site_number_site","ProgressBar","animated","SitesService","handleError","user_id","siteData","siteData_siteId","siteData_key","siteData_column","siteData_id","address","Object","keys","SitesList","sites","setSites","getAllSites","getSiteByUser","SiteDetail","match","setSiteDetails","setSite","tickets","setTickets","fetchSite","getSite","params","siteDetails","handleCloseModal","ticket","problemData_column","left","size","backdrop","background","Header","closeButton","Title","Footer","deleteSite","go","Sites","deleted_at","nbSite","SitesData","ParametersHelper","test","field","testString","testInt","isValideEmail","isValideTel","allSites","numberSite","filter","s","dateStart","testFormatDate","dateEnd","isValidAddress","SiteFormMat","usr","getEmployee","u","empArray","setEmpArray","array","worker","emp","isSelected","searchMaterials","setSearchMaterials","materialsTypes","setMaterialsTypes","getFullMaterials","slice","getMaterialsType","getValueRadio","d","startsWith","addSite","newSite","postSite","split","mat","addSiteData","newData","postSiteData","filterMaterials","inputValue","handleInputSearchMaterials","opacity","pointerEvents","indexOf","splice","handleClickWorker","handleClickMat","max","materielType","checkNombreMaterial","handleInputMat","SitesForm","firstStep","setFirstStep","siteAddress","setSiteAddress","siteCustomer","setSiteCustomer","siteManager","setSiteManager","geocode","setGeocode","addressError","setAddressError","customer","setCustomer","manager","setManager","setAllSites","testNumberSite","testDate","handleInputAddressChange","addressData","getAddressGouv","g","features","disabledSubmit","validateData","entries","onBlur","handleAddress","f","cursor","properties","label","selectAddress","selectedCustomer","handleSelectCustomerChange","selected","selectedManager","handleSelectManagerChange","SitesAdd","getOneProblem","deleteOneProblem","updateOneProblem","problem","problem_id","problem_ref","postOneProblem","postDataProblem","problemData_problemId","problemData_key","updateOneDataProblem","problemData_id","JobEmployee","ProblemRow","problemData","problemId","setProblemId","responseDelete","CheckProblems","problems","setProblems","getAllProblems","DateDetail","timezone_type","timezone","Problem","ProblemData","UpdateProblem","setRef","setName","description","setDescription","setProblem","setAllSite","tt","parseInt","yes","getDataValue","handleInputDataChange","problemToPost","dataToPost","handleInputDataChangeSelect","handleInputDataChangeText","DetailProblem","Materials","MaterialData","materialData","CreateMaterial","nameMaterial","refMaterial","NombreMaterial","setNombreMaterial","catMaterial","setCatMaterial","checkNameMaterial","checkRefMaterial","checkCatMaterial","testNameMaterial","testRefMaterial","createdId","t","handleSelectChange","getCategoriesArray","category","CreateProblem","checkName","checkDescription","checkRef","checkSite","testProblemName","testTextLength","SiteEdit","newUsers","selectedData","populateSiteDataArray","result","updateSite","updateSiteData","updateData","getDate","Users","UsersData","JobEmployeeUtils","ELECTRICIAN","PLUMBER","ROOFER","MASON","CARPENTER","job","CreateUser","setLogin","setRole","errorPassword","setErrorPassword","errorLastname","setErrorLastname","errorFirstname","setErrorFirstname","errorLogin","setErrorLogin","userJob","setUserJob","emailError","setEmailError","phoneError","setPhoneError","userEmail","setUserEmail","userPhoneNumber","setUserPhoneNumber","testLogin","testPassword","handlePostUser","userToPost","userLastName","userFirstname","getRoleArray","roleUser","newJob","handleSelectJobChange","getJobArray","getTextJob","UpdateUser","setJob","phoneNumber","setPhoneNumber","setUser","valide","putUser","jobEmp","UpdateMaterial","setMaterial","dataName","setDataName","dataNumber","setDataNumber","dataCategory","setDataCategory","getMaterialById","warning","TaskForm","errorDate","setErrorDate","errorHeure","setErrorHeure","errorTitle","setErrorTitle","clients","setClients","taskTitle","heureStart","heureEnd","details","client","handleSelectedChange","selectedOptions","year","getFullYear","month","getMonth","day","heure","getHours","minute","getMinutes","DateStart","DateEnd","arrTask","returnAdd","min","FormModifyTask","taskModify","setTaskModify","dateStartModify","setDateStartModify","heureStartModify","setHeureStartModify","dateEndModify","setDateEndModify","heureEndModify","setHeureEndModify","setUserId","detail","setDetail","siteId","setSiteId","errorHeureStart","setErrorHeureStart","errorHeureEnd","setErrorHeureEnd","concaStart","concaEnd","handleSubmitModify","taskData_id","arrDataUser","arrName","ContainerModifyTask","taskModifyData","setTaskModifyData","getAll","reponse","r","TokenValidity","validToken","fulldata","chartChantier","chartChiffre","chartJob","DashboardEmployees","yearRef","labels","datasets","backgroundColor","dataLine","borderColor","dataPie","borderWidth","allData","setAllData","options","selectedIndex","responsive","plugins","legend","ChartJS","register","CategoryScale","LinearScale","BarElement","PointElement","LineElement","ArcElement","Tooltip","Legend","Dashboard","PlanningChantier","eventsChantier","event","ContainerPlanningChantier","siteList","setSiteList","getSites","formatEvent","setDate","ContainerUniqSite","sit","getSiteById","React","setIsVisible","handleScroll","nav","scrollY","classList","add","remove","Navbar","expand","Container","fluid","Brand","Toggle","Collapse","Nav","navbarScroll","Link","NavDropdown","Item","eventKey","Divider","exact","path","component","TaskList","AddTask","updateMaterial","lg","md","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.406ca476.chunk.js","sourcesContent":["import React, {createContext, FunctionComponent, useContext, useMemo, useReducer} from \"react\";\r\n\r\ninterface ContextInterface {\r\n    id?: number;\r\n    role?: number;\r\n}\r\n\r\ninterface ActionInterface {\r\n    type: \"setUser\";\r\n    payload: ContextInterface;\r\n}\r\n\r\ntype DispatchInterface = (action: ActionInterface) => void;\r\n\r\nconst UserContext = createContext<\r\n       {\r\n            state: ContextInterface;\r\n            dispatch: DispatchInterface;\r\n        } | undefined\r\n    >(undefined);\r\n\r\nconst reducerUser = ( state: ContextInterface, action: ActionInterface): ContextInterface => {\r\n    switch (action.type) {\r\n        case \"setUser\":\r\n            return { ...state, id: action.payload.id ? action.payload.id : Number(localStorage.getItem('user_id')),\r\n                               role: action.payload.role ? action.payload.role : Number(localStorage.getItem('user_role'))};\r\n        default:\r\n            throw new Error('Invalid action type in context');\r\n    }\r\n};\r\n\r\nconst UserProvider: FunctionComponent = ( {children} ) => {\r\n    const [state, dispatch] = useReducer(reducerUser, {});\r\n    const memoizedUser = useMemo( () => ({state, dispatch}), [state, dispatch] );\r\n\r\n\r\n    return (\r\n        <UserContext.Provider value={memoizedUser}>{children}</UserContext.Provider>\r\n    );\r\n};\r\n\r\nconst useUser = () => {\r\n    return useContext(UserContext);\r\n}\r\n\r\nexport { UserProvider, useUser };\r\n","import React, { FunctionComponent, useEffect, useState, useRef } from \"react\";\r\n\r\n\r\n\r\ntype animateN = { time: number };\r\n\r\nconst NumberMove: FunctionComponent<animateN> = ({ time }) => {\r\n\r\n    //const targetContainer = useRef();\r\n    const targetContainer = useRef<HTMLInputElement | null>(null);\r\n    const [top, setTop] = useState<number>();\r\n    const [count, setCount] = useState(0);\r\n    const [isAnimated, setIsAnimated] = useState(false);\r\n    const showAt = 600;\r\n    const hideAt = 1000;\r\n    //const animateN = 1500;\r\n\r\n    const handleWheel = () => {\r\n        if(targetContainer.current){\r\n            setTop(targetContainer.current.getBoundingClientRect().top);\r\n        }\r\n            \r\n    }\r\n\r\n    useEffect(() => {\r\n        window.addEventListener(\"scroll\", handleWheel);\r\n\r\n        return () => {\r\n            window.removeEventListener(\"scroll\", handleWheel);\r\n        }\r\n    });\r\n\r\n    const animate = (n:any) => {\r\n        setIsAnimated(true);\r\n\r\n        for (let index = 0; index < n; index++) {\r\n            setTimeout(() => {\r\n                setCount(c => c + 1);\r\n            }, 1000);\r\n        }\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if(top){\r\n            if (top != null && top < showAt && !isAnimated) {\r\n                animate(time);\r\n            }\r\n    \r\n            if (top > hideAt && isAnimated) {\r\n                setIsAnimated(false);\r\n                setCount(0);\r\n            }\r\n        }\r\n        \r\n    }, [top ,isAnimated , time])\r\n\r\n    return (\r\n    <>\r\n    <h2 className=\"h2\" ref={targetContainer}> <span className=\"js-count\" data-count=\"1000\">{count}</span></h2>\r\n    </>\r\n    )\r\n\r\n}\r\nexport default function SectionCount() {\r\n\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"sectionImgHome\">\r\n            <div className=\"h-100\" id=\"h-100\" style={{ display: 'flex' }}>\r\n                <div className=\"col-4 numberDiv\">\r\n                <NumberMove time={1410}/>\r\n                    <h3>Chantiers réalisés</h3>\r\n                </div>\r\n\r\n                <div className=\"col-4 numberDiv\">\r\n                <NumberMove time={1550}/>\r\n                    <h3>Véhicules </h3>\r\n                </div>\r\n\r\n                <div className=\"col-4 numberDiv\">\r\n                <NumberMove time={1590}/>\r\n                    <h3>Employés</h3>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/image1.34fc0a97.jpg\";","export default __webpack_public_path__ + \"static/media/image4.37c9c4c9.jpg\";","export default __webpack_public_path__ + \"static/media/image6.cf62bec7.jpg\";","export default __webpack_public_path__ + \"static/media/image7.62de533e.jpg\";","export default __webpack_public_path__ + \"static/media/image8.af72038a.jpg\";","export default __webpack_public_path__ + \"static/media/image9.03d7d1b9.jpg\";","\r\nimport React from \"react\"\r\nimport image1 from '../assets/img/image1.jpg';\r\nimport image4 from '../assets/img/image4.jpg';\r\nimport image6 from '../assets/img/image6.jpg';\r\nimport image7 from '../assets/img/image7.jpg';\r\nimport image8 from '../assets/img/image8.jpg';\r\nimport image9 from '../assets/img/image9.jpg';\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function GalleryHome() {\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n        <section className=\"sectionGallery\" style={{ height: 'auto' }}>\r\n            <div className=\"divGallery\">\r\n                <div className=\"col-12 col-sm-6 col-md-6 col-lg-4 div_img\">\r\n                    <img src={image1} className='img-thumbnail'\r\n                        alt='...' loading=\"lazy\" />\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 col-md-6 col-lg-4 div_img\">\r\n                    <img src={image4} className='img-thumbnail'\r\n                        alt='...' loading=\"lazy\" />\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 col-md-6 col-lg-4 div_img\">\r\n                    <img src={image6} className='img-thumbnail'\r\n                        alt='...' loading=\"lazy\" />\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"divGallery\">\r\n                <div className=\"col-12 col-sm-6 col-md-6 col-lg-4 div_img\">\r\n                    <img src={image7} className='img-thumbnail'\r\n                        alt='...' loading=\"lazy\" />\r\n                    <div className=\"div_main_des\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 col-md-6 col-lg-4 div_img\">\r\n                    <img src={image8} className='img-thumbnail'\r\n                        alt='...' loading=\"lazy\" />\r\n                    <div className=\"div_main_des\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-sm-6 col-md-6 col-lg-4 div_img\">\r\n                    <img src={image9} className='img-thumbnail'\r\n                        alt='...' loading=\"lazy\" />\r\n                    <div className=\"div_main_des\">\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n            <div className=\"divGalleryMobile\">\r\n                <div className=\"col-12 col-xs-6 col-sm-6 col-md-6 col-lg-4\">\r\n                    <img src={image1} className='img-thumbnail'\r\n                        alt='...' loading=\"lazy\" />\r\n                    <div className=\"div_main_des\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-xs-6 col-sm-6 col-md-6 col-lg-4\">\r\n                    <img src={image4} className='img-thumbnail'\r\n                        alt='...' loading=\"lazy\" />\r\n                    <div className=\"div_main_des\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"divGalleryMobile\">\r\n                <div className=\"col-12 col-xs-6 col-sm-6 col-md-6 col-lg-4\">\r\n                    <img src={image6} className='img-thumbnail'\r\n                        alt='...' loading=\"lazy\" />\r\n                    <div className=\"div_main_des\">\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-12 col-xs-6 col-sm-6 col-md-6 col-lg-4\">\r\n                    <img src={image7} className='img-thumbnail'\r\n                        alt='...' loading=\"lazy\" />\r\n                    <div className=\"div_main_des\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"divGalleryMobile\">\r\n                <div className=\"col-12 col-xs-6 col-sm-6 col-md-6 col-lg-4\">\r\n                    <img src={image8} className='img-thumbnail'\r\n                        alt='...' loading=\"lazy\" />\r\n                    <div className=\"div_main_des\">\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-12 col-xs-6 col-sm-6 col-md-6 col-lg-4\">\r\n                    <img src={image9} className='img-thumbnail'\r\n                        alt='...' loading=\"lazy\" />\r\n                    <div className=\"div_main_des\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport imgClient from \"../assets/img/serviceClient.jpg\";\r\nimport Img13 from \"../assets/img/image13.jpg\";\r\nimport ImgExpert from \"../assets/img/expert.jpg\";\r\nimport Img10 from \"../assets/img/image10.jpg\";\r\nimport Img11 from \"../assets/img/image11.jpg\";\r\nimport Img12 from \"../assets/img/image12.jpg\";\r\n\r\n\r\nexport default function NosValeurs() {\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"sdSection\">\r\n            <div className=\"container\">\r\n                <div className=\"contentSdSection\">\r\n                    <h2 className=\"text-center\">Nos valeurs</h2>\r\n\r\n                    <div className=\"d-flex bd-highlight mb-3\">\r\n                        <div className=\"me-auto bd-highlight col-6 mr-4\" id=\"styleText\">\r\n                            <h3>Écoute du client</h3>\r\n                            <p className=\"ms-2\">Nous sommes à l’écoute de nos clients pour comprendre chacun de leurs besoins et y répondre.\r\n                                Nous construisons une relation de confiance en assurant le succès de chaque client grâce à notre \r\n                                engagement en faveur de leur satisfaction.\r\n                            </p>\r\n                            <h3 className=\"mt-4\">Respect</h3>\r\n                            <p className=\"ms-2\">Le respect mutuel et la confiance sont le fondement de toute entreprise prospère. Et Heimdall confirme la règle. \r\n                                Nous sommes convaincus que l’intelligence collective, le travail d’équipe, avec nos collaborateurs mais également \r\n                                avec nos clients, est un puissant levier pour relever les défis et réaliser nos ambitions.\r\n                            </p>\r\n                            <h3 className=\"mt-4\">Services</h3>\r\n                            <p className=\"ms-2\">la volonté de servir nos clients est au coeur de notre engagement. Nous veillons à nous montrer toujours disponbles\r\n                                et à l'écoute de leurs besoins. Nous traitons leurs demandes avec la plus grande diligence, et veillons à leur\r\n                                pleine satisfaction dans le cadre de nos domaines de compétences.\r\n\r\n                            </p>\r\n                            <h3 className=\"mt-4\">Performance</h3>\r\n                            <p className=\"ms-2\">Grâce à notre savoir-faire, notre expérience et notre engagement, nous exerçons notre métier avec rigueur, afin de \r\n                                livrer des prestations d'un haut niveau de qualité. Proches de nos marchés et en cultivant des relations de proximité\r\n                                avec nos clients, nous participons à la réalisation de valeurs ajoutées.\r\n                            </p>\r\n                        </div>\r\n                        <div className=\" bd-highlight col-6\" id=\"colRightValeur\">\r\n                            <div className=\"column\">\r\n                                {/* <div className=\"row\">\r\n                                    <img src={imgClient} alt=\"Service Client\" id=\"imgValues\" />\r\n                                    <img src={Img13} alt=\"Respect\" id=\"imgValues\"/>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <img src={ImgExpert} alt=\"Service Client\" id=\"imgValues\" />\r\n                                    <img src={Img10} alt=\"Respect\" id=\"imgValues\"/>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <img src={Img12} alt=\"Service Client\" id=\"imgValues\" />\r\n                                    <img src={Img11} alt=\"Respect\" id=\"imgValues\"/>\r\n                                </div> */}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n\r\n    );\r\n}\r\n","import React from \"react\"\r\n\r\n\r\n\r\nexport default function HeroParallax() {\r\n\r\n\r\n    return (\r\n\r\n        <section className=\"firstSection\">\r\n            <div className=\"container h-100\">\r\n                <div className=\"title h-100 d-flex justify-content-center flex-column\">\r\n                    <div>\r\n                        <h1 className=\"d-flex justify-content-center \">\r\n                            HEIMDALL Construction\r\n                        </h1>\r\n                    </div>\r\n                    <div>\r\n                        <h2 className=\"d-flex justify-content-center mt-3 mx-5\">\r\n                        Entreprise du Bâtiment, Travaux Services\r\n                        et Maîtrise d’Œuvre d'exécution au service de vos projets de construction.\r\n                        </h2>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/2869279.995ab2d9.jpg\";","export default __webpack_public_path__ + \"static/media/5197057.7122dfae.jpg\";","export default __webpack_public_path__ + \"static/media/5197052.fbf91d38.jpg\";","import React, {FunctionComponent} from 'react';\r\nimport SectionCount from '../components/section-count';\r\nimport GalleryHome from '../components/gallery-home';\r\nimport '../components/style-home.css'\r\nimport NosValeurs from '../components/nos-valeurs';\r\nimport HeroParallax from '../components/hero-parallax';\r\nimport ImgServiceAdapte from '../assets/img/2869279.jpg';\r\nimport ImgGrosOeuvre from '../assets/img/5197057.jpg';\r\nimport ImgTravauxService from '../assets/img/5197052.jpg';\r\n\r\nconst Home: FunctionComponent = () => {\r\n\r\n    return (\r\n\r\n        <div>\r\n\r\n            <div>\r\n                <HeroParallax/>\r\n            </div>\r\n\r\n\r\n            <div>\r\n                <NosValeurs/>\r\n            </div>\r\n\r\n            <section className=\"threeSection\">\r\n                <div className=\"container\">\r\n                    <div className=\"row m-0\">\r\n\r\n                        <div className=\"col-lg-4 text-align-center align-items-center d-flex flex-column mb-3 mt-5\">\r\n                            <img src={ImgServiceAdapte} id='imgRounded' className=\"rounded-circle\"\r\n                                 alt=\"Un service adapté\"></img>\r\n                            <h4 className=\" d-flex justify-content-center mt-2\">Un service adapté</h4>\r\n                            <p>Parce que chaque chantier est unique, HEIMDALL Construction dispose d’un Service Méthode\r\n                                qui intervient durant la période de préparation de chantier, afin de\r\n                                déterminer les modes constructifs les plus adéquats au projet en les comparant et en les\r\n                                optimisant d’un point de vue coût, délais, sécurité, et qualité.\r\n                                En définissant un mode constructif, ce service détermine également le besoin en\r\n                                matériel, matériaux et main d’œuvre et en établit les plannings prévisionnels.</p>\r\n                            {/* <a className=\"btn btn-secondary\"  role=\"button\">View details »</a> */}\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-4 text-align-center align-items-center d-flex flex-column mb-3 mt-5\">\r\n                            <img src={ImgGrosOeuvre} id='imgRounded' className=\"rounded-circle\"\r\n                                 alt=\"Gros oeuvres\"></img>\r\n                            <h4 className=\" d-flex justify-content-center mt-2\">Le gros oeuvre</h4>\r\n                            <p>Le gros œuvre est l’activité première de HEIMDALL Construction. Que ce soit pour la\r\n                                construction d’ouvrages privés ou publics, la société garantie les objectifs en\r\n                                termes de qualité, de délai et de budget. Maîtrisant différentes techniques de\r\n                                construction (béton armé, maçonnerie de pierre, parpaings, briques…),\r\n                                HEIMDALL Construction intervient pour des projets de construction, extensions,\r\n                                réhabilitation, fondations, surélévation ou de rénovation d’ouvrages variés.\r\n                            </p>\r\n                            {/* <a className=\"btn btn-secondary\" role=\"button\">View details »</a> */}\r\n                        </div>\r\n\r\n                        <div className=\"col-lg-4 text-align-center align-items-center d-flex flex-column mb-3 mt-5\">\r\n                            <img src={ImgTravauxService} id='imgRounded' className=\"rounded-circle\"\r\n                                 alt=\"Travaux services\"></img>\r\n                            <h4 className=\" d-flex justify-content-center mt-2\">Les travaux services</h4>\r\n                            <p>Que ce soit pour de la rénovation ou pour du neuf, cette activité nécessite une\r\n                                réactivité sans faille pour assurer des missions courtes,\r\n                                qui nous sont souvent confiées par les particuliers et les professionnels.\r\n                                La variété des missions « Travaux Services » qui nous sont confiées, est une preuve de\r\n                                nos compétences élargies. Des grands noms de l’industrie en demande de\r\n                                maintenance, aux particuliers en besoin d’une intervention de Remises en état suite à\r\n                                sinistre, notre champs de compétences est large, et maitrisé.\r\n                            </p>\r\n                            {/* <a className=\"btn btn-secondary\" role=\"button\">View details »</a> */}\r\n                        </div>\r\n\r\n                    </div>\r\n                </div>\r\n            </section>\r\n\r\n\r\n            <div id=\"SliderHome\">\r\n                <SectionCount/>\r\n            </div>\r\n\r\n            <div id=\"SliderHome\">\r\n                <GalleryHome/>\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","class Url {\r\n\r\n    // ARG ID\r\n    static readonly ARG_SITE_ID = ':siteId';\r\n    static readonly ARG_USER_ID = ':userId';\r\n    static readonly ARG_ROLE_ID = ':roleId';\r\n    static readonly ARG_MATERIAL_ID = ':materialId';\r\n    static readonly ARG_TASK_ID = ':taskId';\r\n    static readonly ARG_PROBLEM_ID = ':ticketId';\r\n    static readonly ARG_DATA_ID = ':dataId';\r\n    static readonly ARG_DATE = ':date';\r\n\r\n\r\n    static readonly BASE_URL = 'http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1';\r\n    //static readonly BASE_URL = 'http://heimdallapi/api/v1';\r\n\r\n    // URL LOGIN\r\n    static readonly POST_LOGIN_URL = Url.BASE_URL + '/login';\r\n\r\n    // URL SITES\r\n    static readonly GET_ALL_SITES_URL = Url.BASE_URL + '/sites';\r\n\r\n    static readonly GET_SITE_SEARCH_URL = Url.GET_ALL_SITES_URL + '/search/' + Url.ARG_SITE_ID;\r\n    static readonly GET_SITE_BY_USER_URL = Url.GET_ALL_SITES_URL + '/user/' + Url.ARG_USER_ID;\r\n\r\n    static readonly POST_SITE_URL = Url.GET_ALL_SITES_URL;\r\n    static readonly PUT_SITE_URL = Url.GET_ALL_SITES_URL + '/update';\r\n    static readonly DELETE_SITE_URL = Url.GET_ALL_SITES_URL + '/delete/' + Url.ARG_SITE_ID;\r\n\r\n    // URL SITES DATA\r\n    static readonly GET_SITE_DATA_URL = Url.GET_ALL_SITES_URL + '/data/' + Url.ARG_SITE_ID;\r\n    static readonly POST_SITE_DATA_URL = Url.BASE_URL + '/sites/data';\r\n    static readonly PUT_SITE_DATA_URL = Url.BASE_URL + '/sites/data/update';\r\n    static readonly DELETE_SITE_DATA_URL = Url.BASE_URL + '/sites/data/delete/' + Url.ARG_DATA_ID;\r\n\r\n    // URL SITES date\r\n    static readonly GET_SITE_DATE_URL = Url.GET_ALL_SITES_URL + '/sites/count/' + Url.ARG_DATE;\r\n\r\n    // URL USERS\r\n    static readonly GET_ALL_USERS_URL = Url.BASE_URL + '/users';\r\n    static readonly GET_USER_SEARCH_URL = Url.BASE_URL + '/users/search/' + Url.ARG_USER_ID;\r\n    static readonly GET_USERS_BY_ROLE_URL = Url.BASE_URL + '/users/role/' + Url.ARG_ROLE_ID;\r\n    static readonly POST_USER_URL = Url.GET_ALL_USERS_URL;\r\n    static readonly PUT_USER_URL = Url.GET_ALL_USERS_URL + '/update';\r\n    static readonly DELETE_USER_URL = Url.GET_ALL_USERS_URL + '/delete/' + Url.ARG_USER_ID;\r\n\r\n    // URL USERS DATA\r\n    static readonly POST_USER_DATA_URL = Url.BASE_URL + '/users/data';\r\n    static readonly PUT_USER_DATA_URL = Url.BASE_URL + '/users/data/update';\r\n    static readonly DELETE_USER_DATA_URL = Url.BASE_URL + '/users/ data/delete/' + Url.ARG_DATA_ID;\r\n\r\n\r\n    //URL PROBLEM\r\n    static readonly DELETE_PROBLEM_URL = Url.BASE_URL + '/problems/delete/' + Url.ARG_PROBLEM_ID;\r\n    static readonly GET_ALL_PROBLEM_URL = Url.BASE_URL + '/problems';\r\n    static readonly GET_PROBLEM_URL = Url.BASE_URL + '/problems/'+Url.ARG_PROBLEM_ID;\r\n    static readonly UPDATE_PROBLEM_URL = Url.BASE_URL + '/problems/update';\r\n    static readonly POST_PROBLEM_URL = Url.BASE_URL + '/problems';\r\n\r\n    //URL PROBLEM DATA\r\n    static readonly DELETE_PROBLEM_DATA_URL = Url.BASE_URL + '/problems/data/delete/' + Url.ARG_PROBLEM_ID;\r\n    static readonly GET_ALL_PROBLEM_DATA_URL = Url.BASE_URL + '/problems/data/all';\r\n    static readonly GET_PROBLEM_DATA_URL = Url.BASE_URL + '/problems/data/problem/'+Url.ARG_PROBLEM_ID;\r\n    static readonly GET_PROBLEM_DATA_BY_ID_URL = Url.BASE_URL + '/problems/data/'+Url.ARG_DATA_ID;\r\n    static readonly UPDATE_PROBLEM_DATA_URL = Url.BASE_URL + '/problems/data/update';\r\n    static readonly POST_PROBLEM_DATA_URL = Url.BASE_URL + '/problems/data';\r\n\r\n    // URL MATERIALS\r\n    static readonly GET_ALL_MATERIALS_URL = Url.BASE_URL + '/materials';\r\n    static readonly GET_ALL_MATERIALS_CATEGORY_URL = Url.BASE_URL + '/materials/category/getAll';\r\n    static readonly GET_MATERIAL_DETAIL_URL = Url.BASE_URL + '/materials/search/' + Url.ARG_MATERIAL_ID;\r\n    static readonly PUT_MATERIAL_URL = Url.BASE_URL + '/materials/update';\r\n    static readonly DELETE_MATERIAL_URL = Url.BASE_URL + '/materials/delete/' + Url.ARG_MATERIAL_ID;\r\n    static readonly POST_MATERIAL_URL = Url.BASE_URL + '/materials';\r\n\r\n    // URL MATERIALS DATA\r\n    static readonly POST_MATERIAL_DATA_URL = Url.BASE_URL + '/materials/data';\r\n    static readonly PUT_MATERIAL_DATA_URL = Url.BASE_URL + '/materials/data/update';\r\n\r\n    // URL TASKS\r\n    static readonly GET_ALL_TASKS_URL = Url.BASE_URL + '/plannings/searchAllTask';\r\n    static readonly POST_TASK_URL = Url.BASE_URL + '/plannings/nativeTask';\r\n    static readonly PUT_TASK_URL = Url.BASE_URL + '/plannings/tasks';\r\n\r\n    // URL TASKS DATA\r\n    static readonly GET_TASK_DATA_URL = Url.BASE_URL + '/plannings/tasks/data/' + Url.ARG_TASK_ID;\r\n    static readonly POST_TASK_DATA_URL = Url.BASE_URL + 'plannings/nativeData';\r\n    static readonly PUT_TASK_DATA_URL = Url.BASE_URL + '/plannings/tasks/data';\r\n\r\n}\r\n\r\nexport {Url};","import Users from \"../models/Users\";\r\nimport UsersData from \"../models/UsersData\";\r\nimport {Role} from \"../models/role\";\r\nimport moment from \"moment\";\r\nimport {Url} from \"../models/utils/Url\";\r\n\r\n\r\n\r\nexport async function login(login: string, password: string) {\r\n    localStorage.removeItem('token');\r\n    let token = await fetch(Url.POST_LOGIN_URL, {\r\n        method: 'POST',\r\n        mode: \"cors\",\r\n        body: JSON.stringify({\"login\": login, \"password\": password}),\r\n        headers: {'Content-Type': 'application/json'}\r\n    }).then(response => response.json());\r\n        if(token.message !== \"Unauthorized\"){\r\n            await setToken(token);\r\n            localStorage.setItem('user_id', token.user.id);\r\n            localStorage.setItem('user_role', token.user.role_id);\r\n            let validity = moment().unix() + token.expires_in;\r\n            localStorage.setItem('token_validity', validity.toString());\r\n            return token.user;\r\n        }\r\n}\r\n\r\nexport async function setToken(token: any) {\r\n    localStorage.clear();\r\n    localStorage.setItem('token', token.token);\r\n}\r\n\r\nexport async function getAllUsers() {\r\n    return await fetch(Url.GET_ALL_USERS_URL, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport async function getUserById(id: number): Promise<Users> {\r\n\r\n    return await fetch(Url.GET_USER_SEARCH_URL.replace(Url.ARG_USER_ID, id.toString()), {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport async function getUsersByRole(role_id: number) : Promise<Users[]> {\r\n    return await fetch(Url.GET_USERS_BY_ROLE_URL.replace(Url.ARG_ROLE_ID, role_id.toString()), {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : '0'}\r\n    }).then(response => response.json());\r\n}\r\n\r\nexport async function getFullUsers(): Promise<Users[]> {\r\n    return await fetch(Url.GET_ALL_USERS_URL, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    }).then(response => response.json());\r\n}\r\n\r\nexport async function getOneUserWithData(id: number): Promise<Users> {\r\n    return await fetch( 'http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/users/getOneUserWithData/' + id, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? 'bearer ' + localStorage.getItem('token') : '0'}\r\n    } ).then(response => response.json());\r\n}\r\n\r\nexport async function postUser(user: Users): Promise<Users> {\r\n    return await fetch(Url.POST_USER_URL, {\r\n        mode: \"cors\",\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            \"login\": user.login,\r\n            \"password\": user.password,\r\n            \"password_confirmation\": user.password,\r\n            \"role_id\": user.role_id\r\n        }),\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'Authorization': 'bearer ' + localStorage.getItem('token')\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport async function deleteUser(id: number) {\r\n    return await fetch(Url.DELETE_USER_URL.replace(Url.ARG_USER_ID, id.toString()), {\r\n        mode: \"cors\",\r\n        method: 'DELETE',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer\" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then(response => response.json()).catch(err => err);\r\n}\r\n\r\nexport async function updateUser(user: Users) {\r\n    return await fetch(Url.PUT_USER_URL, {\r\n        mode: \"cors\",\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n            \"id\": user.id,\r\n            \"login\": user.login,\r\n            \"role_id\": user.role_id,\r\n        }),\r\n        headers: {\r\n            'Authorization': localStorage.getItem('token') ? \"bearer\" + localStorage.getItem('token') : \"0\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\nexport async function updateOneUserPassword(user: Users) {\r\n    return await fetch('http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/users/password/put', {\r\n        mode: \"cors\",\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n            \"id\": user.id,\r\n            \"password\": user.password\r\n        }),\r\n        headers: {\r\n            'Authorization': localStorage.getItem('token') ? \"bearer\" + localStorage.getItem('token') : \"0\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport async function getAllRole() : Promise<Role[]> {\r\n    return await fetch('http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/users/getAllRole', {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {\r\n            'Authorization': localStorage.getItem('token') ? \"bearer\" + localStorage.getItem('token') : \"0\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    }).then(response => response.json());\r\n}\r\n\r\n// Data\r\n\r\nexport async function postUserData(data: UsersData) {\r\n    return await fetch(Url.POST_USER_DATA_URL, {\r\n        mode: \"cors\",\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            'userData_userId': data.userData_userId,\r\n            'userData_key': data.userData_key,\r\n            'userData_column': data.userData_column\r\n        }),\r\n        headers: {\r\n            'Authorization': localStorage.getItem('token') ? 'bearer ' + localStorage.getItem('token') : '0',\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport async function getAllUsersData() {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/users/data\", {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then(response => response.json())\r\n\r\n}\r\n\r\nexport async function getOneUsersData(id: number) {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/users/data/\" + id, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then(response => response.json())\r\n\r\n}\r\n\r\nexport async function updateUserData(data: UsersData) {\r\n    return await fetch(Url.PUT_USER_DATA_URL, {\r\n        mode: \"cors\",\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n            'userData_id': data.userData_id,\r\n            'userData_userId': data.userData_userId,\r\n            'userData_key': data.userData_key,\r\n            'userData_column': data.userData_column\r\n        }),\r\n        headers: {\r\n            'Authorization': localStorage.getItem('token') ? \"bearer\" + localStorage.getItem('token') : \"0\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n","export default __webpack_public_path__ + \"static/media/HeimdallContructionSansFond.3985e122.png\";","import React, { FunctionComponent, useState } from \"react\";\r\nimport { useHistory } from 'react-router-dom';\r\nimport {  login } from '../../services/usersServices';\r\nimport \"../../pages/Login.css\";\r\nimport { useUser } from \"../../contexts/userContext\";\r\nimport logo from \"../../assets/img/HeimdallContructionSansFond.png\"\r\nimport { toast, ToastContainer } from \"react-toastify\";\r\n\r\ntype Field = {\r\n    value?: any,\r\n    error?: string,\r\n    isValid?: boolean\r\n};\r\n\r\ntype Form = {\r\n    login: Field,\r\n    password: Field\r\n}\r\n\r\nconst LoginForm: FunctionComponent = () => {\r\n\r\n    const history = useHistory();\r\n    const handleUserContext = useUser();\r\n\r\n    const [form, setForm] = useState<Form>({\r\n        login: { value: '' },\r\n        password: { value: '' },\r\n    });\r\n\r\n\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n        const fieldName: string = e.target.name;\r\n        const fieldValue: string = e.target.value;\r\n        const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n        setForm({ ...form, ...newField });\r\n    }\r\n\r\n    const validateForm = () => {\r\n\r\n        let newForm: Form = form;\r\n\r\n        // Validator username\r\n        if (form.login.value.length < 3) {\r\n            const errorMsg: string = 'Votre login doit faire au moins 3 caractères de long.';\r\n            const newField: Field = { value: form.login.value, error: errorMsg, isValid: false };\r\n            form.login.error = errorMsg    \r\n            newForm = { ...newForm, ...{ username: newField } };\r\n        } else {\r\n            const newField: Field = { value: form.login.value, error: '', isValid: true };\r\n            newForm = { ...newForm, ...{ login: newField } };\r\n        }\r\n\r\n        // Validator password\r\n        if (form.password.value.length < 3) {\r\n            const errorMsg: string = 'Votre mot de passe doit faire au moins 3 caractères de long.';\r\n            const newField: Field = { value: form.password.value, error: errorMsg, isValid: false };\r\n            form.password.error = errorMsg   \r\n            newForm = { ...newForm, ...{ password: newField } };\r\n        } else {\r\n            const newField: Field = { value: form.password.value, error: '', isValid: true };\r\n            newForm = { ...newForm, ...{ password: newField } };\r\n        }\r\n\r\n        setForm(newForm);\r\n\r\n        return newForm.login.isValid && newForm.password.isValid;\r\n    }\r\n\r\n    const handleSubmit = (e: React.FormEvent<HTMLFormElement>) => {\r\n        \r\n        e.preventDefault();\r\n        const isFormValid = validateForm();\r\n        if (isFormValid) {\r\n\r\n            var loginTest = form.login.value;\r\n            var passwordTest = form.password.value;\r\n\r\n            login(loginTest, passwordTest).then(isAuthenticated => {\r\n                if (!isAuthenticated) {\r\n                    toast.error(\"🔐 Identifiant ou mot de passe incorrect.\");\r\n                    return;\r\n                }\r\n                handleUserContext!.dispatch({type: \"setUser\", payload: { id: isAuthenticated.id, role: isAuthenticated.role_id}});\r\n                history.push('/');\r\n            });\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n           <ToastContainer  \r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                toastClassName=\"dark-toast\"\r\n                theme=\"dark\"/>\r\n            <div className=\"d-flex align-items-stretch auth auth-img-bg h-100\">\r\n                <div className=\"row flex-grow w-100 m-0\">\r\n                    <div className=\"col-lg-6 d-flex align-items-center justify-content-center\">\r\n                        <div className=\"auth-form-transparent text-left p-3\">\r\n                            <div className=\"brand-logo text-center\">\r\n                                <img src={logo} alt=\"logo\" />\r\n                            </div>\r\n                            <h4 className=\"text-center\">Welcome!</h4>\r\n                            <h6 className=\"font-weight-light text-center\">Happy to see you again!</h6>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                            <form onSubmit={(e) => handleSubmit(e)} className=\"pt-3 w-80 text-center\" id=\"fromLogin\">\r\n                                <div className=\"card hoverable\">\r\n                                    <div className=\"card-stacked\">\r\n                                        <div className=\"card-content\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"login\" className=\"text-dark\">Identifiant</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <div className=\"d-flex w-100\">\r\n                                                        <i className=\"material-icons\" id=\"iconFrom\">person</i>\r\n                                                        <input id=\"login\" name=\"login\" type=\"text\" className=\"form-control form-control-lg border-left-0\" placeholder=\"\" value={form.login.value}\r\n                                                            onChange={e => handleInputChange(e)} />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {form.login.error ?\r\n                                                            <p className=\"text-danger\">{form.login.error}</p>\r\n                                                            :\r\n                                                            ''\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label className=\"text-dark\">Mot de passe</label>\r\n                                                <div className=\"input-group\">\r\n                                                    <div className=\"input-group-prepend bg-transparent\">\r\n                                                    </div>\r\n                                                    <div className=\"d-flex w-100\">\r\n                                                        <i className=\"material-icons\" id=\"iconFrom\">vpn_key</i>\r\n                                                        <input type=\"password\" name=\"password\" className=\"form-control form-control-lg border-left-0\" id=\"password\" placeholder=\"\" value={form.password.value} onChange={e => handleInputChange(e)} />\r\n                                                    </div>\r\n                                                    <div>\r\n                                                        {form.password.error ?\r\n                                                            <p className=\"text-danger\">{form.password.error}</p>\r\n                                                            :\r\n                                                            ''\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"card-action\">\r\n                                            <button type=\"submit\" className=\"btn btn-lg btnLogin\">Valider</button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-lg-6 login-half-bg d-flex flex-row\">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n","import React, {FunctionComponent} from 'react';\r\nimport LoginForm from '../components/user/loginForm';\r\nimport \"./Login.css\";\r\n\r\nconst Login: FunctionComponent = () => {\r\n    return (\r\n        <>\r\n         \r\n                            <LoginForm />\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","export default class Estimate {\r\n    id: number;\r\n    place: string;\r\n    budget: string;\r\n    firstname: string;\r\n    lastname: string;\r\n    email: string;\r\n    tel: string;\r\n    desc: string;\r\n\r\n    constructor(\r\n        id: number = -1,\r\n        place: string = 'Le Havre',\r\n        budget: string = '100000',\r\n        firstname: string = 'Toto',\r\n        lastname: string = 'Toto',\r\n        email: string = 'toto@email.com',\r\n        tel: string = '0606060606',\r\n        desc: string = 'Décrivez votre projet'\r\n    ) {\r\n        this.id = id;\r\n        this.budget = budget;\r\n        this.place = place;\r\n        this.firstname = firstname;\r\n        this.lastname = lastname;\r\n        this.email = email;\r\n        this.tel = tel;\r\n        this.desc = desc;\r\n    }\r\n}\r\n","import Estimate from \"../models/estimate\";\r\n\r\n\r\n    export async function addEstimate(estimate: Estimate){\r\n        return await fetch(`http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/heimdallAPI/public/api/v1/estimate/post`, {\r\n            \"method\": \"POST\",\r\n            \"headers\": {\r\n                \"Content-Type\": \"application/json\",\r\n                \"accept\": \"application/json\"\r\n            },\r\n            \"body\": JSON.stringify({\r\n                \"place\": estimate.place,\r\n                \"budget\": estimate.budget,\r\n                \"firstname\": estimate.firstname,\r\n                \"lastname\": estimate.lastname,\r\n                \"email\":estimate.email,\r\n                \"phoneNumber\":estimate.budget,\r\n                \"description\":estimate.desc\r\n            })\r\n        }).then(response => response.json()).catch(error => error);\r\n    }","import React, { FunctionComponent, useState } from \"react\";\r\nimport Estimate from \"../../models/estimate\";\r\nimport { addEstimate } from \"../../services/estimate-service\";\r\nimport \"../../pages/estimate.css\";\r\nimport { send } from 'emailjs-com';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\n\r\ntype Props = {\r\n    estimate: Estimate\r\n}\r\n\r\nconst EstimateForm: FunctionComponent<Props> = () => {\r\n\r\n    const [place, setPlace] = useState(\"\");\r\n    const [budget, setBudget] = useState(\"\");\r\n    const [firstname, setFirstname] = useState(\"\");\r\n    const [lastname, setLastname] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [tel, setTel] = useState(\"\");\r\n    const [desc, setDesc] = useState(\"\");\r\n    \r\n\r\n\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n\r\n        const estimate = new Estimate();\r\n        estimate.place = place;\r\n        estimate.budget = budget;\r\n        estimate.firstname = firstname;\r\n        estimate.lastname = lastname;\r\n        estimate.email = email;\r\n        estimate.tel = tel;\r\n        estimate.desc = desc;\r\n       \r\n        send(\r\n            'service_p17tyxn',\r\n            'template_usnf46z',\r\n            {\r\n                from_name: 'Heimdall Construction',\r\n                to_name: estimate.firstname + \" \"+ estimate.lastname,\r\n                message: 'Vous souhaiter un chantier a ladresse suivante : '+ estimate.place + \" pour un budget max de \"+estimate.budget\r\n                +\" qui a pour descritpion \" + estimate.desc + \" Vous etes joignable par mail : \" + estimate.email + \" ou au numero : \" + estimate.tel,\r\n                reply_to: estimate.email,\r\n                \r\n            },\r\n            'user_RnDipXJGB3Kv9T7gL2Ih0'\r\n        ).then((response) => {\r\n            console.log('SUCCESS!', response.status, response.text);\r\n            toast.success('Message envoyer avec succès👍', {});\r\n        })\r\n            .catch((err) => {\r\n                console.log('FAILED...', err);\r\n                toast.warn(\"Le formulaire n'est pas complet !👎\", {});\r\n            })\r\n        \r\n          await addEstimate(estimate);\r\n    }\r\n\r\n\r\n    return (\r\n\r\n        <form className=\"mt-5\" id=\"formEstimate\" onSubmit={e => handleSubmit(e)}>\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                toastClassName=\"dark-toast\"\r\n                theme=\"dark\" />\r\n\r\n            <div className=\"row\">\r\n                <div className=\"col s12 m8\">\r\n                    <div className=\"card hoverable\">\r\n                        <div className=\"card-stacked\">\r\n                            <div className=\"card-content\">\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"place\" className=\"text-dark\">Lieu de construction souhaitée</label>\r\n                                    <input id=\"place\" className=\"form-control\" name=\"place\"\r\n                                        value={place} onChange={e => setPlace(e.target.value)} />\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"budget\" className=\"text-dark\">Budget maximum total</label>\r\n                                    <input id=\"budget\" className=\"form-control\" name=\"budget\"\r\n                                        value={budget} onChange={e => setBudget(e.target.value)} />\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"firstname\" className=\"text-dark\">Prénom</label>\r\n                                    <input id=\"firstname\" className=\"form-control\" name=\"firstname\"\r\n                                        value={firstname} onChange={e => setFirstname(e.target.value)} />\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"lastname\" className=\"text-dark\">Nom</label>\r\n                                    <input id=\"lastname\" className=\"form-control\" name=\"lastname\"\r\n                                        value={lastname} onChange={e => setLastname(e.target.value)} />\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"email\" className=\"text-dark\">Email</label>\r\n                                    <input id=\"email\" className=\"form-control\" name=\"email\"\r\n                                        value={email} onChange={e => setEmail(e.target.value)} />\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"tel\" className=\"text-dark\">Téléphone</label>\r\n                                    <input id=\"tel\" className=\"form-control\" name=\"tel\"\r\n                                        value={tel} onChange={e => setTel(e.target.value)} />\r\n\r\n                                </div>\r\n                                <div className=\"form-group\">\r\n                                    <label htmlFor=\"desc\" className=\"text-dark\">Décrivez votre projet</label>\r\n                                    <textarea id=\"desc\" className=\"form-control styleArea\" name=\"desc\"\r\n                                        value={desc} onChange={e => setDesc(e.target.value)}>\r\n                                    </textarea>\r\n\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"card-action center\">\r\n                                <button type=\"submit\" className=\"btn btn-lg btnLogin\">Valider</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default EstimateForm;\r\n","import React, { FunctionComponent, useState } from 'react';\r\nimport EstimateForm from \"../components/estimate/estimate-form\";\r\nimport Estimate from \"../models/estimate\";\r\nimport \"./estimate.css\";\r\n\r\nconst EstimateAdd: FunctionComponent = () => {\r\n    const [id] = useState<number>(new Date().getTime());\r\n    const [estimate] = useState<Estimate>(new Estimate(id));\r\n\r\n    return (\r\n        <>\r\n            <div className=\"heroEstimate\">\r\n                <div id=\"materialFristDiv\">\r\n                    <div className=\"container mt-5\">\r\n                        <h2 className=\"header center estimateStyleTitle\">Demande de devis</h2>\r\n                        <EstimateForm estimate={estimate} />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EstimateAdd;\r\n","import TaskData from \"../models/taskData\";\r\nimport Tasks from \"../models/tasks\";\r\n\r\n\r\nexport  async function getAllTasks(): Promise<Tasks[]> {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings\", {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n    }).then(response =>  response.json());\r\n  }\r\n\r\n  export  async function getAllDataTask(id : Number): Promise<TaskData[]> {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings/tasks/data/\"+id, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n    }).then(response =>  response.json());\r\n  }\r\n\r\n  export  async function getDataByUser(id : number): Promise<TaskData[]> {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings/tasks/data/user/\"+id, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n    }).then(response =>  response.json());\r\n  }\r\n\r\n  export  async function getTaskById(id : number): Promise<Tasks[]> {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings/tasks/search/\"+id, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n    }).then(response =>  response.json());\r\n  }\r\n\r\n  export  async function getTaskByUserId(id : number): Promise<Tasks[]> {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings/tasks/taskByUser/\"+id, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n    }).then(response => {\r\n      if(response.status === 204){\r\n              return 0\r\n      }else{\r\n              return response.json()\r\n      }\r\n });\r\n  }\r\n\r\n  export async function supprTask(id : number) {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings/tasks/delete/\"+id, {\r\n        mode: \"cors\",\r\n        method: 'DELETE',\r\n        headers: {'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n    }).then(response =>  response.json());\r\n  }\r\n\r\n  export async function addTask(task){\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings/tasks\", {\r\n      mode: \"cors\",\r\n      method: 'POST',\r\n      body : JSON.stringify(task),\r\n      headers: {'Content-Type': 'application/json','Authorization': 'bearer ' + localStorage.getItem('token')}\r\n  }).then(response =>  response.json());\r\n  }\r\n\r\n  export async function modifyTask(task){\r\n    \r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings/tasks\", {\r\n      mode: \"cors\",\r\n      method: 'PUT',\r\n      body : JSON.stringify(task),\r\n      headers: {'Content-Type': 'application/json','Authorization': 'bearer ' + localStorage.getItem('token')}\r\n  }).then(response =>  response.json());\r\n  }\r\n\r\n  export async function addTaskData(data){\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings/tasks/data\", {\r\n      mode: \"cors\",\r\n      method: 'POST',\r\n      body : JSON.stringify(data),\r\n      headers: {'Content-Type': 'application/json','Authorization': 'bearer ' + localStorage.getItem('token')}\r\n  }).then(response =>  response.json());\r\n  }\r\n\r\n  export  async function getTaskDataById(id : number){\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings/tasks/data/\"+id, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n    }).then(response =>  response.json());\r\n  }\r\n\r\n  export async function supprTaskData(id : number) {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings/tasks/data/del/\"+id, {\r\n        mode: \"cors\",\r\n        method: 'DELETE',\r\n        headers: {'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n    }).then(response =>  response.json());\r\n  }\r\n\r\n  export async function modifyTaskData(data){\r\n    \r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings/tasks/data\", {\r\n      mode: \"cors\",\r\n      method: 'PUT',\r\n      body : JSON.stringify(data),\r\n      headers: {'Content-Type': 'application/json','Authorization': 'bearer ' + localStorage.getItem('token')}\r\n  }).then(response =>  response.json());\r\n  }\r\n \r\n  export async function supprTaskDataByTaskId(id : number) {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/plannings/tasks/data/delByTaskId/\"+id, {\r\n        mode: \"cors\",\r\n        method: 'DELETE',\r\n        headers: {'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n    }).then(response =>  response.json());\r\n  }\r\n\r\n  \r\n","\r\nenum GetRole {\r\n    UNDEFINED,\r\n    CUSTOMER,\r\n    EMPLOYEE,\r\n    DIRECTOR,\r\n    MANAGER\r\n}\r\nclass Role {\r\n    hc_role_id: number;\r\n    hc_role_name: string;\r\n\r\n    constructor(\r\n        hc_role_id = 0,\r\n        hc_role_name = ''\r\n    ) {\r\n        this.hc_role_id = hc_role_id;\r\n        this.hc_role_name = hc_role_name;\r\n    }\r\n\r\n    public static getStringEnum(role: GetRole) {\r\n        switch (role) {\r\n            case GetRole.CUSTOMER:\r\n                return 'Client';\r\n            case GetRole.EMPLOYEE:\r\n                return 'Employée';\r\n            case GetRole.DIRECTOR:\r\n                return 'Directeur';\r\n            case GetRole.MANAGER:\r\n                return 'Chef de chantier';\r\n            case GetRole.UNDEFINED:\r\n                return 'Sans emploi';\r\n        }\r\n    }\r\n\r\n    public static getRoleArray(): GetRole[]\r\n    {\r\n        return [\r\n            GetRole.CUSTOMER,\r\n            GetRole.EMPLOYEE,\r\n            GetRole.DIRECTOR,\r\n            GetRole.MANAGER\r\n        ]\r\n    }\r\n}\r\n\r\n\r\n\r\nexport {Role, GetRole};\r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport Task from \"../../models/tasks\";\r\nimport { Calendar, momentLocalizer, Event } from 'react-big-calendar'\r\nimport 'react-big-calendar/lib/css/react-big-calendar.css'\r\nimport '../../components/planning/style_planning.css'\r\nimport moment from \"moment\";\r\nimport { getAllDataTask } from \"../../services/tasksServices\";\r\nimport { Button, Modal } from \"react-bootstrap\";\r\nimport TaskData from \"../../models/taskData\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\ntype Props = {\r\n    Task: Task[]\r\n}\r\nconst Planning: FunctionComponent<Props> = ({ Task, supprimer, modify }) => {\r\n   \r\n    const localizer = momentLocalizer(moment);\r\n    const history = useHistory();\r\n    const [taskData, setTaskData] = useState<TaskData[]>([])\r\n    const [taskId, setTaskId] = useState<number>()\r\n    const [task, setTask] = useState<Task[]>([])\r\n    var buttonMoi : HTMLButtonElement;\r\n    var buttonAgenda : HTMLButtonElement;\r\n    useEffect(() => {\r\n        \r\n        let collection = document.getElementsByTagName(\"button\")\r\n        for (let i = 0; i < collection.length; i++) {\r\n            if (collection[i].innerHTML === \"Week\" || collection[i].innerHTML === \"Day\" || collection[i].innerHTML === \"Today\") {\r\n                collection[i].style.display = \"none\"\r\n            }else if(collection[i].innerHTML === \"Month\" ){\r\n                collection[i].innerHTML = \"Mois\"\r\n                buttonMoi = collection[i]\r\n            }\r\n            else if(collection[i].innerHTML === \"Mois\" ){\r\n                collection[i].innerHTML = \"Mois\"\r\n                buttonMoi = collection[i]\r\n            }\r\n            else if (collection[i].innerHTML === \"Next\"){\r\n                collection[i].innerHTML = \"Suiv.\"\r\n            }\r\n            else if (collection[i].innerHTML === \"Back\"){\r\n                collection[i].innerHTML = \"Arr.\"\r\n            }else if(collection[i].innerHTML === \"Agenda\"){\r\n                buttonAgenda = collection[i]\r\n            }\r\n            var nameMonth = document.getElementsByClassName(\"rbc-toolbar-label\")\r\n            for (let i = 0; i < nameMonth.length; i++) {\r\n                console.log(nameMonth[i])\r\n            }\r\n        }\r\n        \r\n        buttonMoi ? buttonMoi.click() : console.log()\r\n        buttonAgenda ? buttonAgenda.click() : console.log()\r\n        buttonMoi ? buttonMoi.click() : console.log()\r\n        setTimeout(()=>{\r\n            buttonMoi ? buttonMoi.click() : console.log()\r\n            var tabTextJour = [\"Dimanche\",\"Lundi\",\"Mardi\",\"mercredi\",\"Jeudi\",\"Vendredi\",\"Samedi\"]\r\n            var divHeader = document.getElementsByClassName(\"rbc-header\")\r\n            for (let i = 0; i < divHeader.length; i++) {\r\n                var elem = divHeader[i].childNodes\r\n                for (let j=0;j<elem.length;j++){\r\n                    elem[j].innerHTML = tabTextJour[i]\r\n                }\r\n            };\r\n        }\r\n            ,100)\r\n    }, []);\r\n\r\n    function detailTask(Task) {\r\n\r\n        setShow(true)\r\n        setTaskId(Task.ressourceId)\r\n        setTask(Task)\r\n        getAllDataTask(Task.ressourceId).then((data) => {\r\n\r\n            setTaskData(data);\r\n\r\n        })\r\n\r\n    }\r\n\r\n    function suppressionData() {\r\n        supprimer(taskId)\r\n        setShow(false)\r\n        history.push('/planning')\r\n    }\r\n\r\n    function modifierTask() {\r\n        modify(taskId, task)\r\n    }\r\n    \r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    let modalDetails = document.getElementById('modalDetails')\r\n    return (\r\n        <div className=\"\">\r\n            {console.log(Task)}\r\n            <div className=\"hero-auto\">\r\n                <div className=\"heroProblemeEnfant\">\r\n                    <h1 className=\"center pt-5 mt-5 text-light\">Agenda</h1>\r\n                    <Link className=\"btn-floating btn-large waves-effect waves-light green z-deepth-3\"\r\n                        style={{ position: 'fixed', top: '90px', right: '25px' }}\r\n                        to=\"/planning/add\">\r\n                        <i className=\"material-icons\">add</i>\r\n                    </Link>\r\n                    <div className=\"container\">\r\n                        <Modal show={show} onHide={handleClose} className=\"deleteModal\" animation={false}>\r\n                            <div className=\"text-center\"><Modal.Body>Details de la tache</Modal.Body>\r\n                                <div id=\"modalDetails\">\r\n                                    {taskData.map((plop) => {\r\n                                        if (modalDetails) {\r\n                                            if(plop.taskData_key === \"site_id\"){\r\n                                                modalDetails.append(`Id du site : `)\r\n                                                modalDetails.append(`${plop.taskData_column}`)\r\n                                            }else if (plop.taskData_key === \"nameUser\"){\r\n                                                modalDetails.append(`Nom : `)\r\n                                                modalDetails.append(`${plop.taskData_column}`)\r\n                                                \r\n                                            }else if (plop.taskData_key === \"Description\"){\r\n                                                modalDetails.append(`Details : `)\r\n                                                modalDetails.append(`${plop.taskData_column}`)\r\n                                            }\r\n                                            \r\n                                        }\r\n                                    }\r\n                                    )}\r\n                                </div>\r\n                                <div className=\"d-flex justify-content-around\">\r\n                                    <Button variant=\"secondary\" onClick={modifierTask}>\r\n                                        Modifier\r\n                                    </Button>\r\n                                    <Button variant=\"secondary\" onClick={suppressionData}>\r\n                                        Supprimer\r\n                                    </Button>\r\n                                    <Button variant=\"secondary\" onClick={handleClose}>\r\n                                        Annuler\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </Modal>\r\n                        <div className=\"row\">\r\n\r\n                            <Calendar\r\n                                localizer={localizer}\r\n                                defaultDate={new Date()}\r\n                                defaultView=\"month\"\r\n                                events={Task}\r\n                                onSelectEvent={(Task: Event[]) => detailTask(Task)}\r\n                                style={{ height: \"100vh\" }}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport default Planning;","import React, {FunctionComponent,useState,useEffect} from \"react\";\r\nimport {   getTaskByUserId, supprTask} from \"../../services/tasksServices\";\r\nimport Planning from \"./planning\";\r\nimport { Event } from 'react-big-calendar'\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst ContainerPlanning: FunctionComponent = () => {\r\n\r\n    const history = useHistory();\r\n    const id_user  = localStorage.getItem(\"user_id\");\r\n\r\n\r\n  const [events,setEvents] = useState<Event[]>([]);\r\n\r\n  let events2 : Event[] = []\r\n  useEffect(() => {\r\n      if(id_user){\r\n        getTaskByUserId(id_user).then((task) => {\r\n          if(task !== 0){\r\n            task.map((data) =>\r\n            events.push({\r\n              title:data.task_title,\r\n              start:data.task_dateStart,\r\n              end:data.task_dateEnd,\r\n              ressourceId:data.task_id\r\n            })\r\n          )\r\n          }\r\n          \r\n        });\r\n      }\r\n      \r\n  }, [events , id_user]);\r\n\r\n  function Supprimer(id : number){\r\n    setEvents([])\r\n    supprTask(id).then(()=>{\r\n      if(id_user){\r\n        getTaskByUserId(id_user).then((task) => {\r\n          task.map((data) =>\r\n            events2.push({\r\n              title:data.task_title,\r\n              start:data.task_dateStart,\r\n              end:data.task_dateEnd,\r\n              ressourceId:data.task_id\r\n            })\r\n          )\r\n        });\r\n      }\r\n      setEvents(events2)\r\n    })\r\n    \r\n  }\r\n\r\n  function Modifier(id : number){\r\n    history.push(\"/planning/modify/\"+id)  \r\n  }\r\n  \r\n    return (\r\n      <Planning Task={events} supprimer={Supprimer} modify={Modifier}/>\r\n    );\r\n  }\r\n    \r\n  export default ContainerPlanning;\r\n","export enum MaterialCategory {\r\n    UNDEFINED,\r\n    PELLE,\r\n    MARTEAU,\r\n    PERCEUSE,\r\n    VEHICULE,\r\n    TRANSPALETTE,\r\n    BROUETTE,\r\n    DIABLE\r\n}\r\nexport class MaterialCategoryUtils {\r\n\r\n    public static getCategoriesArray(): MaterialCategory[] {\r\n        return [\r\n            MaterialCategory.PELLE,\r\n            MaterialCategory.MARTEAU,\r\n            MaterialCategory.PERCEUSE,\r\n            MaterialCategory.VEHICULE,\r\n            MaterialCategory.TRANSPALETTE,\r\n            MaterialCategory.BROUETTE,\r\n            MaterialCategory.DIABLE\r\n        ];\r\n    }\r\n\r\n    public static getTextCategory( cat: MaterialCategory ): string {\r\n        switch (cat) {\r\n            case MaterialCategory.BROUETTE:\r\n                return 'Brouette';\r\n            case MaterialCategory.DIABLE:\r\n                return 'Diable';\r\n            case MaterialCategory.MARTEAU:\r\n                return 'Marteau';\r\n            case MaterialCategory.TRANSPALETTE:\r\n                return 'Transpalette';\r\n            case MaterialCategory.PERCEUSE:\r\n                return 'Perceuse';\r\n            case MaterialCategory.PELLE:\r\n                return 'Pelle';\r\n            case MaterialCategory.VEHICULE:\r\n                return 'Véhicule';\r\n            case MaterialCategory.UNDEFINED:\r\n                return 'undefined';\r\n        }\r\n    }\r\n}\r\n","import React, {useState, useEffect, FunctionComponent} from 'react';\r\nimport Users from '../../models/Users';\r\nimport UsersData from '../../models/UsersData';\r\nimport Moment from 'moment';\r\nimport \"../../pages/CheckProfile.css\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport {Button} from 'react-bootstrap';\r\nimport {getOneUsersData, deleteUser, updateOneUserPassword} from '../../services/usersServices';\r\nimport {useHistory} from 'react-router';\r\nimport {Modal} from 'react-bootstrap';\r\nimport {Role, GetRole} from '../../models/role';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntype Props = {\r\n    user: Users\r\n};\r\n\r\nconst ProfileDetail: FunctionComponent<Props> = ({user}) => {\r\n    const history = useHistory();\r\n    const updateUser = (id: number) => {\r\n        history.push(`/users/update/${id}`);\r\n    }\r\n    const [show, setShow] = useState(false);\r\n    const handleClose = () => setShow(false);\r\n    const [showUpdate, setShowUpdate] = useState(false);\r\n    const handleCloseUpdate = () => setShowUpdate(false);\r\n\r\n\r\n    const updatePwd = () => {\r\n        setPassword('');\r\n        setConfirmPassword('');\r\n        setShowUpdate(true);\r\n    }\r\n\r\n    const [password, setPassword] = useState('');\r\n    const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n    const handlePwdChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        switch (e.target.name) {\r\n            case 'password':\r\n                setPassword(e.target.value)\r\n                break;\r\n            case 'confirmPassword':\r\n                setConfirmPassword(e.target.value);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const disableSubmit = () => {\r\n        let disabled: boolean = true;\r\n        if (validatePwd()) {\r\n            if (password === confirmPassword) {\r\n                disabled = false;\r\n            } else {\r\n                disabled = true;\r\n            }\r\n        }\r\n        return disabled;\r\n    }\r\n\r\n    const validatePwd = () => {\r\n        return (password && confirmPassword);\r\n    }\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (true) {\r\n            user.password = password;\r\n            await updateOneUserPassword(user).then(e => e);\r\n            setShowUpdate(false);\r\n            toast.success('mot de passe modifié avec succès👍', {});\r\n        } else {\r\n            toast.warn(\"Le formulaire n'est pas complet !👎\", {});\r\n        }\r\n    }\r\n    const checkRole = (role: GetRole) => {\r\n        switch (role) {\r\n            case GetRole.DIRECTOR:\r\n            case GetRole.MANAGER:\r\n                return true;\r\n            case GetRole.CUSTOMER:\r\n            case GetRole.EMPLOYEE:\r\n            case GetRole.UNDEFINED:\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n\r\n    function openModalDelete() {\r\n        setShow(true);\r\n    }\r\n\r\n    async function confirmDelete(id: number) {\r\n        await deleteUser(id).catch(e => console.log(e));\r\n        toast.success('Utilisateur supprimé avec succès👍', {});\r\n        setShow(false);\r\n        setTimeout(function () {\r\n            window.location.reload();\r\n        }, 3000);\r\n    }\r\n\r\n\r\n    if (checkRole(Number(localStorage.getItem('user_role')))) {\r\n        return (\r\n            <>\r\n\r\n                <Modal show={show} onHide={handleClose} className=\"deleteModal\" animation={false}>\r\n                    <div className=\"text-center\"><Modal.Body>Etes-vous sur de vouloir supprimer l'utilisateur\r\n                        \"{user.login}\"</Modal.Body>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <Button variant=\"secondary\" onClick={handleClose}>Annuler</Button>\r\n                            <Button variant=\"danger\" onClick={() => confirmDelete(user.id)}>Supprimer</Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <ToastContainer\r\n                    position=\"top-center\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                    toastClassName=\"dark-toast\"\r\n                    theme=\"dark\"\r\n                    z-index=\"9999999\"\r\n                />\r\n                <Modal show={showUpdate} onHide={handleCloseUpdate} className=\"deleteModal\" animation={false}>\r\n                    <div className=\"text-center\">\r\n                        <Modal.Body>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <form onSubmit={(e) => handleSubmit(e)}>\r\n                                    <div>\r\n                                        <label className=\"text-dark\">Mot de passe</label>\r\n                                        <input type=\"password\" value={password} name=\"password\"\r\n                                               onChange={e => handlePwdChange(e)}/>\r\n                                        <label className=\"text-dark\">Confirmer le mot de passe</label>\r\n                                        <input type=\"password\" value={confirmPassword} name=\"confirmPassword\"\r\n                                               onChange={e => handlePwdChange(e)}/>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-around\">\r\n                                        <Button type=\"submit\" className=\"btn btn-lg btnLogin\"\r\n                                                disabled={disableSubmit()}> Valider </Button>\r\n                                        <Button className=\"btn btn-lg btnLogin\"\r\n                                                onClick={handleCloseUpdate}> Annuler </Button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <div className=\"page-content page-container\" id=\"page-content\">\r\n                    <div className=\"padding\">\r\n                        <div className=\"row container d-flex justify-content-center\">\r\n                            <div className=\"col-xl-12 col-md-12\">\r\n                                <div className=\"card user-card-full\" id='cardProfil'>\r\n                                    <div className=\"row mb-3\">\r\n                                        <div className=\"col-sm-4 bg-c-lite-green user-profile\">\r\n                                            <div className=\"card-block text-center text-white\">\r\n                                                <div className=\"m-b-25\"><img\r\n                                                    src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\r\n                                                    className=\"img-radius\" alt=\"User-Profile\"/></div>\r\n                                                <h6 className=\"f-w-600\">Profil {user.id}</h6>\r\n                                                {user && user.data ?\r\n                                                    user.data.map(userData => (\r\n                                                    <p className=\"\">{userData.userData_key} : {userData.userData_column}</p>\r\n                                                )): ''}\r\n                                                <Button variant=\"outline-success\" type=\"submit\"\r\n                                                        className=\"mt-3 m-3 btn-floating btn-small waves-effect waves-light\"\r\n                                                        onClick={() => updateUser(user.id)}>\r\n                                                    <i className=\"material-icons\">border_color</i>\r\n                                                </Button>\r\n                                                <Button variant=\"outline-danger\" type=\"submit\"\r\n                                                        className=\"mt-3 m-3 btn-floating btn-small waves-effect waves-light\"\r\n                                                        onClick={() => openModalDelete()}>\r\n                                                    <i className=\"material-icons\">delete</i>\r\n                                                </Button>\r\n                                                <i className=\"mdi mdi-square-edit-outline feather icon-edit m-t-10 f-16\"></i>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <div className=\"card-block\">\r\n                                                <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600 textStyle\">Information</h6>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <p className=\"m-b-10 f-w-600\">Email :</p>\r\n                                                        <h6 className=\"text-muted f-w-400\">contact@heimdall.fr</h6>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <p className=\"m-b-10 f-w-600\">Tél :</p>\r\n                                                        <h6 className=\"text-muted f-w-400\">0235350206</h6>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <p className=\"m-b-10 f-w-600\">Rôle :</p>\r\n                                                        <h6 className=\"text-muted f-w-400\">\r\n                                                            {Role.getStringEnum(user.role_id)}\r\n                                                        </h6>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <p className=\"m-b-10 f-w-600\">Login :</p>\r\n                                                        <h6 className=\"text-muted f-w-400\">{user.login}</h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <h6 className=\"m-b-20 m-t-40 p-b-5 b-b-default f-w-600 textStyle\">Autres</h6>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <p className=\"m-b-10 f-w-600\">Crée le :</p>\r\n                                                        <h6 className=\"text-muted f-w-400\">{Moment(user.created_at.date).format('DD/MM/YYYY')}</h6>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <p className=\"m-b-10 f-w-600\">Modifié le :</p>\r\n                                                        <h6 className=\"text-muted f-w-400\">{user.updated_at ? Moment(user.updated_at.date).format('DD/MM/YYYY') : ''}</h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div\r\n                                                    className=\"d-flex justify-content-center text-center align-items-center\">\r\n                                                    <h6 className=\"text-muted f-w-400 text-center\">Mot de passe\r\n                                                        perdu</h6>\r\n                                                    <Button variant=\"outline-success\" type=\"submit\"\r\n                                                            className=\"mt-3 m-3 btn-floating btn-small waves-effect waves-light green z-deepth-3\"\r\n                                                            onClick={updatePwd}>\r\n                                                        <i className=\"material-icons\">border_color</i>\r\n                                                    </Button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    } else {\r\n        return (\r\n            <>\r\n\r\n                <Modal show={show} onHide={handleClose} className=\"deleteModal\" animation={false}>\r\n                    <div className=\"text-center\"><Modal.Body>Etes-vous sur de vouloir supprimer\r\n                        l'utilisateur {user.login} </Modal.Body>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <Button variant=\"secondary\" onClick={handleClose}>Annuler</Button>\r\n                            <Button variant=\"danger\" onClick={() => confirmDelete(user.id)}>Supprimer</Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <Modal show={showUpdate} onHide={handleCloseUpdate} className=\"deleteModal\" animation={false}>\r\n                    <div className=\"text-center\">\r\n                        <Modal.Body>\r\n                            <div className=\"d-flex justify-content-center\">\r\n                                <form onSubmit={(e) => handleSubmit(e)}>\r\n                                    <div>\r\n                                        <label className=\"text-dark textStyle\">Mot de passe</label>\r\n                                        <input type=\"password\" value={password} name=\"password\"\r\n                                               onChange={e => handlePwdChange(e)}/>\r\n                                        <label className=\"text-dark textStyle\">Confirmer le mot de passe</label>\r\n                                        <input type=\"password\" value={confirmPassword} name=\"confirmPassword\"\r\n                                               onChange={e => handlePwdChange(e)}/>\r\n                                    </div>\r\n                                    <div className=\"d-flex justify-content-around\">\r\n                                        <Button type=\"submit\" className=\"btn btn-lg btnLogin\"\r\n                                                disabled={disableSubmit()}> Valider </Button>\r\n                                        <Button className=\"btn btn-lg btnLogin\"\r\n                                                onClick={handleCloseUpdate}> Annuler </Button>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </Modal.Body>\r\n                    </div>\r\n                </Modal>\r\n\r\n                <div className=\"page-content page-container\" id=\"page-content\">\r\n                    <div className=\"padding\">\r\n                        <div className=\"row container d-flex justify-content-center\">\r\n                            <div className=\"col-xl-12 col-md-12\">\r\n                                <div className=\"card user-card-full\" id='cardProfil'>\r\n                                    <div className=\"row mb-3\">\r\n                                        <div className=\"col-sm-4 bg-c-lite-green user-profile\">\r\n                                            <div className=\"card-block text-center text-white\">\r\n                                                <div className=\"m-b-25\"><img\r\n                                                    src=\"https://img.icons8.com/bubbles/100/000000/user.png\"\r\n                                                    className=\"img-radius\" alt=\"User-Profile-\"/></div>\r\n                                                <h6 className=\"f-w-600\">Profil {user.id}</h6>\r\n                                                {user && user.data ?\r\n                                                    user.data.map(userData => (\r\n                                                        <p className=\"\">{userData.userData_key} : {userData.userData_column}</p>\r\n                                                    )): ''}\r\n                                                <Button variant=\"outline-success\" type=\"submit\"\r\n                                                        className=\"mt-3 m-3 btn-floating btn-small waves-effect waves-light\"\r\n                                                        onClick={() => updateUser(user.id)}>\r\n                                                    <i className=\"material-icons\">border_color</i>\r\n                                                </Button>\r\n                                                <Button variant=\"outline-danger\" type=\"submit\"\r\n                                                        className=\"mt-3 m-3 btn-floating btn-small waves-effect waves-light\"\r\n                                                        onClick={() => openModalDelete()}>\r\n                                                    <i className=\"material-icons\">delete</i>\r\n                                                </Button>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"col-sm-8\">\r\n                                            <div className=\"card-block\">\r\n                                                <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600 textStyle\">Information</h6>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <p className=\"m-b-10 f-w-600\">Email :</p>\r\n                                                        <h6 className=\"text-muted f-w-400\">contact@heimdall.fr</h6>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <p className=\"m-b-10 f-w-600\">Tél :</p>\r\n                                                        <h6 className=\"text-muted f-w-400\">0235350206</h6>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <p className=\"m-b-10 f-w-600\">Rôle :</p>\r\n                                                        <h6 className=\"text-muted f-w-400\">\r\n                                                            {Role.getStringEnum(user.role_id)}\r\n                                                        </h6>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <p className=\"m-b-10 f-w-600\">Login :</p>\r\n                                                        <h6 className=\"text-muted f-w-400\">{user.login}</h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <h6 className=\"m-b-20 m-t-40 p-b-5 b-b-default f-w-600 textStyle\">Autres</h6>\r\n                                                <div className=\"row\">\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <p className=\"m-b-10 f-w-600\">Crée le :</p>\r\n                                                        <h6 className=\"text-muted f-w-400\">{Moment(user.created_at.date).format('DD/MM/YYYY')}</h6>\r\n                                                    </div>\r\n                                                    <div className=\"col-sm-6\">\r\n                                                        <p className=\"m-b-10 f-w-600\">Modifié le :</p>\r\n                                                        <h6 className=\"text-muted f-w-400\">{user.updated_at ? Moment(user.updated_at.date).format('DD/MM/YYYY') : ''}</h6>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ProfileDetail;\r\n","import React, { FunctionComponent, useEffect, useState } from 'react';\r\nimport ProfileDetail from '../components/user/ProfileDetail';\r\nimport './CheckProfile.css'\r\nimport Users from '../models/Users';\r\nimport { getAllUsers, getUserById } from '../services/usersServices';\r\nimport { Button } from 'react-bootstrap';\r\nimport { useHistory } from 'react-router';\r\nimport { useUser } from \"../contexts/userContext\";\r\nimport { GetRole } from \"../models/role\";\r\n\r\nconst CheckProfile: FunctionComponent = () => {\r\n    let userId: number;\r\n    let roleId: number|undefined;\r\n    const history = useHistory();\r\n    const userContext = useUser();\r\n    const [users, setUsers] = useState<Users[]>([]);\r\n\r\n    if (userContext && userContext!.state.id !== undefined && userContext!.state.role !== null ) {\r\n        userId = userContext!.state.id;\r\n        roleId = userContext!.state.role;\r\n    }else if (localStorage.getItem('user_id') !== null) {\r\n        userId = Number(localStorage.getItem('user_id'));\r\n        roleId = Number(localStorage.getItem('user_role'));\r\n    }else{\r\n        history.push('/login');\r\n    }\r\n\r\n\r\n    useEffect(() => {\r\n        if (roleId === GetRole.DIRECTOR) {\r\n            getAllUsers().then(user => setUsers(user));\r\n        } else {\r\n            getUserById(userId).then(user => setUsers([user]));\r\n        }\r\n    }, [roleId])\r\n\r\n    const createUser = () => {\r\n        history.push(`/CreateUser`);\r\n    }\r\n    return (\r\n        <div className=\"hero-auto\">\r\n            <div id=\"heroProfileEnfant\">\r\n\r\n\r\n                <h3 className=\"text-center mt-5 p-5 titleStyle text-light\">Profils utilisateurs</h3>\r\n\r\n                {roleId === GetRole.DIRECTOR ?\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Button className=\"text-lowercase m-1\" variant=\"success\" onClick={() => createUser()}>\r\n                            Créer un utilisateur\r\n                        </Button>\r\n                    </div>\r\n                    :\r\n                    <div>\r\n                    </div>\r\n                }\r\n                \r\n                <div className=\"col-12 d-flex flex-wrap justify-content-center\">\r\n                    {users ?\r\n                        users.map((user) => (\r\n                            <ProfileDetail key={user.id} user={user} />\r\n                        )): <h3>No user</h3>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CheckProfile;\r\n","import Materials from \"../models/Materials\";\r\nimport MaterialData from \"../models/MaterialData\";\r\nimport {Url} from \"../models/utils/Url\";\r\n\r\n\r\nexport async function getAllMaterial() {\r\n\r\n    return await fetch(Url.GET_ALL_MATERIALS_URL, {\r\n        mode: \"cors\", headers:\r\n            {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n\r\n        .then(response => response.json())\r\n\r\n}\r\n\r\n\r\nexport async function getMaterialCata(id: number) {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/material/data/getCat/\" + id, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport async function getAllMaterialCategory() {\r\n\r\n    return await fetch(Url.GET_ALL_MATERIALS_CATEGORY_URL, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers:\r\n            {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n\r\n        .then(response => response.json())\r\n}\r\n\r\nexport async function getFullMaterials(): Promise<Materials[]> {\r\n    return await fetch(Url.GET_ALL_MATERIALS_URL, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer\" + localStorage.getItem('token') : '0'}\r\n    }).then(response => response.json());\r\n}\r\n\r\nexport async function getOneMaterialWithData(id: number): Promise<Materials> {\r\n    return await fetch('http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/material/getDetail/' + id, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer\" + localStorage.getItem('token') : '0'}\r\n    }).then(response => response.json());\r\n}\r\n\r\nexport async function getMaterialById(id: number) {\r\n    return await fetch(Url.GET_MATERIAL_DETAIL_URL.replace(Url.ARG_MATERIAL_ID, id.toString()), {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers:\r\n            {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\n\r\nexport async function postMaterials(material: Materials): Promise<Materials> {\r\n    return await fetch(Url.POST_MATERIAL_URL, {\r\n        mode: \"cors\", method: \"POST\", body: JSON.stringify({\"material_ref\": material.material_ref}),\r\n        headers:\r\n            {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('token')\r\n            }\r\n    }).then(response => response.json());\r\n}\r\n\r\n\r\nexport async function deleteOneMaterial(id: number) {\r\n    return await fetch(Url.DELETE_MATERIAL_URL.replace(Url.ARG_MATERIAL_ID, id.toString()), {\r\n        mode: \"cors\",\r\n        method: 'DELETE',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then()\r\n}\r\n\r\nexport async function updateOneMaterial(material: Materials) {\r\n    return await fetch(Url.PUT_MATERIAL_URL, {\r\n        mode: \"cors\",\r\n        method: 'PUT',\r\n        body: JSON.stringify({\"material_id\": material.material_id, \"material_ref\": material.material_ref,}),\r\n        headers: {\r\n            'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\n\r\n////////DATA\r\n\r\nexport async function postDataMaterial(data: MaterialData) {\r\n    return await fetch(Url.POST_MATERIAL_DATA_URL, {\r\n        mode: \"cors\",\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            \"materialData_materialId\": data.materialData_materialId,\r\n            \"data_key\": data.data_key,\r\n            \"data_column\": data.data_column\r\n        }),\r\n        headers: {\r\n            'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\n\r\nexport async function getAllMaterialData(id: number) {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/material/data/getAll/\" + id, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport async function updateOneMaterialData(data: MaterialData) {\r\n    return await fetch(Url.PUT_MATERIAL_DATA_URL, {\r\n        mode: \"cors\",\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n            \"materialData_id\": data.materialData_id,\r\n            \"materialData_materialId\": data.materialData_materialId,\r\n            \"data_key\": data.data_key,\r\n            \"data_column\": data.data_column\r\n        }),\r\n        headers: {\r\n            'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n","import React, {FunctionComponent, useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router';\r\nimport Materials from \"../../models/Materials\";\r\nimport {Button, Modal} from 'react-bootstrap';\r\nimport {deleteOneMaterial, getAllMaterialData, getAllMaterialCategory} from \"../../services/Materials-services\";\r\nimport MaterialData from \"../../models/MaterialData\";\r\nimport MaterialCategory from '../../models/MaterialCategory';\r\nimport Moment from \"moment\";\r\nimport {MaterialCategoryUtils} from '../../models/enums/materialCategory'\r\nimport {ToastContainer, toast} from 'react-toastify';\r\n\r\ntype Props = {\r\n    material: Materials\r\n}\r\n\r\nconst ViewMaterial: FunctionComponent<Props> = ({material}) => {\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [materialId, setMaterialId] = useState(-1)\r\n    const handleClose = () => setShow(false);\r\n\r\n    function MaterialDelete(id: number) {\r\n        setShow(true);\r\n        setMaterialId(id);\r\n    }\r\n\r\n    async function confirmDelete(id: number) {\r\n        await deleteOneMaterial(id).then((resp) => {\r\n          \r\n            if (resp.status === 200) {\r\n                toast.success(\"Matériel supprimer avec succès\");\r\n                setTimeout(function () {\r\n                    window.location.reload();\r\n                }, 5000);\r\n            }else {\r\n                toast.warn(\"Erreur lors de la suppression du matériel\");\r\n                setTimeout(function () {\r\n                    window.location.reload();\r\n                }, 5000);\r\n            }\r\n        });\r\n        setShow(false);\r\n    }\r\n\r\n    const history = useHistory();\r\n    const updateMaterial = (id: number) => {\r\n        history.push(`/material/update/${id}`);\r\n    }\r\n    return (\r\n        <>\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                toastClassName=\"dark-toast\"\r\n                theme=\"dark\"/>\r\n            <Modal show={show} onHide={handleClose} className=\"deleteModal\" animation={false}>\r\n                <div className=\"text-center\"><Modal.Body>Etes-vous sur de vouloir supprimer le Materiel\r\n                    numéro {materialId} </Modal.Body>\r\n                    <div className=\"d-flex justify-content-around\">\r\n                        <Button variant=\"secondary\" onClick={handleClose}>\r\n                            Annuler\r\n                        </Button>\r\n                        <Button variant=\"danger\" onClick={() => confirmDelete(materialId)}>\r\n                            Supprimer\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n\r\n\r\n            <tr className=\"table-light\">\r\n                <td className=\"text-center tdId\">{material.material_id}</td>\r\n                <td className=\"text-center\">{material.material_ref}</td>\r\n                {material.data ?\r\n                    material.data.map(datas => (datas.data_key === \"name\" ?\r\n                            <td className=\"text-center\">{datas.data_column}</td>\r\n                            : \"\"\r\n                    ))\r\n                    : \"\"\r\n                }\r\n                {material.data ?\r\n                    material.data.map(datas => (datas.data_key === \"categorie\" ?\r\n                            <td className=\"text-center\">{MaterialCategoryUtils.getTextCategory(Number(datas.data_column))}</td>\r\n                            : \"\"\r\n                    ))\r\n                    : \"\"\r\n                }\r\n                {material.data ?\r\n                    material.data.map(datas => (datas.data_key === \"number\" ?\r\n                            <td className=\"text-center\">{datas.data_column}</td>\r\n                            : \"\"\r\n                    ))\r\n                    : \"\"\r\n                }\r\n                <td className=\"text-center tdCreated\">{Moment(material.created_at.date).format('DD/MM/YYYY')}</td>\r\n\r\n                <td className=\"text-center tdUpdate\">{material.updated_at !== null ?\r\n                    Moment(material.updated_at.date).format('DD/MM/YYYY') : \"\"}\r\n                </td>\r\n                <td className=\"text-center p-0\">\r\n                    <Button variant=\"outline-warning\" type=\"submit\"\r\n                            className=\"mt-3 m-3 btn-floating btn-small waves-effect waves-light yellow z-deepth-3\"\r\n                            id=\"editTab\" onClick={() => updateMaterial(material.material_id)}>\r\n                        <i className=\"material-icons\">edit</i>\r\n                    </Button>\r\n                    <Button variant=\"outline-danger\" type=\"submit\"\r\n                            className=\"mt-3 m-3 btn-floating btn-small waves-effect waves-light red z-deepth-3\"\r\n                            id=\"deleteTab\" onClick={() => MaterialDelete(material.material_id)}>\r\n                        <i className=\"material-icons\">delete</i>\r\n                    </Button>\r\n                </td>\r\n            </tr>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ViewMaterial;\r\n","import React, { FunctionComponent, useState, useEffect } from 'react';\r\nimport ViewMaterial from './ViewMaterial';\r\nimport Materials from '../../models/Materials';\r\nimport { getAllMaterial } from '../../services/Materials-services';\r\nimport '../../pages/Material.css';\r\nimport { Link } from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from 'react-bootstrap/Table'\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst MaterialDetail: FunctionComponent = () => {\r\n\r\n    const [materials, setMaterials] = useState<Materials[]>([]);\r\n\r\n    useEffect(() => {\r\n        getAllMaterial().then(element => {setMaterials(element)});\r\n    }, [])\r\n\r\n    return (\r\n        <>\r\n            <div className=\"heroMaterial\">\r\n                <div id=\"materialFristDiv\">\r\n                    <div className=\"container\" id=\"container\">\r\n                        <div className=\"text-center mt-3 pt-2 pb-3 titleStyle text-light\">Materiels</div>\r\n\r\n                        <Table striped hover className=\"table table-responsive table-hover text-center pb-5 mb-5\" id=\"tableMaterialDetail\">\r\n                            <thead>\r\n                                <tr className=\"bg-dark text-white\">\r\n                                    <th scope=\"row\" className='tdId'>Matériel id</th>\r\n                                    <th scope=\"row\">Référence du matériel</th>\r\n                                    <th scope=\"row\">Nom du matériel</th>\r\n                                    <th scope=\"row\">Catégorie du matériel</th>\r\n                                    <th scope=\"row\">Nombre de matériel</th>\r\n                                    <th scope=\"row\" className='tdCreated'>Crée le</th>\r\n                                    <th scope=\"row\" className=\"tdUpdate\">Dernière Modification</th>\r\n                                    <th scope=\"row\">Actions</th>\r\n                                </tr>\r\n                            </thead>\r\n\r\n                            <tbody>\r\n\r\n                                {\r\n                                    materials.map(i => <ViewMaterial material={i} />)\r\n\r\n                                }\r\n                            </tbody>\r\n                        </Table>\r\n\r\n\r\n                    </div>\r\n                    <div className=\"pb-2\">\r\n                        {/* <Button variant=\"primary\" type=\"submit\" className=\"mt-3 m-1\">\r\n                        <Link to=\"/CreateMaterial\" className=\"\" style={{ color: \"white\" }}>Ajouter un Matériel </Link>\r\n                    </Button> */}\r\n                        <Link className=\"btn-floating btn-large waves-effect waves-light green z-deepth-3\"\r\n                            style={{ position: 'fixed', top: '85px', right: '25px' }}\r\n                            to=\"/CreateMaterial\"\r\n                        >\r\n                            <i className=\"material-icons\">add</i>\r\n                        </Link>\r\n                        {/* <a className=\"btn btn-secondary\" role=\"button\"></a> */}\r\n                        {/* <Button variant=\"danger\" type=\"submit\" className=\"mt-3 m-1\">\r\n                        Supprimer un matériel\r\n                    </Button> */}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\n\r\nexport default MaterialDetail;","import React, {FunctionComponent} from \"react\";\r\nimport Sites from \"../../models/sites\";\r\nimport Moment from 'moment';\r\nimport {Button, ProgressBar} from \"react-bootstrap\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport moment from \"moment\";\r\n\r\ntype Props = {\r\n    site: Sites\r\n}\r\n\r\nconst SitesCard: FunctionComponent<Props> = ({site}) => {\r\n    const history = useHistory();\r\n    const goToSite = (id: number) => {\r\n        history.push(`/sites/search/${id}`);\r\n    }\r\n    const goToEdit = (id: number) => {\r\n        history.push(`/sites/edit/${id}`);\r\n    }\r\n\r\n    const setDates = (date: number) => {\r\n        let myDate = Moment.unix(date);\r\n        return myDate.format('DD/MM/YYYY');\r\n    }\r\n\r\n    const getDiffDate = () => {\r\n        let start = moment.unix(site.site_date_start);\r\n        let end = moment.unix(site.site_date_end);\r\n        let now = moment();\r\n\r\n        let siteNbDays = end.diff(start, 'days');\r\n        let fromStart = now.diff(start, 'days');\r\n\r\n        let percent = (fromStart / siteNbDays) * 100;\r\n\r\n        if (percent !== 0) {\r\n            return percent;\r\n        } else {\r\n\r\n            return 100;\r\n        }\r\n    }\r\n\r\n    const goToPlanning = (id) => {\r\n        history.push(`/planningSite/uniq/`+id);\r\n    }\r\n\r\n    return (\r\n        <div className=\"col-sm-12 col-md-6 col-lg-3 s6 m4\">\r\n            <div className=\"card-deck\">\r\n                <div className=\"card\">\r\n                    <img src=\"https://batiadvisor.fr/wp-content/uploads/2019/07/pgc-chantier.jpg\" alt=\"Props\"/>\r\n                    <div className=\"card-body\" style={{minHeight: '300px'}}>\r\n                        <h5 className=\"card-title d-flex justify-content-center\">{site.site_id}</h5>\r\n                        <p className=\"card-id\">Numéro de chantier : {site.site_number_site} </p>\r\n                        <p className=\"card-date\">Débute le : {setDates(site.site_date_start)}</p>\r\n                        {\r\n                            site.site_date_end !== null ? <p>Terminé le\r\n                                    : {setDates(site.site_date_end)}</p> :\r\n                                <p>En cours</p>\r\n                        }\r\n                        <ProgressBar animated now={getDiffDate()} variant={getDiffDate() === 100 ? 'success' : ''}/>\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <Button variant=\"outline-warning\" type=\"submit\"\r\n                                    className=\"mt-3 m-3 btn-floating btn-meduim waves-effect waves-light green z-deepth-3\"\r\n                                    onClick={() => goToSite(site.site_id)}>\r\n                                <i className=\"material-icons\">search</i>\r\n                            </Button>\r\n                            <Button variant=\"outline-warning\" type=\"submit\"\r\n                                    className=\"mt-3 m-3 btn-floating btn-meduim waves-effect waves-light yellow z-deepth-3\"\r\n                                    onClick={() => goToEdit(site.site_id)}>\r\n                                <i className=\"material-icons\">edit</i>\r\n                            </Button>\r\n                            <Button variant=\"outline-warning\" type=\"submit\"\r\n                                    className=\"mt-3 m-3 btn-floating btn-meduim waves-effect waves-light blue z-deepth-3\"\r\n                                    onClick={() => goToPlanning(site.site_id)}>\r\n                                <i className=\"material-icons\">event</i>\r\n                            </Button>\r\n\r\n                            {/* <Button className=\"m-2\" variant=\"outline-warning\" onClick={ () => goToSite(site.site_Id)} >Detail</Button>\r\n                                <Button className=\"m-2\" variant=\"outline-warning\" onClick={ () => goToEdit(site.site_Id)} >Edit</Button>*/}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SitesCard;\r\n","import Sites from '../models/sites';\r\nimport SitesData from '../models/sitesData';\r\nimport {GeocodeResponse} from \"../models/geocodeResponse\";\r\nimport {Url} from \"../models/utils/Url\";\r\nimport {SiteDetails} from \"../models/utils/siteDetails\";\r\nimport moment from \"moment\";\r\n\r\nexport default class SitesService {\r\n\r\n    static async getAllSites(): Promise<Sites[]>{\r\n        return await fetch(Url.GET_ALL_SITES_URL, {\r\n            mode: \"cors\",\r\n            method: 'GET',\r\n            headers: {'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n        }).then(response => response.json()).catch(error => this.handleError(error));\r\n    }\r\n\r\n    static async getSite(site_id: number): Promise<SiteDetails> {\r\n        return await fetch(Url.GET_SITE_SEARCH_URL.replace(Url.ARG_SITE_ID, site_id.toString()), {\r\n            mode: \"cors\",\r\n            method: 'GET',\r\n            headers: {'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n        }).then(response => response.json());\r\n    }\r\n\r\n    static async getSiteData(site_id: number): Promise<SitesData[]> {\r\n        return await fetch('http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/sites/data/' + site_id, {\r\n            mode: \"cors\",\r\n            method: 'GET',\r\n            headers: {'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n        })\r\n            .then(response => response.json())\r\n    }\r\n\r\n    static async getSiteByUser( user_id: number ): Promise<Sites[]> {\r\n        return await fetch( Url.GET_SITE_BY_USER_URL.replace(Url.ARG_USER_ID, user_id.toString()), {\r\n            mode: \"cors\",\r\n            method: 'GET',\r\n            headers: { 'Authorization': 'bearer ' + localStorage.getItem('token')}\r\n        } ).then( response => response.json());\r\n    }\r\n\r\n\r\n    static async postSite(site: Sites): Promise<Sites> {\r\n        return await fetch(Url.POST_SITE_URL, {\r\n            method: 'POST',\r\n            mode: \"cors\",\r\n            body: JSON.stringify({\r\n                'site_number_site': site.site_number_site.toString(),\r\n                'site_date_start': moment(site.site_date_start).unix(),\r\n                'site_date_end': moment(site.site_date_end).unix()\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(response => response.json());\r\n    }\r\n\r\n    static async postSiteData(siteData: SitesData) {\r\n        return await fetch(Url.POST_SITE_DATA_URL, {\r\n            method: 'POST',\r\n            mode: \"cors\",\r\n            body: JSON.stringify({\r\n                'siteData_siteId': siteData.siteData_siteId.toString(),\r\n                'siteData_key': siteData.siteData_key,\r\n                'siteData_column': siteData.siteData_column\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(response => response.json());\r\n    }\r\n\r\n    static async updateSite(site: Sites) {\r\n        return await fetch(Url.PUT_SITE_URL, {\r\n            method: 'PUT',\r\n            mode: \"cors\",\r\n            body: JSON.stringify({\r\n                'site_id': site.site_id,\r\n                'site_number_site': site.site_number_site,\r\n                'site_date_start': site.site_date_start,\r\n                'site_date_end': site.site_date_end\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(response => response.json()).catch( (error) => this.handleError(error) );\r\n    }\r\n\r\n    static async deleteSite(id: number) {\r\n        return await fetch(Url.DELETE_SITE_URL.replace(Url.ARG_SITE_ID, id.toString()), {\r\n            method: 'DELETE',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(response => response.json());\r\n    }\r\n\r\n    static async updateData(siteData: SitesData) {\r\n        return await fetch(Url.PUT_SITE_DATA_URL, {\r\n            method: 'PUT',\r\n            mode: 'cors',\r\n            body: JSON.stringify({\r\n                'siteData_id': siteData.siteData_id,\r\n                'siteData_key': siteData.siteData_key,\r\n                'siteData_column': siteData.siteData_column\r\n            }),\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'bearer ' + localStorage.getItem('token')\r\n            }\r\n        }).then(response => response.json()).catch( (error) => this.handleError(error) );\r\n    }\r\n\r\n    static async getProblemBySite( site_id: number ) {\r\n        return await fetch('http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/problem/data/getBySite/' + site_id, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'bearer ' + localStorage.getItem('token')\r\n            }\r\n        } ).then( response => response.json() );\r\n    }\r\n\r\n    static async getAddressGouv(address: string): Promise<GeocodeResponse> {\r\n        return await fetch( 'https://api-adresse.data.gouv.fr/search/?limit=5&q=' + address.replace(' ', '+'), {\r\n            method: 'GET'\r\n        } ).then( response => response.json());\r\n    }\r\n\r\n\r\n    static isEmpty(data: Object): boolean {\r\n        return Object.keys(data).length === 0;\r\n    }\r\n\r\n    static handleError(error: Error): void {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n","import React, {FunctionComponent, useState, useEffect} from \"react\";\r\nimport Sites from \"../../models/sites\";\r\nimport SitesCard from \"./sites-card\";\r\nimport SitesService from \"../../services/sites-service\";\r\nimport \"../../pages/sites.css\";\r\nimport {useUser} from \"../../contexts/userContext\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {useHistory} from \"react-router-dom\";\r\nimport {GetRole} from \"../../models/role\";\r\n\r\nconst SitesList: FunctionComponent = () => {\r\n    let userId: number;\r\n    let role: number;\r\n    const userContext = useUser();\r\n    const history = useHistory();\r\n    const [sites, setSites] = useState<Sites[]>([]);\r\n\r\n    if (userContext!.state.id !== undefined && userContext!.state.role !== undefined) {\r\n        userId = userContext!.state.id;\r\n        role = userContext!.state.role;\r\n    } else if (localStorage.getItem('user_id') !== null) {\r\n        userId = Number(localStorage.getItem('user_id'));\r\n        role = Number(localStorage.getItem('user_role'));\r\n    } else {\r\n        history.push('/login');\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (role === GetRole.DIRECTOR) {\r\n            SitesService.getAllSites().then((sites) => {\r\n                setSites(sites);\r\n            });\r\n        } else {\r\n            SitesService.getSiteByUser(userId).then((sites) => setSites(sites));\r\n        }\r\n    }, []);\r\n\r\n    const goToForm = () => {\r\n        history.push('/sites/add');\r\n    }\r\n\r\n    return (\r\n        <div className=\"heroSites\">\r\n            <div className=\"heroSitesEnfant\">\r\n                <h1 className=\"center text-light\">Liste des chantiers</h1>\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Link className=\"btn-floating btn-large waves-effect waves-light green z-deepth-3\"\r\n                              style={{position: 'fixed', top: '90px', right: '25px'}}\r\n                              to=\"/sites/add\">\r\n                            <i className=\"material-icons\">add</i>\r\n                        </Link>\r\n                        {sites && sites.length !== 0 ?\r\n                            sites.map(site => (\r\n                                <SitesCard key={site.site_id} site={site}/>\r\n                            )) : 'Pas de site'}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SitesList;\r\n","import React, {FunctionComponent, useState, useEffect} from \"react\";\r\nimport {RouteComponentProps, useHistory, Link} from \"react-router-dom\";\r\nimport Sites from \"../../models/sites\";\r\nimport SitesService from \"../../services/sites-service\";\r\nimport {Button, Modal} from \"react-bootstrap\";\r\nimport Moment from \"moment\";\r\nimport {SiteDetails} from \"../../models/utils/siteDetails\";\r\nimport Users from \"../../models/Users\";\r\nimport Materials from \"../../models/Materials\";\r\nimport Problem from \"../../models/Problem\";\r\n\r\ntype Params = { id: string };\r\n\r\nconst SiteDetail: FunctionComponent<RouteComponentProps<Params>> = ({match}) => {\r\n    const history = useHistory();\r\n\r\n    const [siteDetails, setSiteDetails] = useState<SiteDetails>();\r\n    const [site, setSite] = useState<Sites>();\r\n    const [users, setUsers] = useState<Users[]>();\r\n    const [materials, setMaterials] = useState<Materials[]>();\r\n    const [tickets, setTickets] = useState<Problem[]>();\r\n\r\n    useEffect(() => {\r\n        const fetchSite = async () => {\r\n            const siteDetails = await SitesService.getSite(+match.params.id).then();\r\n            setSiteDetails(siteDetails);\r\n            setSite(siteDetails.site);\r\n            setUsers(siteDetails.users);\r\n            setMaterials(siteDetails.materials);\r\n            setTickets(siteDetails.tickets);\r\n        }\r\n        fetchSite().then();\r\n    }, [match.params.id]);\r\n\r\n    const [show, setShow] = useState();\r\n    const handleShowModal = () => setShow(true);\r\n    const handleCloseModal = () => setShow(false);\r\n\r\n    const deleteSite = () => {\r\n        handleCloseModal();\r\n        SitesService.deleteSite(+match.params.id).then();\r\n        history.go(-1);\r\n    }\r\n\r\n    const setDates = (date: number) => {\r\n        let myDate = Moment.unix(date);\r\n        return myDate.format('DD/MM/YYYY');\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"hero-auto\">\r\n                <div className=\"heroProblemeEnfant\">\r\n                    <div className=\"mt-5 pt-5 container-fluid \">\r\n                        <div className=\"d-flex flex-column\">\r\n                            <div>\r\n                                <form className=\"mt-5 d-flex justify-content-center\">\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12 m8\">\r\n                                            <div className=\"card hoverable\" id=\"cardGeneral\">\r\n                                                <h2 className=\"text-center mb-5\"> Détail du chantier</h2>\r\n                                                <div className=\"card-stacked\">\r\n                                                    <div className=\"card-content p-0\">\r\n                                                        <div className=\"form-group\">\r\n                                                            {site ?\r\n                                                                <div\r\n                                                                    className=\"d-flex flex-column text-center align-items-center\">\r\n                                                                    <div className=\"col-sm-8\">\r\n                                                                        <div className=\"card-block text-center\">\r\n                                                                            <h6 className=\"m-b-20 p-b-5 b-b-default f-w-600 h6\">Information\r\n                                                                                du Chantier Id {site.site_id}</h6>\r\n\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <p className=\"m-b-10 f-w-600\">Numéro du\r\n                                                                                    chantier :</p>\r\n                                                                                <h6 className=\"text-muted f-w-400\">{site.site_number_site}</h6>\r\n                                                                            </div>\r\n\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <p className=\"m-b-10 f-w-600\">Débute le\r\n                                                                                    :</p>\r\n                                                                                <h6 className=\"text-muted f-w-400\">{setDates(site.site_date_start)}</h6>\r\n                                                                            </div>\r\n                                                                            <div className=\"col-12\">\r\n                                                                                <p className=\"m-b-10 f-w-600\">Fini le\r\n                                                                                    :</p>\r\n                                                                                {site.site_date_end !== null ?\r\n                                                                                    <h6 className=\"text-muted f-w-400\">{setDates(site.site_date_end)}</h6>\r\n                                                                                    :\r\n                                                                                    <p>En cours</p>\r\n                                                                                }\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                                :\r\n                                                                <h3>Site not found</h3>\r\n                                                            }\r\n                                                        </div>\r\n                                                        <h2 className=\"text-center m-b-20 p-b-5 b-b-default f-w-600 h6\">Liste\r\n                                                            des données du chantier</h2>\r\n                                                        {site && site.data && site.data.length !== 0 ?\r\n                                                            <div className=\" d-flex flex-column text-center\">\r\n                                                                <div\r\n                                                                    className=\"d-flex flex-column text-center align-items-center\">\r\n                                                                    <div className=\"col-sm-8\">\r\n                                                                        <div className=\"card-block text-center p-0\">\r\n                                                                            <div className=\"col-12\">\r\n\r\n                                                                                {site.data.map(siteData => (\r\n                                                                                    <div>\r\n                                                                                        {\r\n                                                                                            siteData.siteData_key === 'address' ?\r\n                                                                                                <p className=\"m-b-10 f-w-600\">Adresse: {siteData.siteData_column}</p>\r\n\r\n                                                                                                : ''\r\n                                                                                        }\r\n                                                                                    </div>\r\n                                                                                ))}\r\n                                                                            </div>\r\n                                                                        </div>\r\n                                                                    </div>\r\n                                                                </div>\r\n                                                            </div>\r\n                                                            :\r\n                                                            <h3 className=\"text-center m-5\">Aucune données</h3>\r\n                                                        }\r\n                                                        <h2 className=\"text-center m-b-20 p-b-5 b-b-default f-w-600 h6 mt-4\">Liste\r\n                                                            des personne affecter au chantier</h2>\r\n                                                        <div className=\" d-flex flex-column text-center\">\r\n                                                            {users ?\r\n                                                                users.map(user => (\r\n                                                                    <div>\r\n                                                                        {user.data ?\r\n                                                                            user.data.map(data => (\r\n                                                                                <span>{data.userData_column} </span>\r\n                                                                            ))\r\n                                                                            :\r\n                                                                            ''\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                ))\r\n                                                                :\r\n                                                                ''\r\n                                                            }\r\n                                                        </div>\r\n                                                        <div className=\"d-flex flex-column text-center\">\r\n                                                            <h2 className=\"text-center m-b-20 p-b-5 b-b-default f-w-600 h6 mt-4\">Liste\r\n                                                                des problèmes liés au chantier</h2>\r\n                                                        {tickets ?\r\n                                                                tickets.map(ticket => (\r\n                                                                <div>\r\n                                                                    {ticket.data ?\r\n                                                                        ticket.data.map(data => (\r\n                                                                            <span>{data.problemData_column}</span>\r\n                                                                        ))\r\n                                                                        :\r\n                                                                        ''\r\n                                                                    }\r\n                                                                </div>\r\n                                                                ))\r\n                                                                :\r\n                                                                ''\r\n                                                        }\r\n                                                        </div>\r\n                                                        <div className=\"d-flex flex-column text-center\">\r\n                                                            <h2 className=\"text-center m-b-20 p-b-5 b-b-default f-w-600 h6 mt-4\">Liste\r\n                                                                des matériels du chantier</h2>\r\n                                                            {materials ?\r\n                                                                materials.map(material => (\r\n                                                                    <div>\r\n                                                                        {material.data ?\r\n                                                                            material.data.map(data => (\r\n                                                                                <p>\r\n                                                                                    {data.data_key}\r\n                                                                                    {data.data_column}\r\n                                                                                </p>\r\n                                                                            ))\r\n                                                                            :\r\n                                                                            ''\r\n                                                                        }\r\n                                                                    </div>\r\n                                                                ))\r\n                                                                :\r\n                                                                ''\r\n                                                            }\r\n                                                        </div>\r\n                                                        <div className='d-flex justify-content-center mt-5'>\r\n                                                            <Button variant=\"\" className=\"btn btn-lg btnLogin\"\r\n                                                                    onClick={handleShowModal}>Supprimer</Button>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                            <Link\r\n                                className=\"btn-floating btn-large waves-effect waves-light orange lighten-1 z-deepth-3\"\r\n                                style={{position: 'fixed', top: '95px', left: '50px'}}\r\n                                to=\"/sites\">\r\n                                <i className=\"material-icons\">navigate_before</i>\r\n                            </Link>\r\n                        </div>\r\n                        <Modal size=\"sm\" backdrop={true} show={show} onHide={handleCloseModal} style={{background: \"transparent\"}} >\r\n                            <Modal.Header closeButton={true}>\r\n                                <Modal.Title><h2 className=\"text-center mb-5\">Supprimer le chantier</h2></Modal.Title>\r\n                            </Modal.Header>\r\n                            <Modal.Body>\r\n                                <p>Êtes-vous sûr de vouloir supprimer ce chantier ? </p>\r\n                            </Modal.Body>\r\n                            <Modal.Footer className='d-flex justify-content-around'>\r\n                                <Button onClick={handleCloseModal}>Annuler</Button>\r\n                                <Button className='red' onClick={deleteSite}>Supprimer</Button>\r\n                            </Modal.Footer>\r\n                        </Modal>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SiteDetail;\r\n","import SitesData from \"./sitesData\";\r\n\r\nexport default class Sites {\r\n    site_id: number = 0;\r\n    site_number_site: number = 0;\r\n    site_date_start: number = 0;\r\n    site_date_end: number = 0;\r\n    created_at: number|null = null;\r\n    updated_at: number|null = null;\r\n    deleted_at: number|null = null;\r\n    data?: SitesData[]|null = null;\r\n\r\n    constructor(site?: Sites ) {\r\n        if (site !== undefined && site !== null) {\r\n            this.site_id = site.site_id;\r\n            this.site_number_site = site.site_number_site;\r\n            this.site_date_start = site.site_date_start;\r\n            this.site_date_end = site.site_date_end;\r\n            this.created_at = site.created_at;\r\n            this.updated_at = site.updated_at;\r\n            this.deleted_at = site.deleted_at;\r\n            this.data = site.data;\r\n        }\r\n    }\r\n\r\n    setSiteId(id: number) {\r\n        this.site_id = id;\r\n        return this;\r\n    }\r\n    setNumberSite(nbSite: number) {\r\n        this.site_number_site = nbSite;\r\n        return this;\r\n    }\r\n    // setDateStart(dateStart: ){\r\n    //     this.site_date_start = dateStart;\r\n    //     return this;\r\n    // }\r\n    // setDateEnd(dateEnd: Date){\r\n    //     this.site_date_end = dateEnd;\r\n    //     return this;\r\n    // }\r\n}\r\n","export default  class SitesData {\r\n    siteData_id: number = 0;\r\n    siteData_siteId: number = 0;\r\n    siteData_key: string = '';\r\n    siteData_column: string = '';\r\n\r\n    constructor(\r\n        siteData?: SitesData\r\n    ) {\r\n        if (siteData) {\r\n            this.siteData_id = siteData.siteData_id;\r\n            this.siteData_siteId = siteData.siteData_siteId;\r\n            this.siteData_key = siteData.siteData_key;\r\n            this.siteData_column = siteData.siteData_column;\r\n        }\r\n    }\r\n}\r\n","import Sites from \"../models/sites\";\r\n\r\nexport default class ParametersHelper {\r\n\r\n    static testFormatDate( value: string ) {\r\n\r\n        // format: YYYY-MM-DD\r\n\r\n        return /^[2][0-9]{3}[-][0-9]{2}[-][0-9]{2}$/.test(value);\r\n    }\r\n\r\n    static testLogin(value: string): boolean {\r\n        return /^[a-zA-Z0-9]+$/gi.test(value);\r\n    }\r\n\r\n    static testString(value: string) {\r\n        return /^[a-zA-Zàéè ]{3,25}$/.test(value)\r\n    }\r\n    static testPassword( value: string ) {\r\n       return /(?=.*[A-Z])(?=.*[a-z])(?=.*[0-9]).{8,64}/.test(value);\r\n    }\r\n\r\n\r\n    static testInt(value: string) {\r\n        return /^[0-9]{1,25}$/.test(value)\r\n    }\r\n    static isValidAddress(value: string) {\r\n        return /([0-9]{4}) ?([a-zA-Z ]*) ?([0-9]{5}) ?([a-zA-Z]*)/.test(value);\r\n    }\r\n\r\n    static isValideEmail(value: string) {\r\n        return /^\\w+([-]?\\w+)*@\\w+([-]?\\w+)*(\\.\\w{2,3})+$/.test(value)\r\n    }\r\n\r\n    static isValideTel(value: string) {\r\n        return /^((\\+|00)33\\s?|0)[67](\\s?\\d{2}){4}$/.test(value)\r\n    }\r\n\r\n    static testFirstname(field: any) {\r\n\r\n        if (!this.testString(field.value)) {\r\n            field.error = 'Le prénom est requis (3-25).';\r\n            field.isValid = false;\r\n        } else {\r\n            field.isValid = true;\r\n        }\r\n        return field;\r\n    }\r\n\r\n    static testLastname(field: any) {\r\n\r\n        if (!this.testString(field.value)) {\r\n            field.error = 'Le nom est requis (3-25).';\r\n            field.isValid = false;\r\n        } else {\r\n            field.isValid = true;\r\n        }\r\n        return field;\r\n    }\r\n\r\n    static testPlace(field: any) {\r\n\r\n        if (!this.testString(field.value)) {\r\n            field.error = 'Le lieu est requis (3-25).';\r\n            field.isValid = false;\r\n        } else {\r\n            field.isValid = true;\r\n        }\r\n        return field;\r\n    }\r\n\r\n    static testBudget(field: any) {\r\n\r\n        if (!this.testInt(field.value)) {\r\n            field.error = 'Le budget est requis (3-25).';\r\n            field.isValid = false;\r\n        } else {\r\n            field.isValid = true;\r\n        }\r\n        return field;\r\n    }\r\n\r\n    static testEmail(field: any) {\r\n\r\n        if (!this.isValideEmail(field.value)) {\r\n            field.error = 'L\\'email n\\'est pas valide';\r\n            field.isValid = false;\r\n        } else {\r\n            field.isValid = true;\r\n        }\r\n        return field;\r\n    }\r\n\r\n    static testTel(field: any) {\r\n\r\n        if (!this.isValideTel(field.value)) {\r\n            field.error = 'Le numéro de téléphone n\\'est pas valide';\r\n            field.isValid = false;\r\n        } else {\r\n            field.isValid = true;\r\n        }\r\n        return field;\r\n    }\r\n    static testProblemName(field: string) {\r\n\r\n        if (field.length > 25) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n    static testTextLength(field: string) {\r\n\r\n        if (field.length > 400) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    static testNameMaterial(field: string) {\r\n\r\n        if (field.length > 25) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    static testCatMaterial(field: string) {\r\n\r\n        if (field.length > 25) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    static testRefMaterial(field: string) {\r\n\r\n        if (field.length > 25) {\r\n            return false\r\n        } else {\r\n            return true\r\n        }\r\n    }\r\n\r\n    static checkNombreMaterial(value: any) {\r\n\r\n        if (!this.testInt(value)) {\r\n            return false;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    static testNumberSite(field: any, allSites?: Sites[]) {\r\n\r\n        if (!this.testInt(field.numberSite.value)) {\r\n            field.numberSite.error = 'Le numéro de chantier est requis (3-25).';\r\n            field.numberSite.isValid = false;\r\n        } else {\r\n            if (allSites) {\r\n                if (allSites.filter( (s) => s.site_number_site === Number(field.numberSite.value) ).length === 0) {\r\n                    field.numberSite.isValid = true;\r\n                }else{\r\n                    field.numberSite.error = 'Le numéro de chantier éxiste déjà.';\r\n                    field.numberSite.isValid = false;\r\n                }\r\n            }else{\r\n                field.numberSite.isValid = true;\r\n            }\r\n        }\r\n        return field;\r\n    }\r\n\r\n\r\n    static testDate(field: any) {\r\n        if (field.dateStart) {\r\n            if (!this.testFormatDate(field.dateStart.value)) {\r\n                field.dateStart.error = 'Le format date n\\'est pas valide';\r\n                field.dateStart.isValid = false;\r\n            }else {\r\n                field.dateStart.isValid = true;\r\n            }\r\n        }\r\n        if( field.dateEnd ) {\r\n            if (!this.testFormatDate(field.dateEnd.value)) {\r\n                field.dateEnd.error = 'Le format date n\\'est pas valide';\r\n                field.dateEnd.isValid = false;\r\n            }else {\r\n                field.dateEnd.isValid = true;\r\n            }\r\n        }\r\n        return field;\r\n    }\r\n\r\n    static testAddress(field: string) {\r\n\r\n        if (field.length > 5) {\r\n            return this.isValidAddress(field);\r\n        }\r\n    }\r\n\r\n\r\n\r\n}\r\n","import React, {FunctionComponent, useEffect, useState} from \"react\";\r\nimport Users from \"../../models/Users\";\r\nimport {getFullUsers} from \"../../services/usersServices\";\r\nimport {GetRole} from \"../../models/role\";\r\nimport Materials from \"../../models/Materials\";\r\nimport {getFullMaterials} from \"../../services/Materials-services\";\r\nimport SitesData from \"../../models/sitesData\";\r\nimport Sites from \"../../models/sites\";\r\nimport ParametersHelper from \"../../helpers/parameters-helper\";\r\nimport {MaterialCategoryUtils} from \"../../models/enums/materialCategory\";\r\nimport SitesService from \"../../services/sites-service\";\r\nimport {useHistory} from \"react-router\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntype Employee = {\r\n    user: Users,\r\n    isSelected: boolean\r\n}\r\ntype MaterialsType = {\r\n    materials: Materials,\r\n    isSelected: boolean\r\n}\r\n\r\ntype Props = {\r\n    site: Sites\r\n}\r\n\r\nconst SiteFormMat: FunctionComponent<Props> = ({site}) => {\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        getFullUsers().then((usr) => {\r\n            getEmployee(usr.filter((u) => {\r\n                return u.role_id === GetRole.EMPLOYEE\r\n            }));\r\n        });\r\n    }, []);\r\n\r\n    const [empArray, setEmpArray] = useState<Employee[]>([]);\r\n    const getEmployee = (users: Users[]) => {\r\n        let array: Employee[] = [];\r\n        users.map((worker) => {\r\n            let emp: Employee = {user: worker, isSelected: false}\r\n            array.push(emp);\r\n            return 0\r\n        });\r\n        setEmpArray(array);\r\n    }\r\n    const [searchMaterials, setSearchMaterials] = useState<MaterialsType[]>([]);\r\n    const [materialsTypes, setMaterialsTypes] = useState<MaterialsType[]>([]);\r\n    useEffect(() => {\r\n        const getMaterialsType = (materials: Materials[]) => {\r\n            \r\n            let array: MaterialsType[] = [];\r\n            for (const mat of materials) {\r\n                let type: MaterialsType = {materials: mat, isSelected: false};\r\n                array.push(type);\r\n            }\r\n            setMaterialsTypes(array);\r\n            setSearchMaterials(array.slice(array.length - 10));\r\n        }\r\n        getFullMaterials().then((resp) => getMaterialsType(resp));\r\n    }, []);\r\n\r\n\r\n    const handleClickWorker = (worker: Employee) => {\r\n        worker.isSelected = !worker.isSelected;\r\n        if (worker.isSelected) {\r\n            let newData = new SitesData();\r\n            newData.siteData_key = 'employee';\r\n            newData.siteData_column = worker.user.id.toString();\r\n            if (site.data === null || site.data === undefined) {\r\n                site.data = [];\r\n                site.data.push(newData);\r\n            } else {\r\n                site.data.push(newData);\r\n            }\r\n        } else {\r\n            if (site.data !== null && site.data !== undefined) {\r\n                let index: any;\r\n                site.data.map((data) => {\r\n                    if (data.siteData_key === 'employee' &&\r\n                        data.siteData_column === worker.user.id.toString()) {\r\n                        index = site.data!.indexOf(data)\r\n                    }\r\n                    return 0\r\n                });\r\n                site.data.splice(index, 1);\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleClickMat = (e: React.MouseEvent<HTMLInputElement>, mat: MaterialsType) => {\r\n        mat.isSelected = !mat.isSelected;\r\n        const id = e.target.id.split('-');\r\n        if (mat.isSelected) {\r\n            let element = document.getElementById('div-' + mat.materials.material_id)\r\n            element!.style.display = 'block';\r\n        } else {\r\n            let element = document.getElementById('div-' +mat.materials.material_id)\r\n            element!.style.display = 'none';\r\n        }\r\n        for (const type of materialsTypes) {\r\n            if (type.materials.material_id === mat.materials.material_id) {\r\n                type.isSelected = mat.isSelected;\r\n            }\r\n        }\r\n        setMaterialsTypes(materialsTypes);\r\n        setSearchMaterials(searchMaterials);\r\n    }\r\n\r\n    const getValueRadio = (worker: Employee) => {\r\n        let name = '';\r\n        if (worker.user.data && worker.user.data.length !== 0) {\r\n            worker.user.data.map((data) => {\r\n                if (name.length === 0) {\r\n                    name = data.userData_column;\r\n                } else {\r\n                    name += ' ' + data.userData_column;\r\n                }\r\n                return 0\r\n            })\r\n        }\r\n        return name;\r\n    }\r\n\r\n    const handleInputMat = (e: React.ChangeEvent<HTMLInputElement>, max: number, materielType: MaterialsType) => {\r\n        if (materielType.isSelected) {\r\n            let newData = new SitesData();\r\n            newData.siteData_key = 'mat-' + e.target.name;\r\n            newData.siteData_column = e.target.value;\r\n            if (e.target.value.length !== 0) {\r\n                if (ParametersHelper.checkNombreMaterial(newData.siteData_column)) {\r\n                    if (Number(newData.siteData_column) > max) {\r\n                        document.getElementById('error-' + e.target.name)!.style.display = 'block';\r\n                    } else {\r\n                        document.getElementById('error-' + e.target.name)!.style.display = 'none';\r\n                        if (site.data === null || site.data === undefined) {\r\n                            site.data = [];\r\n                            site.data.push(newData);\r\n                        } else {\r\n                            if (site.data.filter((data) => data.siteData_key === newData.siteData_key).length === 0) {\r\n                                site.data.push(newData);\r\n                            } else {\r\n                                for (const data of site.data!) {\r\n                                    if (newData.siteData_key === data.siteData_key) {\r\n                                        data.siteData_column = newData.siteData_column;\r\n                                    }\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    document.getElementById('error-' + e.target.name)!.style.display = 'block';\r\n                }\r\n            } else {\r\n                if (site.data !== null && site.data !== undefined) {\r\n                    let index: any;\r\n                    site.data.map((data) => {\r\n                        if (data.siteData_key === newData.siteData_key) {\r\n                            index = site.data!.indexOf(data)\r\n                        }\r\n                        return 0\r\n                    });\r\n                    site.data.splice(index, 1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (site) {\r\n            if (site.data) {\r\n                if (site.data.filter((d) => d.siteData_key === 'employee' || d.siteData_key.startsWith('mat-')).length !== 0) {\r\n                    toast.success('Chantier créer avec succès👍', {});\r\n                    await addSite(site);\r\n                } else {\r\n                    toast.warn(\"Le formulaire n'est pas complet !👎\", {});\r\n                }\r\n            } else {\r\n                toast.warn(\"Le formulaire n'est pas complet !👎\", {});\r\n            }\r\n        } else {\r\n            toast.warn(\"Le formulaire n'est pas complet !👎\", {});\r\n        }\r\n    }\r\n\r\n    const addSite = async (newSite: Sites) => {\r\n        await SitesService.postSite(site).then((resp) => {\r\n            if (newSite.data && newSite.data.length !== 0) {\r\n                newSite.data.map((data) => {\r\n                    data.siteData_siteId = resp.site_id;\r\n                    if (data.siteData_key.startsWith('mat-')) {\r\n                        let id = data.siteData_key.split('-');\r\n                        materialsTypes.map((mat) => {\r\n                            if (mat.isSelected && mat.materials.material_id === Number(id[1])) {\r\n                               addSiteData(data);\r\n                            }\r\n                            return 0\r\n                        })\r\n                    } else {\r\n                        addSiteData(data);\r\n                    }\r\n                    return 0\r\n                })\r\n            }\r\n        });\r\n        window.setTimeout(() => {\r\n            history.push('/sites');\r\n        }, 2000);\r\n    }\r\n\r\n    const addSiteData = async (newData: SitesData) => {\r\n        await SitesService.postSiteData(newData).then();\r\n    }\r\n\r\n    const filterMaterials = (inputValue: string) => {\r\n        let array = [];\r\n        if (inputValue.length > 3) {\r\n             array = materialsTypes.filter((mat) => {\r\n                if (mat.materials.material_ref.startsWith(inputValue)) {\r\n                    return mat;\r\n                }else{\r\n                    return 0\r\n                }\r\n                if (mat.isSelected) {\r\n                    let element = document.getElementById('div-' +mat.materials.material_id)\r\n                    element!.style.display = 'block';\r\n                    return mat;\r\n                }\r\n            });\r\n        }else {\r\n            array = materialsTypes.filter((mat) => mat.isSelected);\r\n            for(let i = 0; i < 10; i++) {\r\n               array.push(materialsTypes[i]);\r\n            }\r\n        }\r\n        setSearchMaterials(array);\r\n    }\r\n\r\n    const handleInputSearchMaterials = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        e.preventDefault();\r\n        filterMaterials(e.target.value);\r\n    }\r\n\r\n    // const setSiteForPlanning = (id_site,site_dateStart,site_dateEnd) =>{\r\n    //     dateStart = site_dateStart\r\n    //     dateEnd = site_dateEnd\r\n    //     idSiteForPlanning = id_site\r\n    // }\r\n    //\r\n    return (\r\n        <div className=\"mt-3 d-flex justify-content-center\">\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                toastClassName=\"dark-toast\"\r\n                theme=\"dark\"/>\r\n            <form className=\"mt-5 col-8\" onSubmit={(e) => handleSubmit(e)}>\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m8\">\r\n                        <div className=\"card hoverable\" id=\"cardGeneral\">\r\n                            <div className=\"card-stacked p-0\">\r\n                                <div className=\"form-check\">\r\n                                    <p>Sélectionner les employés liés au chantier</p>\r\n                                    {empArray ?\r\n                                        empArray.map((worker) => (\r\n                                            <div className=\"form-check form-switch\">\r\n                                                <input className=\"form-check-input\"\r\n                                                       style={{opacity: 1, pointerEvents: \"all\"}} role=\"switch\"\r\n                                                       type=\"checkbox\" value={worker.user.id}\r\n                                                       id={worker.user.id.toString()}\r\n                                                       onClick={() => handleClickWorker(worker)}/>\r\n                                                <label className=\"form-check-label h6\"\r\n                                                       htmlFor={worker.user.id.toString()}>\r\n                                                    {getValueRadio(worker)}\r\n                                                </label>\r\n                                            </div>\r\n                                        ))\r\n                                        :\r\n                                        <div>No employee</div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"form-check\">\r\n                                    <p>Sélectionner les matériels liés au chantier</p>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"material\">Rechercher un matériel</label>\r\n                                        <input id=\"material\" className=\"form-control\" type='text'\r\n                                               name=\"material\" onChange={e => handleInputSearchMaterials(e)}/>\r\n                                    </div>\r\n                                    {materialsTypes ?\r\n                                        materialsTypes.map((mat) => (\r\n                                            <div>\r\n                                                <div className=\"form-check form-switch\">\r\n                                                    <input className=\"form-check-input\"\r\n                                                           style={{opacity: 1, pointerEvents: \"all\"}} role=\"switch\"\r\n                                                           type=\"checkbox\" value={mat.materials.material_id}\r\n                                                           id={'checkbox-' + mat.materials.material_id.toString()}\r\n                                                           onClick={(e) => handleClickMat(e, mat)}/>\r\n                                                    <label className=\"form-check-label h6\"\r\n                                                           htmlFor={'checkbox-' + mat.materials.material_id.toString()}>\r\n                                                        {mat.materials.material_ref}\r\n                                                    </label>\r\n                                                </div>\r\n                                                <div id={'div-' + mat.materials.material_id.toString()} style={{display: 'none'}}>\r\n                                                    {mat.materials.data && mat.materials.data.length !== 0 ? (\r\n                                                            mat.materials.data.map((data) => (\r\n                                                                    data.data_key === 'number' ? (\r\n                                                                        <div className=\"form-control\">\r\n                                                                            <p>{'En stock : ' + data.data_column}</p>\r\n                                                                            <input type=\"text\"\r\n                                                                                   name={mat.materials.material_id.toString()}\r\n                                                                                   onChange={(e) => handleInputMat(e, Number(data.data_column), mat)}/>\r\n                                                                            <p style={{display: 'none'}}\r\n                                                                               className={'red accent-1'}\r\n                                                                               id={'error-' + mat.materials.material_id}>\r\n                                                                                Un chiffre inférieur à votre stock\r\n                                                                                ({data.data_column})\r\n                                                                            </p>\r\n                                                                        </div>\r\n                                                                    ) : (data.data_key === 'categorie' ? (\r\n                                                                            <p>{MaterialCategoryUtils.getTextCategory(Number(data.data_column))}</p>\r\n                                                                        ) : (\r\n                                                                            ''\r\n                                                                        )\r\n                                                                    )\r\n                                                                )\r\n                                                            ))\r\n                                                        :\r\n                                                        ''\r\n                                                    }\r\n                                                </div>\r\n                                            </div>\r\n                                        ))\r\n                                        :\r\n                                        <div>No materials</div>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"mt-5 d-flex justify-content-center\">\r\n                                    <button type=\"submit\" className=\"btn btn-lg btnLogin\">\r\n                                        Valider\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\nexport default SiteFormMat;\r\n","import Sites from \"../../models/sites\";\r\nimport React, {FunctionComponent, useEffect, useState} from \"react\";\r\nimport SitesData from \"../../models/sitesData\";\r\nimport Users from \"../../models/Users\";\r\nimport {getUsersByRole} from \"../../services/usersServices\";\r\nimport ParametersHelper from \"../../helpers/parameters-helper\";\r\nimport SitesService from \"../../services/sites-service\";\r\nimport {GetRole} from \"../../models/role\";\r\nimport SiteFormMat from \"./site-form-mat\";\r\nimport {GeocodeFeature} from \"../../models/geocodeResponse\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntype Props = {\r\n    site: Sites,\r\n}\r\n\r\ntype Field = {\r\n    value?: any,\r\n    error?: string,\r\n    isValid?: boolean\r\n}\r\n\r\ntype Form = {\r\n    numberSite: Field,\r\n    dateStart: Field,\r\n    dateEnd: Field\r\n}\r\n\r\nconst SitesForm: FunctionComponent<Props> = ({site}) => {\r\n\r\n\r\n    const [firstStep, setFirstStep] = useState<boolean>(true);\r\n    const [siteAddress, setSiteAddress] = useState<SitesData>();\r\n    const [siteCustomer, setSiteCustomer] = useState<SitesData>();\r\n    const [siteManager, setSiteManager] = useState<SitesData>();\r\n    const [geocode, setGeocode] = useState<GeocodeFeature[]>([]);\r\n\r\n    const [addressError, setAddressError] = useState<string | null>();\r\n\r\n    const [form, setForm] = useState<Form>({\r\n        numberSite: {value: null},\r\n        dateStart: {value: null},\r\n        dateEnd: {value: null}\r\n    });\r\n\r\n    const [customer, setCustomer] = useState<Users[]>([]);\r\n    useEffect(() => {\r\n        getUsersByRole(GetRole.CUSTOMER).then(customer => setCustomer(customer))\r\n    }, []);\r\n\r\n    const [manager, setManager] = useState<Users[]>([]);\r\n    useEffect(() => {\r\n        getUsersByRole(GetRole.MANAGER).then(manager => setManager(manager))\r\n    }, []);\r\n\r\n    const [allSites, setAllSites] = useState<Sites[]>([]);\r\n    useEffect(() => {\r\n        SitesService.getAllSites().then(sites => setAllSites(sites));\r\n    }, []);\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const fieldName: string = e.target.name;\r\n        const fieldValue: string = e.target.value;\r\n        let newField: Field = {[fieldName]: {value: fieldValue}};\r\n        switch (fieldName) {\r\n            case 'numberSite':\r\n                if (allSites) {\r\n                    newField = ParametersHelper.testNumberSite({[fieldName]: {value: fieldValue}}, allSites);\r\n                } else {\r\n                    newField = ParametersHelper.testNumberSite({[fieldName]: {value: fieldValue}});\r\n                }\r\n                break;\r\n            case 'dateStart':\r\n            case 'dateEnd':\r\n                newField = ParametersHelper.testDate({[fieldName]: {value: fieldValue}});\r\n                break;\r\n        }\r\n        setForm({...form, ...newField});\r\n    }\r\n\r\n    const handleInputAddressChange = async (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const addressData: SitesData = new SitesData();\r\n        addressData.siteData_key = e.target.name\r\n        addressData.siteData_column = e.target.value;\r\n        setSiteAddress(addressData);\r\n\r\n        if (e.target.value.length > 5) {\r\n            await SitesService.getAddressGouv(e.target.value).then((g) => {\r\n                setGeocode(g.features);\r\n            });\r\n        }\r\n    }\r\n\r\n    const selectAddress = (address: GeocodeFeature) => {\r\n\r\n        if (address.properties === null) {\r\n            let error = 'Adresse non valide';\r\n            setAddressError(error);\r\n        } else {\r\n            const addressData: SitesData = new SitesData();\r\n            addressData.siteData_key = 'address';\r\n            addressData.siteData_column = address.properties.label;\r\n\r\n            if (siteAddress && siteAddress.siteData_column !== addressData.siteData_column) {\r\n                siteAddress.siteData_column = address.properties.label;\r\n                setSiteAddress(siteAddress);\r\n            }\r\n            setSiteAddress(addressData);\r\n            setGeocode([]);\r\n        }\r\n    }\r\n\r\n    const handleAddress = (e: React.FocusEvent<HTMLInputElement>) => {\r\n        if (site.data === null || site.data === undefined) {\r\n            site.data = [];\r\n        }\r\n        if (siteAddress && siteAddress.siteData_key === \"address\") {\r\n\r\n            if (site.data.filter((data) => data.siteData_key === siteAddress.siteData_key).length === 0) {\r\n                site.data.push(siteAddress);\r\n            } else {\r\n                for (const data of site.data) {\r\n                    if (data.siteData_key === siteAddress.siteData_key && data.siteData_column !== siteAddress.siteData_column) {\r\n                        data.siteData_column = siteAddress.siteData_column;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSelectCustomerChange = (e: React.FocusEvent<HTMLSelectElement>) => {\r\n        if (site.data === null || site.data === undefined) {\r\n            site.data = [];\r\n        }\r\n        const selectedCustomer: SitesData = new SitesData();\r\n        selectedCustomer.siteData_key = e.target.name;\r\n        selectedCustomer.siteData_column = e.target.value;\r\n\r\n        setSiteCustomer(selectedCustomer);\r\n        if (site.data) {\r\n            if (site.data.filter((data) => data.siteData_key === selectedCustomer.siteData_key).length === 0) {\r\n                site.data.push(selectedCustomer);\r\n            } else {\r\n                for (const data of site.data) {\r\n                    if (data.siteData_key === selectedCustomer.siteData_key\r\n                        && data.siteData_column !== selectedCustomer.siteData_column) {\r\n                        data.siteData_column = selectedCustomer.siteData_column;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleSelectManagerChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        if (site.data === null || site.data === undefined) {\r\n            site.data = [];\r\n        }\r\n        const selectedManager: SitesData = new SitesData();\r\n        selectedManager.siteData_key = e.target.name;\r\n        selectedManager.siteData_column = e.target.value;\r\n\r\n        setSiteManager(selectedManager);\r\n        if (site.data) {\r\n            if (site.data.filter((data) => data.siteData_key === selectedManager.siteData_key).length === 0) {\r\n                site.data.push(selectedManager);\r\n            } else {\r\n                for (const data of site.data) {\r\n                    if (data.siteData_key === selectedManager.siteData_key\r\n                        && data.siteData_column !== selectedManager.siteData_column) {\r\n                        data.siteData_column = selectedManager.siteData_column;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    const disabledSubmit = () => {\r\n        let disabled: boolean = true;\r\n        if (!validateData()) {\r\n            for (let value of Object.entries(form)) {\r\n                if (value[1].isValid) {\r\n                    disabled = false;\r\n                }\r\n            }\r\n        }\r\n        return disabled;\r\n    }\r\n\r\n    const validateData = () => {\r\n        return !(siteAddress && siteManager && siteCustomer);\r\n    }\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (disabledSubmit()) {\r\n            toast.warn(\"Le formulaire n'est pas complet !👎\", {});\r\n        } else {\r\n            site.site_number_site = form.numberSite.value;\r\n            site.site_date_start = form.dateStart.value;\r\n            site.site_date_end = form.dateEnd.value;\r\n            setFirstStep(false);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {firstStep ?\r\n                <div className=\"mt-3 d-flex justify-content-center\">\r\n                    <ToastContainer\r\n                        position=\"top-center\"\r\n                        autoClose={5000}\r\n                        hideProgressBar={false}\r\n                        newestOnTop={false}\r\n                        closeOnClick\r\n                        rtl={false}\r\n                        pauseOnFocusLoss\r\n                        draggable\r\n                        pauseOnHover\r\n                        toastClassName=\"dark-toast\"\r\n                        theme=\"dark\"/>\r\n\r\n                    <form className=\"mt-5 col-8\" onSubmit={e => handleSubmit(e)}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 m8\">\r\n                                <div className=\"card hoverable\" id=\"cardGeneral\">\r\n                                    <div className=\"card-stacked p-0\">\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"numberSite\">Numéro de chantier</label>\r\n                                            <input id=\"numberSite\" className=\"form-control\" name=\"numberSite\"\r\n                                                   value={form.numberSite.value}\r\n                                                   onChange={e => handleInputChange(e)}/>\r\n                                            {form.numberSite.error ?\r\n                                                <div className=\"red accent-1\">\r\n                                                    {form.numberSite.error}\r\n                                                </div>\r\n                                                :\r\n                                                ''\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"dateStart\">Date de début</label>\r\n                                            <input id=\"dateStart\" value={form.dateStart.value} name=\"dateStart\"\r\n                                                   type=\"date\"\r\n                                                   className=\"form-control\" onChange={e => handleInputChange(e)}/>\r\n                                            {form.dateStart.error ?\r\n                                                <div className=\"red accent-1\">\r\n                                                    {form.dateStart.error}\r\n                                                </div>\r\n                                                :\r\n                                                ''\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"dateEnd\">Date de fin</label>\r\n                                            <input id=\"dateEnd\" value={form.dateEnd.value} type=\"date\" name=\"dateEnd\"\r\n                                                   className=\"form-control\" onChange={e => handleInputChange(e)}/>\r\n                                            {form.dateEnd.error ?\r\n                                                <div className=\"red accent-1\">\r\n                                                    {form.dateEnd.error}\r\n                                                </div>\r\n                                                :\r\n                                                ''\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"address\">Adresse du chantier</label>\r\n                                            <input id=\"address\" className=\"form-control\" type='text'\r\n                                                   value={siteAddress ? siteAddress.siteData_column : ''}\r\n                                                   name=\"address\" onChange={e => handleInputAddressChange(e)}\r\n                                                   onBlur={e => handleAddress(e)}/>\r\n                                            {addressError !== null ?\r\n                                                <div className=\"red accent-1\">\r\n                                                    {addressError}\r\n                                                </div>\r\n                                                :\r\n                                                ''\r\n                                            }\r\n                                        </div>\r\n                                        <div>\r\n                                            {geocode.length !== 0 ?\r\n                                                geocode.map((f) => (\r\n                                                    <p style={{cursor: 'pointer'}}\r\n                                                       onClick={() => selectAddress(f)}>{f.properties.label}</p>\r\n                                                ))\r\n                                                :\r\n                                                ''\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"customer\">Client</label>\r\n                                            <select id=\"customer\" name=\"customer\" style={{display: 'block'}}\r\n                                                    onBlur={e => handleSelectCustomerChange(e)}>\r\n                                                <option disabled={true} selected={true}>Client</option>\r\n                                                {customer.map((customer) => (\r\n                                                    <option key={customer.id}\r\n                                                            value={customer.id}>{customer.login}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"form-group\">\r\n                                            <label htmlFor=\"manager\">Chef de chantier</label>\r\n                                            <select id=\"manager\" name=\"manager\" style={{display: 'block'}}\r\n                                                    onChange={e => handleSelectManagerChange(e)}>\r\n\r\n                                                <option disabled={true} selected={true}>Chef de chantier</option>\r\n                                                {manager.map((manager) => (\r\n                                                    <option key={manager.id} value={manager.id}>{manager.login}</option>\r\n                                                ))}\r\n                                            </select>\r\n                                        </div>\r\n                                        <div className=\"mt-5\">\r\n                                            <button type=\"submit\" className=\"btn btn-lg btnLogin\">\r\n                                                Valider\r\n                                            </button>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                </div>\r\n                :\r\n                <SiteFormMat site={site}/>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SitesForm;\r\n","import React, { FunctionComponent, useState } from \"react\";\r\nimport Sites from \"../models/sites\";\r\nimport SitesForm from \"../components/site/sites-form\";\r\n\r\n\r\nconst SitesAdd: FunctionComponent = () => {\r\n    const [sites] = useState<Sites>(new Sites());\r\n\r\n    return (\r\n        <div className=\"heroMaterial\">\r\n            <div id=\"materialFristDiv\">\r\n                <div className=\"container mt-5\">\r\n                    <h2 className=\"header center text-light\">Ajouter un chantier</h2>\r\n                    <SitesForm site={sites} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default SitesAdd;\r\n","import Problem from \"../models/Problem\"\r\nimport ProblemData from \"../models/ProblemData\"\r\nimport { Url } from \"../models/utils/Url\"\r\n\r\nexport async function getAllProblems() {\r\n    return await fetch(Url.GET_ALL_PROBLEM_URL, {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport async function getOneProblem(id: number) {\r\n    return await fetch(Url.GET_PROBLEM_URL.replace(Url.ARG_PROBLEM_ID , id.toString()), {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport async function deleteOneProblem(id: number) {\r\n    return await fetch(Url.DELETE_PROBLEM_URL.replace(Url.ARG_PROBLEM_ID , id.toString()), {\r\n        mode: \"cors\",\r\n        method: 'DELETE',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then(response => response)\r\n}\r\n\r\nexport async function updateOneProblem(problem: Problem) {\r\n    return await fetch(Url.UPDATE_PROBLEM_URL\t, {\r\n        mode: \"cors\",\r\n        method: 'PUT',\r\n        body: JSON.stringify({\"problem_id\": problem.problem_id, \"problem_ref\": problem.problem_ref,}),\r\n        headers: {\r\n            'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport async function postOneProblem(problem: Problem) {\r\n    return await fetch(Url.POST_PROBLEM_URL, {\r\n        mode: \"cors\",\r\n        method: 'POST',\r\n        body: JSON.stringify({\"problem_ref\": problem.problem_ref}),\r\n        headers: {\r\n            'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\n\r\nexport async function postDataProblem(data: ProblemData) {\r\n    console.log(data)\r\n    return await fetch(Url.POST_PROBLEM_DATA_URL, {\r\n        mode: \"cors\",\r\n        method: 'POST',\r\n        body: JSON.stringify({\r\n            \"problemData_problemId\": data.problemData_problemId,\r\n            \"problemData_key\": data.problemData_key,\r\n            \"problemData_column\": data.problemData_column\r\n        }),\r\n        headers: {\r\n            'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\nexport async function getAllProblemData() {\r\n    return await fetch(\"http://api.heimdall.cda5.lh.manusien-ecolelamanu.fr/api/v1/problem/data/getAll\", {\r\n        mode: \"cors\",\r\n        method: 'GET',\r\n        headers: {'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\"}\r\n    })\r\n        .then(response => response.json())\r\n}\r\n\r\n\r\n\r\nexport async function updateOneDataProblem(data: ProblemData) {\r\n    return await fetch(Url.UPDATE_PROBLEM_DATA_URL, {\r\n        mode: \"cors\",\r\n        method: 'PUT',\r\n        body: JSON.stringify({\r\n            \"problemData_id\": data.problemData_id,\r\n            \"problemData_problemId\": data.problemData_problemId,\r\n            \"problemData_key\": data.problemData_key,\r\n            \"problemData_column\": data.problemData_column\r\n        }),\r\n        headers: {\r\n            'Authorization': localStorage.getItem('token') ? \"bearer \" + localStorage.getItem('token') : \"0\",\r\n            'Content-Type': 'application/json'\r\n        }\r\n    })\r\n        .then(response => response.json())\r\n}\r\n  \r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport Problem from \"../../models/Problem\";\r\nimport ProblemData from \"../../models/ProblemData\";\r\nimport { useHistory } from 'react-router';\r\nimport { Button } from 'react-bootstrap';\r\nimport { Modal } from 'react-bootstrap';\r\nimport { deleteOneProblem } from \"../../services/problems-service\";\r\nimport Moment from \"moment\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\ntype Props = { problem: Problem };\r\n\r\nconst ProblemRow: FunctionComponent<Props> = ({ problem }) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n\r\n    const [problemData, setProblemData] = useState<ProblemData[]>([]);\r\n    const handleClose = () => setShow(false);\r\n    const [show, setShow] = useState(false);\r\n    const [problemId, setProblemId] = useState(-1)\r\n    const history = useHistory();\r\n\r\n    const updateProblem = (id: number) => {\r\n        history.push(`/problems/update/${id}`);\r\n    }\r\n    const detailProblem = (id : number) => {\r\n        history.push(`/problems/detail/${id}`);\r\n    }\r\n    function deleteProblem(id: number) {\r\n        setShow(true);\r\n        setProblemId(id);\r\n    }\r\n\r\n    async function confirmDelete(id: number) {\r\n        var responseDelete = null;\r\n        await deleteOneProblem(id).then(e => responseDelete = e)\r\n        if (responseDelete !== null) {\r\n            toast.success(\"Problème supprimer avec succès\");\r\n            setTimeout(function() {\r\n                window.location.reload();\r\n            }, 5000);\r\n        }\r\n        else {\r\n            toast.warn(\"Erreur lors de la suppression du problème\", {});\r\n            setTimeout(function() {\r\n                window.location.reload();\r\n            }, 5000);\r\n        }\r\n        setShow(false);\r\n        \r\n    }\r\n\r\n    if (problemData !== null) {\r\n        return (\r\n            <>\r\n                <ToastContainer\r\n                    position=\"top-center\"\r\n                    autoClose={5000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                    toastClassName=\"dark-toast\"\r\n                    theme=\"dark\" />\r\n\r\n                <Modal show={show} onHide={handleClose} className=\"deleteModal\" animation={false}>\r\n                    <div className=\"text-center\"><Modal.Body>Etes-vous sur de vouloir supprimer le ticket numéro {problemId} </Modal.Body>\r\n                        <div className=\"d-flex justify-content-around\">\r\n                            <Button variant=\"secondary\" onClick={handleClose}>\r\n                                Annuler\r\n                            </Button>\r\n                            <Button variant=\"danger\" onClick={() => confirmDelete(problemId)}>\r\n                                Supprimer\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                </Modal>\r\n                <tr className=\"table-light\">\r\n                    <td className=\"col text-center tdId\">{problem.problem_id}</td>\r\n                    <td className=\"col text-center\">{problem.problem_ref}</td>\r\n                    <td className=\"col text-center\">{problem.data ?\r\n                    problem.data.map(datas => (datas.problemData_key === \"Nom\" ?\r\n                        <td className=\"text-center\">{datas.problemData_column}</td>\r\n                        : \"\"\r\n                    ))\r\n                    : \"\"\r\n                }\r\n               </td>\r\n                    <td className=\"col text-center tdId\">{Moment(problem.created_at.date).format('DD/MM/YYYY')}</td>\r\n                    <td className=\"col text-center tdId\">\r\n                        {problem.updated_at !== null ? Moment(problem.updated_at.date).format('DD/MM/YYYY') : \"\"}\r\n                    </td>\r\n                    <td className=\"col text-center\">\r\n                        <Button className=\"text-lowercase mt-3 btn-floating btn-small waves-effect waves-light green z-deepth-3\" variant=\"outline-primary\" onClick={() => detailProblem(problem.problem_id)}>\r\n                            <i className=\"material-icons\">zoom_in</i>\r\n                        </Button>\r\n                    </td>\r\n                    <td className=\"col text-center\">\r\n                        <Button className=\"text-lowercase mt-3 btn-floating btn-small waves-effect waves-light yellow z-deepth-3\" variant=\"outline-warning\" onClick={() => updateProblem(problem.problem_id)}>\r\n                            <i className=\"material-icons\">edit</i>\r\n                        </Button>\r\n                    </td>\r\n                    <td className=\"col text-center\">\r\n                        <Button type=\"button\" className=\"text-lowercase mt-3  btn-floating btn-small waves-effect waves-light red z-deepth-3\" variant=\"outline-danger\" onClick={() => deleteProblem(problem.problem_id)}>\r\n                            <i className=\"material-icons\">delete</i>\r\n                        </Button>\r\n                    </td>\r\n                </tr>\r\n            </>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"hero\">\r\n                <p>Aucune données du ticket a afficher !</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default ProblemRow;\r\n","export enum JobEmployee {\r\n    UNDEFINED,\r\n    ELECTRICIAN,\r\n    PLUMBER,\r\n    ROOFER,\r\n    MASON,\r\n    CARPENTER\r\n}\r\n\r\nexport class JobEmployeeUtils {\r\n\r\n    public static getJobArray(): JobEmployee[] {\r\n        return [\r\n            JobEmployee.ELECTRICIAN,\r\n            JobEmployee.PLUMBER,\r\n            JobEmployee.ROOFER,\r\n            JobEmployee.MASON,\r\n            JobEmployee.CARPENTER\r\n        ];\r\n    }\r\n\r\n    public static getTextJob(job: JobEmployee): string {\r\n        switch (job) {\r\n            case JobEmployee.UNDEFINED:\r\n                return 'Indéfini';\r\n            case JobEmployee.ELECTRICIAN:\r\n                return 'Electricien';\r\n            case JobEmployee.CARPENTER:\r\n                return 'Menuisier';\r\n            case JobEmployee.PLUMBER:\r\n                return 'Plombier';\r\n            case JobEmployee.MASON:\r\n                return 'Maçon';\r\n            case JobEmployee.ROOFER:\r\n                return 'Couvreur';\r\n        }\r\n    }\r\n}","import React, { useEffect, FunctionComponent, useState } from 'react';\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport \"./Login.css\";\r\nimport ProblemRow from '../components/problem/ProblemRow';\r\nimport Problems from '../models/Problem';\r\nimport { getAllProblems } from '../services/problems-service';\r\nimport { Link } from \"react-router-dom\";\r\nimport Table from 'react-bootstrap/Table'\r\n\r\ntype Params = { id: string };\r\n\r\nconst CheckProblems: FunctionComponent<RouteComponentProps<Params>> = () => {\r\n\r\n    const [problems, setProblems] = useState<Problems[]>([]);\r\n    useEffect(() => {\r\n        getAllProblems().then(e => setProblems(e));\r\n        \r\n    }, []\r\n\r\n    )\r\n\r\n    return (\r\n        <>\r\n            <div className=\"heroMaterial\">\r\n                <div className='heroProblemeEnfant'>\r\n\r\n                    <div className='container'>\r\n\r\n                        <div className=\"text-center mt-5 pt-5 pb-5 titleStyle text-light\">Tickets</div>\r\n                        <Link className=\"btn-floating btn-large waves-effect waves-light green z-deepth-3\"\r\n                            style={{ position: 'fixed', top: '85px', right: '25px' }} to=\"/problems/create/\"\r\n                        >\r\n                            <i className=\"material-icons\">add</i>\r\n                        </Link>\r\n                        <Table striped hover className=\"table table-responsive table-hover text-center mb-5\">\r\n                            <thead>\r\n                                <tr className=\"table-dark\">\r\n                                    <th scope=\"row\" className='tdId'>Ticket id</th>\r\n                                    <th scope=\"row\">Référence du Ticket</th>\r\n                                    <th scope=\"row\">Nom du Ticket</th>\r\n                                    <th scope=\"row\" className='tdId'>Crée le</th>\r\n                                    <th scope=\"row\" className=\"tdId\">Dernière Modification</th>\r\n                                    <th scope=\"row\">Détail du Ticket</th>\r\n                                    <th scope=\"row\">Modifier le Ticket</th>\r\n                                    <th scope=\"row\">Supprimer le Ticket</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {problems.map(e =>\r\n                                    <>\r\n                                        <ProblemRow key={e.problem_id} problem={e} />\r\n                                    </>\r\n                                )}\r\n                            </tbody>\r\n                        </Table>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default CheckProblems;","export class DateDetail {\r\n    date: string = '';\r\n    timezone_type: number = 0;\r\n    timezone: string = '';\r\n\r\n    constructor(date?: DateDetail) {\r\n        if (date) {\r\n            this.date = date.date;\r\n            this.timezone_type = date.timezone_type;\r\n            this.timezone = date.timezone;\r\n        }\r\n    }\r\n}","import ProblemData from \"./ProblemData\";\r\nimport {DateDetail} from \"./utils/DateDetail\";\r\n\r\nexport default class Problem {\r\n\r\n    problem_id: number;\r\n    problem_ref: string;\r\n    created_at: DateDetail;\r\n    updated_at: DateDetail|null;\r\n    deleted_at: DateDetail|null;\r\n    data?: ProblemData[]|null;\r\n\r\n    constructor(\r\n        problem_id: number = -1,\r\n        problem_ref: string = \"\",\r\n        created_at: DateDetail  = new DateDetail(),\r\n        updated_at: DateDetail|null = null,\r\n        deleted_at: DateDetail|null = null,\r\n        data: ProblemData[]|null = null\r\n    )\r\n{\r\n        this.problem_id = problem_id;\r\n        this.problem_ref = problem_ref;\r\n        this.created_at = created_at;\r\n        this.updated_at = updated_at;\r\n        this.deleted_at = deleted_at;\r\n        this.data = data;\r\n    }\r\n}","export default class ProblemData {\r\n\r\n    problemData_id: number;\r\n    problemData_problemId: number;\r\n    problemData_key: string;\r\n    problemData_column: string;\r\n\r\n    constructor(\r\n        problemData_id: number = -1,\r\n        problemData_problemId: number = -1,\r\n        problemData_key: string =\"\",\r\n        problemData_column: string =\"\",\r\n  \r\n    )\r\n{\r\n        this.problemData_id = problemData_id;\r\n        this.problemData_problemId = problemData_problemId;\r\n        this.problemData_key = problemData_key;\r\n        this.problemData_column = problemData_column;\r\n     \r\n    }\r\n}","import React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport ParametersHelper from \"../../helpers/parameters-helper\";\r\nimport Sites from \"../../models/sites\";\r\nimport { getOneProblem, updateOneDataProblem, updateOneProblem ,postDataProblem } from \"../../services/problems-service\";\r\nimport SitesService from '../../services/sites-service';\r\nimport Problem from \"../../models/Problem\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport ProblemData from \"../../models/ProblemData\";\r\nimport { BrowserRouter , Link } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from 'react-router';\r\n\r\ntype Params = { id: string };\r\n\r\nconst UpdateProblem: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n\r\n    \r\n    const [ref, setRef] = useState(\"\");\r\n    const [name, setName] = useState<ProblemData>(new ProblemData());\r\n    const [site, setSite] = useState<ProblemData>(new ProblemData());\r\n    const [description, setDescription] = useState<ProblemData>(new ProblemData());\r\n    const [problem, setProblem] = useState(new Problem());\r\n\r\n    const [allSites, setAllSite] = useState<Sites[]>([]);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n\r\n        const getDataValue = (datas: ProblemData[]) => {\r\n            if (datas.length !== 0) {\r\n                for (const data of datas) {\r\n                    if (data.problemData_key === 'Nom') {\r\n                        setName(data);\r\n                    }\r\n                    if (data.problemData_key === 'Description') {\r\n                        setDescription(data);\r\n                    }\r\n                    if (data.problemData_key === 'Site') {\r\n                        setSite(data);\r\n                    }\r\n                }\r\n            } else {\r\n                name.problemData_problemId = problem.problem_id;\r\n                setName(name)\r\n                description.problemData_problemId = problem.problem_id;\r\n                setDescription(description);\r\n                site.problemData_problemId = problem.problem_id;\r\n                setSite(site);\r\n                datas.push(name);\r\n                datas.push(description);\r\n                datas.push(site)\r\n            }\r\n            \r\n        }\r\n        async function yes() {\r\n            await SitesService.getAllSites().then(tt => setAllSite(tt));\r\n            await getOneProblem(parseInt(match.params.id)).then(tt => setProblem(tt));\r\n        }\r\n        yes();\r\n        getOneProblem(+match.params.id).then((e) => {\r\n            setProblem(e);\r\n            setRef(e.problem_ref)\r\n            if (e.data) {\r\n                getDataValue(e.data);\r\n            }\r\n        });\r\n    }, [match.params.id]);\r\n\r\n    const handleInputDataChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newData = new ProblemData();\r\n        newData.problemData_key = e.target.name;\r\n        newData.problemData_column = e.target.value;\r\n        if(newData.problemData_key === \"name\") {\r\n            setName(newData);\r\n        }\r\n        if(e.target.name === \"ref\")\r\n        {\r\n            setRef(e.target.value);\r\n        }\r\n    }\r\n    const handleInputDataChangeSelect = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        let newData = new ProblemData();\r\n        newData.problemData_key = e.target.name;\r\n        newData.problemData_column = e.target.value;\r\n        if(newData.problemData_key === \"Site\") {\r\n            setSite(newData);\r\n        }\r\n    }\r\n    const handleInputDataChangeText = (e: React.ChangeEvent<HTMLTextAreaElement>) => {\r\n        let newData = new ProblemData();\r\n        newData.problemData_key = e.target.name;\r\n        newData.problemData_column = e.target.value;\r\n        if(newData.problemData_key === \"Description\") {\r\n                setDescription(newData);   \r\n        }\r\n    }\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        \r\n            var problemToPost: Problem = new Problem();\r\n            var dataToPost: ProblemData = new ProblemData();\r\n\r\n            problemToPost.problem_id = parseInt(match.params.id);\r\n            problemToPost.problem_ref = ref;\r\n            await updateOneProblem(problemToPost).then(e => e);\r\n\r\n            dataToPost.problemData_id = name.problemData_id;\r\n            if(dataToPost.problemData_id === -1)\r\n            {\r\n                dataToPost.problemData_key = \"Nom\";\r\n                dataToPost.problemData_column = name.problemData_column;\r\n                dataToPost.problemData_problemId = parseInt(match.params.id);\r\n                await postDataProblem(dataToPost).then(e => e);\r\n            }else\r\n            {\r\n                dataToPost.problemData_key = \"Nom\";\r\n                dataToPost.problemData_column = name.problemData_column;\r\n                dataToPost.problemData_problemId = parseInt(match.params.id);\r\n                await updateOneDataProblem(dataToPost).then(e => e);\r\n            }\r\n            dataToPost.problemData_id = site.problemData_id;        \r\n            if(dataToPost.problemData_id === -1)\r\n            {\r\n                dataToPost.problemData_key = \"Site\";\r\n                dataToPost.problemData_column = site.problemData_column;\r\n                dataToPost.problemData_problemId = parseInt(match.params.id);\r\n                await postDataProblem(dataToPost).then(e => e);\r\n            }\r\n            else{\r\n                dataToPost.problemData_key = \"Site\";\r\n                dataToPost.problemData_column = site.problemData_column;\r\n                dataToPost.problemData_problemId = parseInt(match.params.id);\r\n                await updateOneDataProblem(dataToPost).then(e => e);\r\n            }\r\n            dataToPost.problemData_id = description.problemData_id;           \r\n            if(dataToPost.problemData_id === -1)\r\n            {\r\n                dataToPost.problemData_key = \"Description\";\r\n                dataToPost.problemData_column = description.problemData_column;\r\n                dataToPost.problemData_problemId = parseInt(match.params.id);\r\n                await postDataProblem(dataToPost).then(e => e);           \r\n\r\n            }\r\n            else{ \r\n                dataToPost.problemData_key = \"Description\";\r\n                dataToPost.problemData_column = description.problemData_column;\r\n                dataToPost.problemData_problemId = parseInt(match.params.id);\r\n                await updateOneDataProblem(dataToPost).then(e => e);\r\n            }         \r\n                        toast.success('Ticket mis à jours avec succès👍', {});\r\n                        setTimeout(function() {\r\n                            history.push(`/problems`);\r\n                        }, 5000);\r\n                }\r\n    return (\r\n        <div className=\"hero-auto\">\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                toastClassName=\"dark-toast\"\r\n                theme=\"dark\" />\r\n\r\n            <div className='heroProblemeEnfant'>\r\n                <div className=\"container mt-5 pt-5 justify-content-center d-flex\">\r\n                    <form className=\"mt-5 \" onSubmit={e => handleSubmit(e)}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 m8\">\r\n                                <div className=\"card hoverable\" id=\"cardGeneral\">\r\n                                    <h2 className=\"text-center mb-4\"> Modifier un Ticket</h2>\r\n                                    <div className=\"card-stacked p-0\">\r\n                                        <div className=\"card-content\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"name\" className=\"text-secondary\">Nom du Ticket</label>\r\n                                                        <input id=\"name\" className=\"form-control\" name=\"name\" value={name.problemData_column}onChange={(e) => handleInputDataChange(e)} />                                        \r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"ref\" className=\"text-secondary\">Référence du Ticket</label>\r\n                                                <input id=\"budget\" type=\"number\" className=\"form-control\" name=\"ref\" value={ref} onChange={(e) => handleInputDataChange(e)} />\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"firstname\" className=\"text-secondary\">Site associés</label>\r\n                                                <select id=\"firstname\" name=\"Site\" value={site.problemData_column} onChange={(e) => handleInputDataChangeSelect(e)}>\r\n                                                    {allSites && allSites.map((e) => (\r\n\r\n                                                        <option selected={e.site_id === Number(site.problemData_column)} value={e.site_id}>{e.site_id}</option>\r\n                                                    ))}\r\n                                                </select>\r\n\r\n\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"desc\" className=\"text-secondary\">Description du Ticket</label>\r\n                                                \r\n                                                        <textarea id=\"desc\" className=\"form-control styleArea\" name=\"Description\" value={description.problemData_column} onChange={(e) => handleInputDataChangeText(e)}>\r\n                                                </textarea>\r\n                                                   \r\n\r\n                                               \r\n                                            </div>\r\n                                            <div className=\"card-action center\">\r\n                                                <button type=\"submit\" className=\"btn btn-lg btnLogin\">Valider</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            <Link className=\"btn-floating btn-large waves-effect waves-light orange lighten-1 z-deepth-3\"\r\n                style={{ position: 'fixed', top: '95px', left: '50px' }}\r\n                to=\"/problems\">\r\n                <i className=\"material-icons\">navigate_before</i>\r\n            </Link>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default UpdateProblem;\r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Problem from \"../../models/Problem\";\r\nimport ProblemData from \"../../models/ProblemData\";\r\nimport { getOneProblem } from \"../../services/problems-service\";\r\nimport { BrowserRouter, Link } from 'react-router-dom';\r\nimport {useHistory} from 'react-router';\r\nimport Users from \"../../models/Users\";\r\n\r\ntype Params = { id: string };\r\n\r\nconst DetailProblem: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    \r\n    const [name, setName] = useState<ProblemData>(new ProblemData());\r\n    const [site, setSite] = useState<ProblemData>(new ProblemData());\r\n    const [description, setDescription] = useState<ProblemData>(new ProblemData());\r\n    const [problem, setProblem] = useState(new Problem());\r\n    \r\n    useEffect(() => {\r\n\r\n        const getDataValue = (datas: ProblemData[]) => {\r\n            if (datas.length !== 0) {\r\n                for (const data of datas) {\r\n                    if (data.problemData_key === 'Nom') {\r\n                        setName(data);\r\n                    }\r\n                    if (data.problemData_key === 'Description') {\r\n                        setDescription(data);\r\n                    }\r\n                    if (data.problemData_key === 'Site') {\r\n                        setSite(data);\r\n                    }\r\n                }\r\n            } else {\r\n                name.problemData_problemId = problem.problem_id;\r\n                setName(name)\r\n                description.problemData_problemId = problem.problem_id;\r\n                setDescription(description);\r\n                site.problemData_problemId = problem.problem_id;\r\n                setSite(site);\r\n                datas.push(name);\r\n                datas.push(description);\r\n                datas.push(site)\r\n            }\r\n        }\r\n\r\n        getOneProblem(+match.params.id).then((e) => {\r\n            setProblem(e);\r\n            if (e.data) {\r\n                getDataValue(e.data);\r\n            }\r\n        });\r\n    }, [match.params.id]);\r\n    console.log(problem);\r\n\r\n    \r\n        return (\r\n            <div className=\"hero\">\r\n                <div className='heroProblemeEnfant'>\r\n                    <div className=\"container mt-5 pt-5 justify-content-center d-flex align-items-center h-100\">\r\n                    <form className=\"mt-5 \" >\r\n                        <div className=\"card hoverable\" id=\"cardGeneral\">\r\n                        <h2 className=\"text-center mb-4 mt-2\"> Détail du Ticket</h2>\r\n                            <div className=\"card-stacked\">\r\n                                <div className=\"card-content\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"lastname\" className=\"text-secondary h6\">Nom du Ticket </label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"lastname\" value={name.problemData_column}/>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                        <label  className=\"text-secondary h6\">Site associé</label>\r\n                                        <input  type=\"number\" className=\"form-control\" value={site.problemData_column} />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                        <label  className=\"text-secondary h6\">Référence du Ticket</label>\r\n                                        <input  type=\"number\" className=\"form-control\" value={problem.problem_ref} />\r\n                                        </div>\r\n\r\n                                        <div className=\"form-group\">\r\n                                        <label  className=\"text-secondary h6\">Description du Ticket</label>\r\n                                        <input type=\"text\" className=\"form-control\" value={description.problemData_column}/>\r\n                                        </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        </form>\r\n            <Link className=\"btn-floating btn-large waves-effect waves-light orange lighten-1 z-deepth-3\"\r\n                style={{ position: 'fixed', top: '95px', left: '50px' }}\r\n                to=\"/problems\">\r\n                <i className=\"material-icons\">navigate_before</i>\r\n            </Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n \r\n\r\n\r\n\r\n    \r\n}\r\nexport default DetailProblem;\r\n","import MaterialData from \"./MaterialData\";\r\nimport {DateDetail} from \"./utils/DateDetail\";\r\n\r\nexport default class Materials {\r\n\r\n    material_id: number = 0;\r\n    material_ref: string = '';\r\n    created_at: DateDetail = new DateDetail();\r\n    updated_at: DateDetail | null = null;\r\n    deleted_at: DateDetail | null = null;\r\n    data?: MaterialData[] | null = null;\r\n\r\n    constructor(material?: Materials) {\r\n        if( material !== null && material !== undefined ) {\r\n            this.material_id = material.material_id;\r\n            this.material_ref = material.material_ref;\r\n            this.created_at = material.created_at;\r\n            this.updated_at = material.updated_at;\r\n            this.deleted_at = material.deleted_at;\r\n            this.data = material.data;\r\n        }\r\n\r\n    }\r\n}\r\n","export default class MaterialData {\r\n\r\n    materialData_id: number = 0;\r\n    materialData_materialId: number = 0;\r\n    data_key: string = '';\r\n    data_column: string = '';\r\n\r\n    constructor(\r\n        materialData?: MaterialData\r\n    ) {\r\n        if (materialData !== null && materialData !== undefined) {\r\n            this.materialData_id = materialData.materialData_id;\r\n            this.materialData_materialId = materialData.materialData_materialId;\r\n            this.data_key = materialData.data_key;\r\n            this.data_column = materialData.data_column;\r\n        }\r\n    }\r\n}\r\n","import React, { FunctionComponent, useState, useEffect } from \"react\";\r\nimport Materials from \"../../models/Materials\";\r\nimport MaterialData from \"../../models/MaterialData\";\r\nimport { Button } from 'react-bootstrap';\r\nimport {  Link } from 'react-router-dom';\r\n\r\nimport '../../components/CreateMaterial.css';\r\nimport ParametersHelper from \"../../helpers/parameters-helper\";\r\nimport { postDataMaterial, postMaterials, getAllMaterialCategory } from \"../../services/Materials-services\";\r\nimport MaterialCategory from \"../../models/MaterialCategory\";\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from 'react-router';\r\nimport { MaterialCategoryUtils } from \"../../models/enums/materialCategory\";\r\n\r\n\r\n\r\nconst CreateMaterial: FunctionComponent = () => {\r\n    const history = useHistory();\r\n\r\n    const [nameMaterial, setName] = useState(\"\");\r\n    const [refMaterial, setRef] = useState(\"\");\r\n    const [NombreMaterial, setNombreMaterial] = useState(\"\");\r\n    const [catMaterial, setCatMaterial] = useState(\"0\");\r\n    \r\n   \r\n    let checkNameMaterial: boolean = false;\r\n    let checkRefMaterial: boolean = false;\r\n    let checkCatMaterial: boolean = false;\r\n   \r\n    const handleSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        let newData = new MaterialData();\r\n        newData.data_key = e.target.name;\r\n        newData.data_column = e.target.value;\r\n\r\n        if (newData.data_key === 'categorie') {\r\n            setCatMaterial(newData.data_column);\r\n        }\r\n    }\r\n\r\n    if (nameMaterial) {\r\n        if (ParametersHelper.testNameMaterial(nameMaterial) === true) {\r\n            checkNameMaterial = true;\r\n        }\r\n    }\r\n\r\n    if (refMaterial) {\r\n        if (ParametersHelper.testRefMaterial(refMaterial) === true) {\r\n            checkRefMaterial = true;\r\n        }\r\n    }\r\n\r\n    if (NombreMaterial) {\r\n        if (ParametersHelper.checkNombreMaterial(NombreMaterial) === true) {\r\n        }\r\n    }\r\n   \r\n    if (catMaterial) {\r\n        if (catMaterial !== \"0\") {\r\n            checkCatMaterial = true;\r\n        }\r\n        \r\n    }\r\n\r\n    \r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        console.log(nameMaterial);\r\n        console.log(refMaterial);\r\n        console.log(NombreMaterial);\r\n        console.log(catMaterial);\r\n        if (checkNameMaterial === true && checkRefMaterial === true  && checkCatMaterial === true) {\r\n            var createdId = -105;\r\n            const material = new Materials();\r\n            material.material_ref = refMaterial;\r\n            await postMaterials(material).then(t => createdId = t.material_id);\r\n\r\n            const dataToPost = new MaterialData();\r\n            dataToPost.materialData_materialId = createdId;\r\n            dataToPost.data_key = \"categorie\";\r\n            dataToPost.data_column = catMaterial;\r\n            await postDataMaterial(dataToPost);\r\n\r\n            dataToPost.materialData_materialId = createdId;\r\n            dataToPost.data_key = \"name\";\r\n            dataToPost.data_column = nameMaterial;\r\n            await postDataMaterial(dataToPost);\r\n\r\n            dataToPost.materialData_materialId = createdId;\r\n            dataToPost.data_key = \"number\";\r\n            dataToPost.data_column = NombreMaterial;\r\n            await postDataMaterial(dataToPost);\r\n\r\n            toast.success('Matériel crée avec succès👍', {});\r\n            setTimeout(function() {\r\n                history.push(`/material`);\r\n            }, 5000);\r\n        } else {\r\n            toast.warn(\"Le formulaire n'est pas complet !👎\", {});\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                toastClassName=\"dark-toast\"\r\n                theme=\"dark\" />\r\n                \r\n                \r\n            <div className=\"heroMaterial\">\r\n                <div id=\"materialFristDiv\">\r\n\r\n                    <div className=\"container mt-5 p-2 pb-5\">\r\n                        <div className=\"mt-5 pt-5 justify-content-center d-flex\">\r\n                            <div className=\"from\" style={{ background: 'white' }}>\r\n                                <form onSubmit={e => handleSubmit(e)}>\r\n                                    <h2 className=\"text-center mb-5 mt-2\"> Créer un Material</h2>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"nameMaterial\">Nom du Material</label>\r\n                                        <input id=\"nameMaterial\" className=\"form-control\" name=\"nameMaterial \" value={nameMaterial} onChange={(e) => setName(e.target.value)} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"RefMaterial\">Référence du Material</label>\r\n                                        <input id=\"RefMaterial\" className=\"form-control\" name=\"refMaterial \" value={refMaterial} onChange={(e) => setRef(e.target.value)} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"NombreMaterial\">Nombre du matériel</label>\r\n                                        <input type=\"number\" id=\"NombreMaterial\" className=\"form-control\" name=\"NombreMaterial \" value={NombreMaterial} onChange={(e) => setNombreMaterial(e.target.value)} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"exampleFormControlSelect1\">Catégorie</label>\r\n                                        <select className=\"form-control\" id=\"categorie\" name=\"categorie\"\r\n                                                value={catMaterial}\r\n                                                onChange={(e) => handleSelectChange(e)}>\r\n                                            <option value=\"0\">Veuillez choisir une Catégorie</option>\r\n                                            {MaterialCategoryUtils.getCategoriesArray().map((category) => (\r\n                                                <option value={category} key={category}\r\n                                                        selected={Number(catMaterial) === category}>\r\n                                                    {MaterialCategoryUtils.getTextCategory(category)}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    <Button type=\"submit\" className=\"mt-3 btn btn-lg btnLogin\">\r\n                                        Créer\r\n                                    </Button>\r\n                                </form>\r\n                                <Link className=\"btn-floating btn-large waves-effect waves-light orange lighten-1 z-deepth-3\"\r\n                                    style={{ position: 'fixed', top: '95px', left: '50px' }}\r\n                                    to=\"/material\">\r\n                                    <i className=\"material-icons\">navigate_before</i>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateMaterial;","import React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport ParametersHelper from \"../../helpers/parameters-helper\";\r\nimport Sites from \"../../models/sites\";\r\nimport { postDataProblem, postOneProblem } from \"../../services/problems-service\";\r\nimport SitesService from '../../services/sites-service';\r\nimport Problem from \"../../models/Problem\";\r\nimport ProblemData from \"../../models/ProblemData\";\r\nimport { Link } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst CreateProblem: FunctionComponent = () => {\r\n    const [name, setName] = useState(\"\");\r\n    const [ref, setRef] = useState(\"\");\r\n    const [site, setSite] = useState(\"\");\r\n    const [description, setDescription] = useState(\"\");\r\n    const [allSites, setAllSite] = useState<Sites[]>([]);\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n        SitesService.getAllSites().then(e => setAllSite(e));\r\n    }, []);\r\n    let checkName: boolean = false;\r\n    let checkDescription: boolean = false;\r\n    let checkRef: boolean = false;\r\n    let checkSite: boolean = false;\r\n    if (name) {\r\n        if (ParametersHelper.testProblemName(name) === true) {\r\n            checkName = true;\r\n        }\r\n    }\r\n    if (ref) {\r\n        checkRef = true;\r\n    }\r\n    if (site) {\r\n        if (allSites.filter(e => e.site_id === +site).length !== 0)\r\n        checkSite = true;\r\n    }\r\n    if (description) {\r\n        if (ParametersHelper.testTextLength(description) === true) {\r\n            checkDescription = true;\r\n        }\r\n    }\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        if (checkName === true && checkDescription === true && checkRef === true && checkSite === true) {\r\n            var problemToPost: Problem = new Problem();\r\n            var dataToPost: ProblemData = new ProblemData();\r\n            problemToPost.problem_ref = ref;\r\n            var createdId:  Problem = new Problem();;\r\n\r\n            await postOneProblem(problemToPost).then(e => createdId = e);\r\n            console.log(createdId);\r\n\r\n            dataToPost.problemData_key = \"Nom\";\r\n            dataToPost.problemData_column = name;\r\n            dataToPost.problemData_problemId = createdId.problem_id;\r\n            await postDataProblem(dataToPost).then(e => e);\r\n\r\n            dataToPost.problemData_key = \"Site\";\r\n            dataToPost.problemData_column = site;\r\n            dataToPost.problemData_problemId = createdId.problem_id;\r\n            await postDataProblem(dataToPost).then(e => e);\r\n\r\n            dataToPost.problemData_key = \"Description\";\r\n            dataToPost.problemData_column = description;\r\n            dataToPost.problemData_problemId = createdId.problem_id;\r\n            await postDataProblem(dataToPost).then(e => e);\r\n\r\n            toast.success('Ticket crée avec succès👍', {});\r\n            setTimeout(function() {\r\n                history.push(`/problems`);\r\n            }, 5000);\r\n        } else {\r\n            toast.warn(\"Le formulaire n'est pas complet !👎\", {});\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"hero-auto\">\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                toastClassName=\"dark-toast\"\r\n                theme=\"dark\" />\r\n\r\n            <div className='heroProblemeEnfant'>\r\n                <div className=\"container mt-5 pt-5 justify-content-center d-flex align-items-center h-100\">\r\n                    <form className=\"mt-5 \" onSubmit={e => handleSubmit(e)}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col s12 m8\">\r\n                                <div className=\"card hoverable\" id=\"cardGeneral\">\r\n                                    <h2 className=\"text-center mb-5\"> Crée un Ticket</h2>\r\n                                    <div className=\"card-stacked\">\r\n                                        <div className=\"card-content p-0\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"place\" className=\"text-secondary h6\">Nom du Ticket</label>\r\n\r\n                                                <input id=\"place\" className=\"form-control\" name=\"name\" value={name} onChange={(e) => setName(e.target.value)} />\r\n\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"budget\" className=\"text-secondary h6 mt-3\">Référence du Ticket</label>\r\n                                                <input id=\"budget\" type=\"number\" className=\"form-control\" name=\"ref\" value={ref} onChange={(e) => setRef(e.target.value)} />\r\n\r\n\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"firstname\" className=\"text-secondary h6 mt-3\">Site associés</label>\r\n                                                <select id=\"firstname\" value={site} onChange={(e) => setSite(e.target.value)}>\r\n                                                    <option value=\"0\">Veuillez choisir un site </option>\r\n                                                    {allSites && allSites.map((e) => (\r\n                                                        <option value={e.site_id}>{e.site_id}</option>\r\n                                                    ))}\r\n                                                </select>\r\n\r\n\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"desc\" className=\"text-secondary h6 mt-3\">Description du Ticket</label>\r\n                                                <textarea id=\"desc\" className=\"form-control styleArea\" name=\"desc\" value={description} onChange={(e) => setDescription(e.target.value)}>\r\n                                                </textarea>\r\n                                            </div>\r\n                                            <div className=\"card-action center\">\r\n                                                <button type=\"submit\" className=\"btn btn-lg btnLogin\">Valider</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n\r\n                    <Link className=\"btn-floating btn-large waves-effect waves-light orange lighten-1 z-deepth-3\"\r\n                        style={{ position: 'fixed', top: '95px', left: '50px' }}\r\n                        to=\"/problems\">\r\n                        <i className=\"material-icons\">navigate_before</i>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CreateProblem;\r\n","import React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { RouteComponentProps, useHistory } from \"react-router-dom\";\r\nimport Sites from \"../../models/sites\";\r\nimport SitesService from \"../../services/sites-service\";\r\nimport { getDateForInput } from \"../../helpers/utils\";\r\nimport SitesData from \"../../models/sitesData\";\r\nimport Users from \"../../models/Users\";\r\nimport { getUsersByRole } from \"../../services/usersServices\";\r\nimport { GetRole } from \"../../models/role\";\r\nimport { BrowserRouter as Link } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport Moment from \"moment\";\r\nimport moment from \"moment\";\r\n\r\ntype Params = { id: string };\r\n\r\ntype Field = {\r\n    value?: any,\r\n    error?: string,\r\n    isValid?: boolean\r\n}\r\n\r\ntype Form = {\r\n    numberSite: Field,\r\n    dateStart: Field,\r\n    dateEnd: Field\r\n}\r\n\r\nconst SiteEdit: FunctionComponent<RouteComponentProps<Params>> = ({ match }) => {\r\n    const history = useHistory();\r\n    let siteId: number;\r\n    const [siteAddress, setSiteAddress] = useState<SitesData>(new SitesData());\r\n    const [siteCustomer, setSiteCustomer] = useState<SitesData>(new SitesData());\r\n    const [siteManager, setSiteManager] = useState<SitesData>(new SitesData());\r\n    const [site, setSite] = useState<Sites>();\r\n    useEffect(() => {\r\n        // @ts-ignore\r\n        SitesService.getSite(+match.params.id).then((resp) => {\r\n            let newSite = new Sites(resp.site);\r\n            if (newSite.data !== null && newSite.data !== undefined) {\r\n                let newUsers = resp.users;\r\n                if (newUsers.length !== 0) {\r\n                    for (const user of newUsers) {\r\n                    }\r\n                }\r\n                for (const data of newSite.data) {\r\n                    switch (data.siteData_key) {\r\n                        case 'address':\r\n                            setSiteAddress(new SitesData(data));\r\n                            break;\r\n                        case 'customer':\r\n                            setSiteCustomer(new SitesData(data));\r\n                            break;\r\n                        case 'manager':\r\n                            setSiteManager(new SitesData(data));\r\n                            break;\r\n                    }\r\n                }\r\n            }\r\n            setSite(newSite);\r\n\r\n        })\r\n    }, [match.params.id]);\r\n\r\n\r\n\r\n\r\n    const [customer, setCustomer] = useState<Users[]>([]);\r\n    useEffect(() => {\r\n        getUsersByRole(GetRole.CUSTOMER).then(customer => setCustomer(customer));\r\n    }, []);\r\n\r\n    const [manager, setManager] = useState<Users[]>([]);\r\n    useEffect(() => {\r\n        getUsersByRole(GetRole.MANAGER).then(manager => setManager(manager));\r\n    }, []);\r\n\r\n    const [form, setForm] = useState<Form>({\r\n        numberSite: { value: 0 },\r\n        dateStart: { value: '' },\r\n        dateEnd: { value: '' }\r\n    });\r\n\r\n    if (site !== undefined) {\r\n\r\n        const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n            const fieldName: string = e.target.name;\r\n            const fieldValue: string = e.target.value;\r\n            if (fieldName === 'numberSite') {\r\n                site.site_number_site = parseInt(fieldValue);\r\n            }\r\n            if (fieldName === 'dateStart') {\r\n                let date = moment(fieldValue, 'YYYY/MM/DD');\r\n                site.site_date_start = date.unix();\r\n            }\r\n            if (fieldName === 'dateEnd') {\r\n                let date = moment(fieldValue, 'YYYY/MM/DD');\r\n                site.site_date_end = date.unix();\r\n            }\r\n            const newField: Field = { [fieldName]: { value: fieldValue } };\r\n            setForm({ ...form, ...newField });\r\n        }\r\n\r\n        const handleInputAddressChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n            const address: SitesData = new SitesData();\r\n            address.siteData_key = e.target.name;\r\n            address.siteData_column = e.target.value;\r\n            setSiteAddress(address);\r\n        }\r\n\r\n        const handleAddress = (e: React.FocusEvent<HTMLInputElement>) => {\r\n            if (siteAddress && siteAddress.siteData_key === 'address') {\r\n                populateSiteDataArray(siteAddress);\r\n            }\r\n        }\r\n\r\n        const handleSelectChange = (e: React.FocusEvent<HTMLSelectElement>) => {\r\n            const selectedData: SitesData = new SitesData();\r\n            selectedData.siteData_key = e.target.name;\r\n            selectedData.siteData_column = e.target.value;\r\n\r\n            if (site.data && site.data.length !== 0) {\r\n                site.data.map((data) => {\r\n                    if (data.siteData_key === selectedData.siteData_key) {\r\n                        switch (selectedData.siteData_key) {\r\n                            case 'customer':\r\n                                data.siteData_column = selectedData.siteData_column;\r\n                                setSiteCustomer(data);\r\n                                populateSiteDataArray(siteCustomer);\r\n                                break;\r\n                            case 'manager':\r\n                                data.siteData_column = selectedData.siteData_column;\r\n                                setSiteManager(data);\r\n                                populateSiteDataArray(siteManager);\r\n                                break;\r\n                        }\r\n                    } else {\r\n                        switch (selectedData.siteData_key) {\r\n                            case 'customer':\r\n                                setSiteCustomer(selectedData);\r\n                                populateSiteDataArray(selectedData);\r\n                                break;\r\n                            case 'manager':\r\n                                setSiteManager(selectedData);\r\n                                populateSiteDataArray(selectedData);\r\n                                break;\r\n                        }\r\n                    }\r\n                });\r\n            } else {\r\n                switch (selectedData.siteData_key) {\r\n                    case 'customer':\r\n                        siteCustomer.siteData_key = selectedData.siteData_key;\r\n                        siteCustomer.siteData_column = selectedData.siteData_column;\r\n                        setSiteCustomer(selectedData);\r\n                        populateSiteDataArray(selectedData);\r\n                        break;\r\n                    case 'manager':\r\n                        siteManager.siteData_key = selectedData.siteData_key;\r\n                        siteManager.siteData_column = selectedData.siteData_column;\r\n                        setSiteManager(selectedData);\r\n                        populateSiteDataArray(selectedData);\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        const populateSiteDataArray = (data: SitesData) => {\r\n            if (site.data) {\r\n                if (site.data.length !== 0) {\r\n                    const result = site.data.filter(((d) => data.siteData_key === d.siteData_key));\r\n                    if (result.length !== 0) {\r\n                        for (const d of site.data) {\r\n                            if (d.siteData_key === data.siteData_key) {\r\n                                d.siteData_column = data.siteData_column;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        site.data.push(data);\r\n                    }\r\n                } else {\r\n                    site.data.push(data);\r\n                }\r\n            }\r\n        }\r\n\r\n        const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n            e.preventDefault();\r\n            await updateSite(site).then();\r\n        }\r\n\r\n        const updateSite = async (site: Sites) => {\r\n            await SitesService.updateSite(site).then();\r\n\r\n            if ( site.data) {\r\n                for (const data of site.data) {\r\n                    if (data.siteData_id === 0) {\r\n                        data.siteData_siteId = site.site_id;\r\n                        await addSiteData(data);\r\n                    } else {\r\n                        await updateSiteData(data);\r\n                    }\r\n                }\r\n                toast.success('Chantier modifier avec succès👍', {});\r\n            } else {\r\n                toast.warn('Erreur lors de la modification !', {});\r\n            }\r\n            window.setTimeout( () => {\r\n                history.push('/sites');\r\n            }, 3000 );\r\n\r\n        }\r\n\r\n        const updateSiteData = async (siteData: SitesData) => {\r\n            await SitesService.updateData(siteData).then();\r\n        }\r\n        const addSiteData = async (siteData: SitesData) => {\r\n            await SitesService.postSiteData(siteData).then();\r\n        }\r\n        const getDate = (date: number | null) => {\r\n            if (date !== null) {\r\n                let myDate = moment.unix(date);\r\n                return myDate.format('YYYY-MM-DD');\r\n            }\r\n            return;\r\n        }\r\n\r\n        return (\r\n            <div className=\"hero-auto\">\r\n                <ToastContainer\r\n                    position=\"top-center\"\r\n                    autoClose={3000}\r\n                    hideProgressBar={false}\r\n                    newestOnTop={false}\r\n                    closeOnClick\r\n                    rtl={false}\r\n                    pauseOnFocusLoss\r\n                    draggable\r\n                    pauseOnHover\r\n                    toastClassName=\"dark-toast\"\r\n                    theme=\"dark\" />\r\n\r\n                <div className='heroProblemeEnfant'>\r\n                    <div className=\"mt-5 pt-5 container-fluid\">\r\n                        <div className=\"d-flex justify-content-center\">\r\n                            <form className=\"mt-5\" onSubmit={e => handleSubmit(e)}>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col m8\">\r\n                                        <div className=\"card hoverable\" id=\"cardGeneral\">\r\n                                        <h2 className=\"text-center mb-5\"> Modifier un Chantier</h2>\r\n                                            <div className=\"card-stacked\">\r\n                                                <div className=\"card-content p-0\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"dateStart\">Date de début</label>\r\n                                                        <input id=\"dateStart\" value={getDate(site.site_date_start)} name=\"dateStart\"\r\n                                                               className=\"form-control\" type=\"date\" onChange={e => handleInputChange(e)} />\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"dateEnd\">Date de fin</label>\r\n                                                        <input id=\"dateEnd\"\r\n                                                            value={getDate(site.site_date_end)}\r\n                                                            type=\"date\" name=\"dateEnd\" className=\"form-control\"\r\n                                                            onChange={e => handleInputChange(e)} />\r\n                                                    </div>\r\n                                                    {site.data ?\r\n                                                        <div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"address\">Adresse du chantier</label>\r\n                                                                <input id=\"address\" className=\"form-control\" type=\"text\" name=\"address\"\r\n                                                                    value={siteAddress ? siteAddress.siteData_column : ''}\r\n                                                                    onChange={e => handleInputAddressChange(e)}\r\n                                                                    onBlur={e => handleAddress(e)} />\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"customer\">Client</label>\r\n                                                                <select id=\"customer\" name=\"customer\" style={{ display: \"block\" }}\r\n                                                                    onBlur={e => handleSelectChange(e)}>\r\n                                                                    <option disabled={true} selected={true}>Client</option>\r\n                                                                    {customer.map((customer) => (\r\n                                                                        <option key={customer.id} value={customer.id}\r\n                                                                            selected={(siteCustomer && parseInt(siteCustomer.siteData_column) === customer.id)}>\r\n                                                                            {customer.login}\r\n                                                                        </option>\r\n                                                                    ))}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                            <div className=\"form-group\">\r\n                                                                <label htmlFor=\"manager\">Chef de chantier</label>\r\n                                                                <select id=\"manager\" name=\"manager\" style={{ display: 'block' }}\r\n                                                                    onBlur={e => handleSelectChange(e)}>\r\n                                                                    <option disabled={true} selected={true}> Chef de chantier</option>\r\n                                                                    {manager.map((manager) => (\r\n                                                                        <option key={manager.id} value={manager.id}\r\n                                                                            selected={(siteManager && parseInt(siteManager.siteData_column) === manager.id)}>\r\n                                                                            {manager.login}\r\n                                                                        </option>\r\n                                                                    ))}\r\n                                                                </select>\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        :\r\n                                                        <p>No data</p>\r\n                                                    }\r\n                                                </div>\r\n                                                <div className=\"mt-5\">\r\n                                                    <button type=\"submit\" className=\"btn btn-lg btnLogin\">Valider</button>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n\r\n                            <Link className=\"btn-floating btn-large waves-effect waves-light orange lighten-1 z-deepth-3\"\r\n                                style={{ position: 'fixed', top: '95px', left: '50px' }}\r\n                                to=\"/sites\">\r\n                                <i className=\"material-icons\">navigate_before</i>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <h1>Error</h1>\r\n        )\r\n    }\r\n}\r\nexport default SiteEdit;\r\n","import UsersData from \"./UsersData\";\r\nimport {DateDetail} from \"./utils/DateDetail\";\r\n\r\nexport default class Users {\r\n    id: number = 0;\r\n    login: string = '';\r\n    password: string = '';\r\n    role_id: number = 0;\r\n    created_at: DateDetail = new DateDetail();\r\n    updated_at: DateDetail|null = null;\r\n    deleted_at: DateDetail|null = null;\r\n    data?: UsersData[]|null = null;\r\n\r\n    constructor( user?: Users ) {\r\n        if( user !== null && user !== undefined ) {\r\n            this.id = user.id;\r\n            this.login = user.login;\r\n            this.password = user.password;\r\n            this.role_id = user.role_id;\r\n            this.created_at = user.created_at;\r\n            this.updated_at = user.updated_at;\r\n            this.deleted_at = user.deleted_at;\r\n            this.data = user.data;\r\n        }\r\n    }\r\n}\r\n","export default class UsersData {\r\n\r\n    userData_id: number = 0;\r\n    userData_userId: number = 0;\r\n    userData_key: string = '';\r\n    userData_column: string = '';\r\n\r\n    constructor(\r\n        userData?: UsersData\r\n    )\r\n    {\r\n        if (userData !== null && userData !== undefined) {\r\n            this.userData_id = userData.userData_id;\r\n            this.userData_userId = userData.userData_userId;\r\n            this.userData_key = userData.userData_key;\r\n            this.userData_column = userData.userData_column;\r\n        }\r\n    }\r\n\r\n}\r\n","import React, {FunctionComponent, useState} from \"react\";\r\nimport {postUser, postUserData} from \"../../services/usersServices\";\r\nimport Users from \"../../models/Users\";\r\nimport UsersData from \"../../models/UsersData\";\r\nimport {Link} from 'react-router-dom';\r\nimport {toast, ToastContainer} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {JobEmployee, JobEmployeeUtils} from \"../../models/enums/jobEmployee\";\r\nimport {GetRole, Role} from \"../../models/role\";\r\nimport ParametersHelper from \"../../helpers/parameters-helper\";\r\nimport {useHistory} from \"react-router\";\r\n\r\n\r\nconst CreateUser: FunctionComponent = () => {\r\n    const history = useHistory();\r\n    const [lastname, setLastname] = useState(\"\");\r\n\r\n    const [firstname, setFirstname] = useState(\"\");\r\n\r\n    const [login, setLogin] = useState(\"\");\r\n\r\n    const [role, setRole] = useState<GetRole>(GetRole.UNDEFINED);\r\n    const [password, setPassword] = useState(\"\");\r\n    const [errorPassword, setErrorPassword] = useState(false);\r\n\r\n    const [errorLastname, setErrorLastname] = useState(false);\r\n    const [errorFirstname, setErrorFirstname] = useState(false);\r\n    const [errorLogin, setErrorLogin] = useState(false);\r\n    const [userJob, setUserJob] = useState<UsersData>(new UsersData());\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [phoneError, setPhoneError] = useState(false);\r\n    const [userEmail, setUserEmail] = useState<UsersData>(new UsersData());\r\n\r\n    const [userPhoneNumber, setUserPhoneNumber] = useState<UsersData>(new UsersData());\r\n\r\n\r\n    const handleSelectJobChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        let newJob = new UsersData();\r\n        newJob.userData_key = e.target.name;\r\n        newJob.userData_column = e.target.value;\r\n        setUserJob(newJob);\r\n    }\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newData = new UsersData();\r\n        newData.userData_key = e.target.name;\r\n        newData.userData_column = e.target.value;\r\n\r\n        switch (newData.userData_key) {\r\n            case 'email':\r\n                setUserEmail(newData);\r\n                if (!ParametersHelper.isValideEmail(newData.userData_column)) {\r\n                    setEmailError(true);\r\n                } else {\r\n                    setEmailError(false);\r\n                }\r\n                break;\r\n            case 'phoneNumber':\r\n                setUserPhoneNumber(newData);\r\n                if (!ParametersHelper.isValideTel(newData.userData_column)) {\r\n                    setPhoneError(true);\r\n                } else {\r\n                    setPhoneError(false);\r\n                }\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        if (!ParametersHelper.testLogin(login)) {\r\n            setErrorLogin(true);\r\n        } else {\r\n            setErrorLogin(false);\r\n        }\r\n        if (!ParametersHelper.testString(firstname)) {\r\n            setErrorFirstname(true);\r\n        } else {\r\n            setErrorFirstname(false);\r\n        }\r\n        if (!ParametersHelper.testString(lastname)) {\r\n            setErrorLastname(true);\r\n        } else {\r\n            setErrorLastname(false);\r\n        }\r\n        if (!ParametersHelper.testPassword(password)) {\r\n            setErrorPassword(true);\r\n        } else {\r\n            setErrorPassword(false);\r\n        }\r\n        if (role === GetRole.UNDEFINED) {\r\n            userJob.userData_key = 'job';\r\n            userJob.userData_column = JobEmployee.UNDEFINED.toString();\r\n            setUserJob(userJob);\r\n        }\r\n\r\n        if (!ParametersHelper.isValideEmail(userEmail.userData_column)) {\r\n            setEmailError(true);\r\n        } else {\r\n            setEmailError(false);\r\n        }\r\n        if (!ParametersHelper.isValideTel(userPhoneNumber.userData_column)) {\r\n            setPhoneError(true);\r\n        } else {\r\n            setPhoneError(false);\r\n        }\r\n\r\n        if (!(errorFirstname && errorLastname && errorLogin && errorPassword && emailError && phoneError)) {\r\n             await handlePostUser().then();\r\n        } else {\r\n            toast.warn(\"Le formulaire n'est pas valide !👎\", {});\r\n        }\r\n    }\r\n\r\n    const handlePostUser = async () => {\r\n        let userToPost: Users = new Users();\r\n        userToPost.login = login;\r\n        userToPost.role_id = role;\r\n        userToPost.password = password;\r\n\r\n        let userLastName = new UsersData();\r\n        userLastName.userData_key = \"Nom\";\r\n        userLastName.userData_column = lastname;\r\n\r\n        let userFirstname = new UsersData();\r\n        userFirstname.userData_key = \"Prénom\";\r\n        userFirstname.userData_column = firstname;\r\n\r\n        postUser(userToPost).then(async (user) => {\r\n            if (user) {\r\n                userLastName.userData_userId = user.id;\r\n                await postUserData(userLastName).then();\r\n                userFirstname.userData_userId = user.id;\r\n                await postUserData(userFirstname).then();\r\n                userJob.userData_userId = user.id;\r\n                setUserJob(userJob);\r\n                await postUserData(userJob).then();\r\n                userPhoneNumber.userData_userId = user.id;\r\n                setUserPhoneNumber(userPhoneNumber);\r\n                await postUserData(userPhoneNumber);\r\n                userEmail.userData_userId = user.id;\r\n                setUserEmail(userEmail);\r\n                await postUserData(userEmail).then((e) =>\r\n                    toast.success('Client crée avec succès👍', {})\r\n                );\r\n                window.setTimeout(() => {\r\n                    history.push('/profile');\r\n                }, 3000);\r\n            }\r\n        });\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"hero-auto\">\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                toastClassName=\"dark-toast\"\r\n                theme=\"dark\"/>\r\n\r\n            <div id=\"heroProfileEnfant\">\r\n                <div className=\"container mt-5 pt-5 d-flex justify-content-center\">\r\n                    <form className=\"mt-5\" onSubmit={e => handleSubmit(e)}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col m8\">\r\n                                <div className=\"card hoverable\" id=\"cardGeneral\">\r\n                                    <h2 className=\"text-center mb-5\"> Création Utilisateur</h2>\r\n                                    <div className=\"card-stacked\">\r\n                                        <div className=\"card-content\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"lastname\" className=\"text-dark \">Nom </label>\r\n                                                <input id=\"lastname\" type=\"text\" className=\"form-control\"\r\n                                                       name=\"lastname\" value={lastname}\r\n                                                       onChange={(e) => setLastname(e.target.value)}/>\r\n                                                {errorLastname ?\r\n                                                    <div className=\"red accent-1\">\r\n                                                        Nom invalide.\r\n                                                    </div>\r\n                                                    :\r\n                                                    ''\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"firstname\" className=\"text-dark \">Prénom</label>\r\n                                                <input id=\"firstname\" type=\"text\" className=\"form-control\"\r\n                                                       name=\"firstname\" value={firstname}\r\n                                                       onChange={(e) => setFirstname(e.target.value)}/>\r\n                                                {errorFirstname ?\r\n                                                    <div className=\"red accent-1\">\r\n                                                        Prénom invalide.\r\n                                                    </div>\r\n                                                    :\r\n                                                    ''\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"login\" className=\"text-dark \">Login</label>\r\n                                                <input id=\"login\" type=\"text\" className=\"form-control\" name=\"login\"\r\n                                                       value={login} onChange={(e) => setLogin(e.target.value)}/>\r\n                                                {errorLogin ?\r\n                                                    <div className=\"red accent-1\">\r\n                                                        Login invalide.\r\n                                                    </div>\r\n                                                    :\r\n                                                    ''\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"password\" className=\"text-dark\">Mot de passe</label>\r\n                                                <input id=\"password\" type=\"password\" className=\"form-control\" name=\"ref\"\r\n                                                       value={password} onChange={(e) => setPassword(e.target.value)}/>\r\n                                                {errorPassword ?\r\n                                                    <div className=\"red accent-1\">\r\n                                                        Mot de passe invalide.\r\n                                                    </div>\r\n                                                    :\r\n                                                    ''\r\n                                                }\r\n                                            </div>\r\n\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"userRole\" className=\"text-dark \">Rôle</label>\r\n                                                <select id=\"userRole\" name=\"userRole\"\r\n                                                        onChange={(e) => setRole(Number(e.target.value))}>\r\n                                                    <option disabled={true} value=\"0\" selected={true}>Sélectionner le\r\n                                                        rôle\r\n                                                    </option>\r\n                                                    {Role.getRoleArray().map((roleUser) => (\r\n                                                        <option value={roleUser} key={roleUser}>\r\n                                                            {Role.getStringEnum(roleUser)}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"email\" className=\"text-dark\">Email</label>\r\n                                                <input id=\"email\" type=\"text\" className=\"form-control\"\r\n                                                       name=\"email\" value={userEmail.userData_column}\r\n                                                       onChange={(e) => handleInputChange(e)}/>\r\n                                                {emailError ?\r\n                                                    <div className=\"red accent-1\">\r\n                                                        Adresse Email invalide. (example@example.com)\r\n                                                    </div>\r\n                                                    :\r\n                                                    ''\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"phoneNumber\" className=\"text-dark \">N°Téléphone</label>\r\n                                                <input id=\"phoneNumber\" type=\"text\" className=\"form-control\"\r\n                                                       name=\"phoneNumber\" value={userPhoneNumber.userData_column}\r\n                                                       onChange={(e) => handleInputChange(e)}/>\r\n                                                {phoneError ?\r\n                                                    <div className=\"red accent-1\">\r\n                                                        N°Téléphone invalide.\r\n                                                    </div>\r\n                                                    :\r\n                                                    ''\r\n                                                }\r\n                                            </div>\r\n                                            {role === GetRole.EMPLOYEE ?\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"job\" className=\"text-dark \">Emploi</label>\r\n                                                    <select id=\"job\" name=\"job\" className='form-control'\r\n                                                            onChange={(e) => handleSelectJobChange(e)}>\r\n                                                        <option disabled={true} value='0'>Sélectionner un emploi</option>\r\n                                                        {JobEmployeeUtils.getJobArray().map((job) => (\r\n                                                            <option value={job} key={job}>\r\n                                                                {JobEmployeeUtils.getTextJob(job)}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </div>\r\n                                                :\r\n                                                ''\r\n                                            }\r\n                                            <div className=\"card-action center\">\r\n                                                <button type=\"submit\" className=\"btn btn-lg btnLogin\">Valider</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n\r\n            <Link className=\"btn-floating btn-large waves-effect waves-light orange lighten-1 z-deepth-3\"\r\n                  style={{position: 'fixed', top: '95px', left: '50px'}}\r\n                  to=\"/profile\">\r\n                <i className=\"material-icons\">navigate_before</i>\r\n            </Link>\r\n\r\n        </div>\r\n\r\n    );\r\n\r\n}\r\n\r\nexport default CreateUser;","import React, {FunctionComponent, useEffect, useState} from \"react\";\r\nimport Users from \"../../models/Users\";\r\nimport UsersData from \"../../models/UsersData\";\r\nimport {\r\n    getUserById, postUserData,\r\n    updateUser,\r\n    updateUserData\r\n} from \"../../services/usersServices\";\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport {GetRole, Role} from \"../../models/role\";\r\nimport {BrowserRouter, Link} from 'react-router-dom';\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {useHistory} from 'react-router';\r\nimport {JobEmployee, JobEmployeeUtils} from \"../../models/enums/jobEmployee\";\r\nimport ParametersHelper from \"../../helpers/parameters-helper\";\r\n\r\ntype Params = { id: string };\r\n\r\ntype Field = {\r\n    value?: any,\r\n    error?: string,\r\n    isValid?: boolean\r\n}\r\ntype Form = {\r\n    login: Field,\r\n    role: Field\r\n}\r\n\r\nconst UpdateUser: FunctionComponent<RouteComponentProps<Params>> = ({match}) => {\r\n    const history = useHistory();\r\n\r\n    const [lastname, setLastname] = useState<UsersData>(new UsersData());\r\n    const [firstname, setFirstname] = useState<UsersData>(new UsersData());\r\n    const [email, setEmail] = useState<UsersData>(new UsersData());\r\n    const [job, setJob] = useState<UsersData>(new UsersData());\r\n    const [phoneNumber, setPhoneNumber] = useState<UsersData>(new UsersData());\r\n\r\n    const [errorLastname, setErrorLastname] = useState(false);\r\n    const [errorFirstname, setErrorFirstname] = useState(false);\r\n    const [errorLogin, setErrorLogin] = useState(false);\r\n    const [emailError, setEmailError] = useState(false);\r\n    const [phoneError, setPhoneError] = useState(false);\r\n\r\n    const [formValide, setFormValide] = useState(false);\r\n\r\n    const [user, setUser] = useState(new Users());\r\n\r\n    useEffect(() => {\r\n\r\n        const getDataValue = (datas: UsersData[]) => {\r\n            if (datas.length === 5) {\r\n                console.log('merde')\r\n                for (const data of datas) {\r\n                    switch (data.userData_key) {\r\n                        case 'Nom':\r\n                            setLastname(data);\r\n                            break;\r\n                        case 'Prénom':\r\n                            setFirstname(data);\r\n                            break;\r\n                        case 'job':\r\n                            setJob(data);\r\n                            break;\r\n                        case 'phoneNumber':\r\n                            setPhoneNumber(data);\r\n                            break;\r\n                        case 'email':\r\n                            setEmail(data);\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                }\r\n            } else {\r\n                console.log(\"coucou\");\r\n                // lastname.userData_userId = user.id;\r\n                // lastname.userData_key = 'Nom';\r\n                // setLastname(lastname)\r\n                //\r\n                // firstname.userData_userId = user.id;\r\n                // firstname.userData_key = 'Prénom';\r\n                // setFirstname(firstname);\r\n\r\n                email.userData_userId = user.id;\r\n                email.userData_key = 'email';\r\n                setEmail(email);\r\n\r\n                job.userData_userId = user.id;\r\n                job.userData_key = 'job';\r\n                setJob(job);\r\n\r\n                phoneNumber.userData_userId = user.id;\r\n                phoneNumber.userData_key = 'phoneNumber';\r\n                setPhoneNumber(phoneNumber);\r\n\r\n                // datas.push(lastname);\r\n                // datas.push(firstname);\r\n                datas.push(email);\r\n                datas.push(job);\r\n                datas.push(phoneNumber);\r\n                console.log(datas);\r\n            }\r\n        }\r\n\r\n        getUserById(+match.params.id).then((user) => {\r\n            setUser(user);\r\n            if (user.data) {\r\n                getDataValue(user.data);\r\n            }\r\n        });\r\n    }, [match.params.id]);\r\n\r\n    const [form, setForm] = useState<Form>({\r\n        login: {value: ''},\r\n        role: {value: 0}\r\n    });\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        const fieldName: string = e.target.name;\r\n        const fieldValue: string = e.target.value;\r\n\r\n        if (fieldName === 'login') {\r\n            user.login = fieldValue;\r\n        }\r\n        const newField: Field = {[fieldName]: {value: fieldValue}};\r\n        setForm({...form, ...newField});\r\n    }\r\n\r\n    const handleInputDataChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newData = new UsersData();\r\n        newData.userData_key = e.target.name;\r\n        newData.userData_column = e.target.value;\r\n        switch (newData.userData_key) {\r\n            case 'Nom':\r\n                setLastname(newData);\r\n                user.data!.map((data) => data.userData_key === 'Nom' ? data.userData_column = newData.userData_column : '');\r\n                break;\r\n            case 'Prénom':\r\n                setFirstname(newData);\r\n                user.data!.map((data) => data.userData_key === 'Prénom' ? data.userData_column = newData.userData_column : '');\r\n                break;\r\n            case 'phoneNumber':\r\n                setPhoneNumber(newData);\r\n                user.data!.map((data) => data.userData_key === 'phoneNumber' ? data.userData_column = newData.userData_column : '');\r\n                break;\r\n            case 'email':\r\n                setEmail(newData);\r\n                user.data!.map((data) => data.userData_key === 'email' ? data.userData_column = newData.userData_column : '');\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        const fieldName = e.target.name;\r\n        const fieldValue = e.target.value;\r\n\r\n        if (fieldName === 'role') {\r\n            user.role_id = +fieldValue;\r\n        }\r\n        const newField: Field = {[fieldName]: {value: fieldValue}};\r\n        setForm({...form, ...newField});\r\n    }\r\n\r\n    const handleSelectJobChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        let newData = new UsersData();\r\n        newData.userData_key = e.target.name;\r\n        newData.userData_column = e.target.value;\r\n        if (newData.userData_key === 'job') {\r\n            setJob(newData);\r\n            user.data!.map((data) => data.userData_key === 'job' ? data.userData_column = newData.userData_column : '');\r\n        }\r\n    }\r\n\r\n    const validateForm = () => {\r\n        let valide = false;\r\n        if (user.data)  {\r\n            for (const data of user.data) {\r\n                switch (data.userData_key) {\r\n                    case 'Nom':\r\n                        if (!ParametersHelper.testString(data.userData_column)) {\r\n                            setErrorLastname(true);\r\n                        } else {\r\n                            setErrorLastname(false);\r\n                        }\r\n                        break;\r\n                    case 'Prénom':\r\n                        if (!ParametersHelper.testString(data.userData_column)) {\r\n                            setErrorFirstname(true);\r\n                        } else {\r\n                            setErrorFirstname(false);\r\n                        }\r\n                        break;\r\n                    case 'email':\r\n                        if (!ParametersHelper.isValideEmail(data.userData_column)) {\r\n                            setEmailError(true);\r\n                        } else {\r\n                            setEmailError(false);\r\n                        }\r\n                        break;\r\n                    case 'phoneNumber':\r\n                        if (!ParametersHelper.isValideTel(data.userData_column)) {\r\n                            setPhoneError(true);\r\n                        } else {\r\n                            setPhoneError(false);\r\n                        }\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n        if (errorLogin){\r\n            valide = errorLogin;\r\n        }\r\n        if (errorFirstname){\r\n            valide = errorFirstname;\r\n        }\r\n        if (errorLastname){\r\n            valide = errorLastname;\r\n        }\r\n        if (emailError) {\r\n            valide = emailError;\r\n        }\r\n        if (phoneError){\r\n            valide = phoneError;\r\n        }\r\n\r\n        return !valide;\r\n    }\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        if (validateForm()) {\r\n            putUser(user).then();\r\n        }\r\n    }\r\n\r\n    const putUser = async (user: Users) => {\r\n        if (validateForm()) {\r\n            await updateUser(user).then();\r\n\r\n            if (user.data) {\r\n                for (let data of user.data) {\r\n                    switch (data.userData_key) {\r\n                        case 'Nom':\r\n                            data.userData_column = lastname.userData_column;\r\n                            break;\r\n                        case 'Prénom':\r\n                            data.userData_column = firstname.userData_column;\r\n                            break;\r\n                        case 'email':\r\n                            data.userData_column = email.userData_column;\r\n                            break;\r\n                        case 'job':\r\n                            data.userData_column = job.userData_column;\r\n                            break;\r\n                        case 'phoneNumber':\r\n                            data.userData_column = phoneNumber.userData_column;\r\n                            break;\r\n                    }\r\n                    if (data.userData_id !== 0) {\r\n                        await updateUserData(data).then();\r\n                    } else {\r\n                        await postUserData(data).then();\r\n                    }\r\n                }\r\n                toast.success('Profil modifier avec succès👍', {});\r\n            }\r\n            window.setTimeout(() => {\r\n                history.push('/profile');\r\n            }, 3000);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"hero-auto\">\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover\r\n                toastClassName=\"dark-toast\"\r\n                theme=\"dark\"/>\r\n            <div id='heroProfileEnfant'>\r\n                <div className=\"container mt-5 pt-5 justify-content-center d-flex align-items-center h-100\">\r\n                    <form className=\"mt-5\" onSubmit={(e) => handleSubmit(e)}>\r\n                        <div className=\"row\">\r\n                            <div className=\"col m8\">\r\n                                <div className=\"card hoverable\" id=\"cardGeneral\">\r\n                                    <h2 className=\"text-center mb-5 mt-2\"> Modifier un utilisateur</h2>\r\n                                    <div className=\"card-stacked\">\r\n                                        <div className=\"card-content p-0\">\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"lastname\" className=\"text-secondary\">Nom </label>\r\n                                                <input id=\"lastname\" type=\"text\" className=\"form-control\" name=\"Nom\"\r\n                                                       value={lastname.userData_column}\r\n                                                       onChange={(e) => handleInputDataChange(e)}/>\r\n                                                {errorLastname ?\r\n                                                    <div className=\"red accent-1\">\r\n                                                        Nom invalide.\r\n                                                    </div>\r\n                                                    :\r\n                                                    ''\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"firstname\" className=\"text-secondary\">Prénom</label>\r\n                                                <input id=\"firstname\" type=\"text\" className=\"form-control\" name=\"Prénom\"\r\n                                                       value={firstname.userData_column}\r\n                                                       onChange={(e) => handleInputDataChange(e)}/>\r\n                                                {errorFirstname ?\r\n                                                    <div className=\"red accent-1\">\r\n                                                        Prénom invalide.\r\n                                                    </div>\r\n                                                    :\r\n                                                    ''\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"login\" className=\"text-secondary\">Login</label>\r\n                                                <input type=\"text\" className=\"form-control\" name=\"login\"\r\n                                                       value={user.login} onChange={(e) => handleInputChange(e)}/>\r\n                                                {errorLogin ?\r\n                                                    <div className=\"red accent-1\">\r\n                                                        Login invalide.\r\n                                                    </div>\r\n                                                    :\r\n                                                    ''\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"email\" className=\"text-dark\">Email</label>\r\n                                                <input id=\"email\" type=\"text\" className=\"form-control\"\r\n                                                       name=\"email\" value={email.userData_column}\r\n                                                       onChange={(e) => handleInputDataChange(e)}/>\r\n                                                {emailError ?\r\n                                                    <div className=\"red accent-1\">\r\n                                                        Adresse Email invalide. (example@example.com)\r\n                                                    </div>\r\n                                                    :\r\n                                                    ''\r\n                                                }\r\n                                            </div>\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"phoneNumber\" className=\"text-dark \">N°Téléphone</label>\r\n                                                <input id=\"phoneNumber\" type=\"text\" className=\"form-control\"\r\n                                                       name=\"phoneNumber\" value={phoneNumber.userData_column}\r\n                                                       onChange={(e) => handleInputDataChange(e)}/>\r\n                                                {phoneError ?\r\n                                                    <div className=\"red accent-1\">\r\n                                                        N°Téléphone invalide.\r\n                                                    </div>\r\n                                                    :\r\n                                                    ''\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group\">\r\n                                                <label htmlFor=\"role\" className=\"text-secondary\">Rôle</label>\r\n                                                <select id=\"role\" value={user.role_id} name=\"role\"\r\n                                                        onChange={(e) => handleSelectChange(e)}>\r\n                                                    {Role.getRoleArray().map((role) => (\r\n                                                        <option key={role} value={role}\r\n                                                                selected={user.role_id === role}>\r\n                                                            {Role.getStringEnum(role)}\r\n                                                        </option>\r\n                                                    ))}\r\n                                                </select>\r\n                                            </div>\r\n\r\n                                            {user.role_id === GetRole.EMPLOYEE ?\r\n                                                <div className=\"form-group\">\r\n                                                    <label htmlFor=\"job\" className=\"text-dark \">Emploi</label>\r\n                                                    <select id=\"job\" name=\"job\" className='form-control' value={job.userData_column}\r\n                                                            onChange={(e) => handleSelectJobChange(e)}>\r\n                                                        <option value='0'>Sélectionner un emploi</option>\r\n                                                        {JobEmployeeUtils.getJobArray().map((jobEmp) => (\r\n                                                            <option value={jobEmp} key={jobEmp} selected={jobEmp === Number(job.userData_column)}>\r\n                                                                {JobEmployeeUtils.getTextJob(jobEmp)}\r\n                                                            </option>\r\n                                                        ))}\r\n                                                    </select>\r\n                                                </div>\r\n                                                :\r\n                                                ''\r\n                                            }\r\n\r\n                                            <div className=\"card-action center\">\r\n                                                <button type=\"submit\" className=\"btn btn-lg btnLogin\">Valider</button>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    <Link className=\"btn-floating btn-large waves-effect waves-light orange lighten-1 z-deepth-3\"\r\n                          style={{position: 'fixed', top: '95px', left: '50px'}}\r\n                          to=\"/profile\">\r\n                        <i className=\"material-icons\">navigate_before</i>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default UpdateUser;\r\n","import React, {FunctionComponent, useEffect, useState} from \"react\";\r\nimport Materials from \"../../models/Materials\";\r\nimport MaterialData from \"../../models/MaterialData\";\r\nimport {Button} from 'react-bootstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport '../../components/CreateMaterial.css';\r\nimport {\r\n    getMaterialById,\r\n    updateOneMaterial,\r\n    updateOneMaterialData,\r\n    postDataMaterial\r\n} from \"../../services/Materials-services\";\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\nimport {ToastContainer, toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport {useHistory} from 'react-router';\r\nimport {MaterialCategoryUtils} from \"../../models/enums/materialCategory\";\r\n\r\n\r\ntype Params = { id: string };\r\n\r\ntype Field = {\r\n    value?: any,\r\n    error?: string,\r\n    isValid?: boolean\r\n}\r\ntype Form = {\r\n    ref: Field\r\n}\r\n\r\nconst UpdateMaterial: FunctionComponent<RouteComponentProps<Params>> = ({match}) => {\r\n\r\n    const history = useHistory();\r\n\r\n    const [material, setMaterial] = useState<Materials>(new Materials());\r\n    const [dataName, setDataName] = useState<MaterialData>(new MaterialData());\r\n    const [dataNumber, setDataNumber] = useState<MaterialData>(new MaterialData());\r\n    const [dataCategory, setDataCategory] = useState<MaterialData>(new MaterialData());\r\n\r\n    const [form, setForm] = useState<Form>({\r\n        ref: {value: ''}\r\n    });\r\n\r\n    useEffect(() => {\r\n        const getDataValue = (datas: MaterialData[]) => {\r\n            if (datas.length !== 0) {\r\n                for (const data of datas) {\r\n                    if (data.data_key === 'name') {\r\n                        setDataName(data);\r\n                    }\r\n                    if (data.data_key === 'number') {\r\n                        setDataNumber(data);\r\n                    }\r\n                    if (data.data_key === 'categorie') {\r\n                        setDataCategory(data);\r\n                    }\r\n                }\r\n            } else {\r\n                dataName.materialData_materialId = material.material_id;\r\n                setDataName(dataName);\r\n                dataNumber.materialData_materialId = material.material_id;\r\n                setDataNumber(dataNumber);\r\n                dataCategory.materialData_materialId = material.material_id;\r\n                setDataCategory(dataCategory);\r\n                datas.push(dataName);\r\n                datas.push(dataNumber);\r\n                datas.push(dataCategory);\r\n            }\r\n        }\r\n\r\n        getMaterialById(+match.params.id).then((mat) => {\r\n                setMaterial(mat);\r\n                if (mat.data) {\r\n                    getDataValue(mat.data);\r\n                }\r\n            }\r\n        );\r\n    }, [match.params.id]);\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        const fieldName = e.target.name;\r\n        const fieldValue = e.target.value;\r\n\r\n        if (fieldName === 'ref') {\r\n            material.material_ref = fieldValue;\r\n        }\r\n        const newField: Field = {[fieldName]: {value: fieldValue}};\r\n        setForm({...form, ...newField});\r\n    }\r\n\r\n    const handleInputDataChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        let newData = new MaterialData();\r\n        newData.data_key = e.target.name;\r\n        newData.data_column = e.target.value;\r\n\r\n        switch (newData.data_key) {\r\n            case 'name':\r\n                setDataName(newData);\r\n                break;\r\n            case 'number':\r\n                setDataNumber(newData);\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n        let newData = new MaterialData();\r\n        newData.data_key = e.target.name;\r\n        newData.data_column = e.target.value;\r\n\r\n        if (newData.data_key === 'categorie') {\r\n            setDataCategory(newData);\r\n        }\r\n    }\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n\r\n        await updateOneMaterial(material).then((resp) => {\r\n            if (resp.material_id !== 0) {\r\n                if (material.data) {\r\n                    for (let data of material.data) {\r\n                        switch (data.data_key) {\r\n                            case 'name':\r\n                                data.data_column = dataName.data_column;\r\n                                break;\r\n                            case 'number':\r\n                                data.data_column = dataNumber.data_column;\r\n                                break;\r\n                            case 'categorie':\r\n                                data.data_column = dataCategory.data_column;\r\n                                break;\r\n                        }\r\n                        if (data.materialData_id !== 0) {\r\n                            updateOneMaterialData(data).then();\r\n                        }else {\r\n                            postDataMaterial(data).then();\r\n                        }\r\n                    }\r\n                }\r\n                toast.success('Matériel mis à jour avec succès👍', {});\r\n                setTimeout(function() {\r\n                    history.push(`/material`);\r\n                }, 5000);\r\n            }\r\n            if (resp.error) {\r\n                toast.warning('Echec modification', {});\r\n            }\r\n        } );\r\n    }\r\n\r\n    return (\r\n\r\n        <>\r\n            <ToastContainer\r\n                position=\"top-center\"\r\n                autoClose={5000}\r\n                hideProgressBar={false}\r\n                newestOnTop={false}\r\n                closeOnClick\r\n                rtl={false}\r\n                pauseOnFocusLoss\r\n                draggable\r\n                pauseOnHover/>\r\n            <div className=\"heroMaterial\">\r\n                <div id=\"materialFristDiv\">\r\n                    <div className=\"container mt-5 p-2\">\r\n                        <div className=\"mt-5 pt-5 mb-3 justify-content-center d-flex\">\r\n                            <div className=\"from\" style={{background: 'white'}}>\r\n                                <form onSubmit={e => handleSubmit(e)}>\r\n                                    <h2 className=\"mb-5\">Modifier le matériel</h2>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"name\">Nom du Material</label>\r\n                                        <input id=\"name\" className=\"form-control\" name=\"name\"\r\n                                               value={dataName.data_column} onChange={(e) => handleInputDataChange(e)}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"ref\">Référence du Material</label>\r\n                                        <input id=\"ref\" className=\"form-control\" name=\"ref\"\r\n                                               value={material.material_ref} onChange={(e) => handleInputChange(e)}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"number\">Nombre du matériel</label>\r\n                                        <input type=\"number\" id=\"number\" className=\"form-control\" name=\"number\"\r\n                                               value={dataNumber.data_column}\r\n                                               onChange={(e) => handleInputDataChange(e)}/>\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"categorie\">Catégorie</label>\r\n                                        <select className=\"form-control\" id=\"categorie\" name=\"categorie\"\r\n                                                value={dataCategory.data_column}\r\n                                                onChange={(e) => handleSelectChange(e)}>\r\n                                            <option value=\"0\">Veuillez choisir une Catégorie</option>\r\n                                            {MaterialCategoryUtils.getCategoriesArray().map((category) => (\r\n                                                <option value={category} key={category}\r\n                                                        selected={Number(dataCategory.data_column) === category}>\r\n                                                    {MaterialCategoryUtils.getTextCategory(category)}\r\n                                                </option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n\r\n                                    <Button variant=\"\" type=\"submit\" className=\"mt-3 btn btn-lg btnLogin\">\r\n                                        Modifier\r\n                                    </Button>\r\n                                </form>\r\n                                <Link\r\n                                    className=\"btn-floating btn-large waves-effect waves-light orange lighten-1 z-deepth-3\"\r\n                                    style={{position: 'fixed', top: '95px', left: '50px'}}\r\n                                    to=\"/material\">\r\n                                    <i className=\"material-icons\">navigate_before</i>\r\n                                </Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\nexport default UpdateMaterial;\r\n\r\n","\r\nimport React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { addTask, addTaskData } from \"../../services/tasksServices\";\r\nimport SitesService from \"../../services/sites-service\";\r\nimport { getFullUsers } from \"../../services/usersServices\"\r\nimport { BrowserRouter as  Link } from 'react-router-dom';\r\n\r\ntype Form = {\r\n    taskTitle: Field,\r\n    dateStart: Field,\r\n    heureStart: Field,\r\n    heureEnd: Field,\r\n    dateEnd: Field,\r\n    details: Field,\r\n    site: Field,\r\n    client: Field\r\n}\r\n\r\nconst TaskForm: FunctionComponent = () => {\r\n    \r\n    const history = useHistory();\r\n    const [errorDate, setErrorDate] = useState(\"\")\r\n    const [errorHeure, setErrorHeure] = useState(\"\")\r\n    const [errorTitle, setErrorTitle] = useState(\"\")\r\n    \r\n    const [sites, setSites] = useState([])\r\n    const [clients, setClients] = useState([])\r\n    const [name, setName] = useState(\"\")\r\n    var test;\r\n    const [form, setForm] = useState<Form>({\r\n        taskTitle: { value: null },\r\n        dateStart: { value: null },\r\n        dateEnd: { value: null },\r\n        heureStart: { value: null },\r\n        heureEnd: { value: null },\r\n        details: { value: null },\r\n        site: { value: null },\r\n        client: { value: null }\r\n    });\r\n\r\n    useEffect(() => {\r\n        async function site() {\r\n            await SitesService.getAllSites().then((site) => {\r\n                setSites(site)\r\n            })\r\n        }\r\n        async function user(){\r\n            await getFullUsers().then((user)=>{\r\n\r\n                setClients(user)\r\n\r\n            })\r\n        }\r\n        site();\r\n        user();\r\n    }, []);\r\n\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n        \r\n        \r\n        \r\n        const fieldName: string = e.target.name;\r\n        let fieldValue: string = e.target.value;\r\n        const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n        setForm({ ...form, ...newField });\r\n    }\r\n\r\n    const handleSelectedChange = (e: React.FocusEvent<HTMLSelectElement>) => {\r\n\r\n        const fieldName: string = e.target.name;\r\n        let fieldValue: string = e.target.value;\r\n        const newField: Field = { [fieldName]: { value: fieldValue } };\r\n        if (fieldName === \"client\") {\r\n            setName(e.target.selectedOptions[0].text)\r\n        }\r\n\r\n        setForm({ ...form, ...newField });\r\n    }\r\n\r\n    const handleSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\r\n\r\n        setErrorHeure(\"\")\r\n        setErrorDate(\"\")\r\n        setErrorTitle(\"\")\r\n        e.preventDefault();\r\n        var now = new Date();\r\n        var year = now.getFullYear();\r\n        var month = now.getMonth();\r\n        var day = now.getDate()\r\n        var heure = now.getHours();\r\n        var minute = now.getMinutes();\r\n        var date = year + \"-\" + (month + 1) + \"-\" + day + \" \" + heure + \":\" + minute + \":00\"\r\n        let heureStart = form.heureStart.value + \":00\"\r\n        let heureEnd = form.heureEnd.value + \":00\"\r\n        var DateStart = form.dateStart.value + \" \" + heureStart\r\n        var DateEnd = form.dateEnd.value + \" \" + heureEnd\r\n        let arrTask = { \"task_title\": form.taskTitle.value, \"task_dateStart\": DateStart, \"task_dateEnd\": DateEnd, \"user_id\": localStorage.getItem(\"user_id\"), \"created_at\": date, \"updated_at\": date }\r\n\r\n        if (form.taskTitle.value != null && form.heureStart.value != null && form.heureEnd.value != null && form.dateStart.value != null && form.dateEnd.value != null) {\r\n            setErrorHeure(\"\")\r\n            if (DateStart <= DateEnd) {\r\n                setErrorDate(\"\")\r\n                var arrDataTask\r\n                var returnAdd = await addTask(arrTask)\r\n                if (form.details.value !== null) {\r\n                    arrDataTask = { \"taskData_taskId\": returnAdd, \"taskData_key\": \"Description\", \"taskData_column\": form.details.value }\r\n                    addTaskData(arrDataTask)\r\n                }\r\n                if (form.site.value !== null) {\r\n\r\n                     arrDataTask = { \"taskData_taskId\": returnAdd, \"taskData_key\": \"site_id\", \"taskData_column\": form.site.value }\r\n                    addTaskData(arrDataTask)\r\n                }\r\n                if (form.client.value !== null) {\r\n\r\n                     arrDataTask = { \"taskData_taskId\": returnAdd, \"taskData_key\": \"user_id\", \"taskData_column\": form.client.value }\r\n                    addTaskData(arrDataTask)\r\n                    arrDataTask = { \"taskData_taskId\": returnAdd, \"taskData_key\": \"nameUser\", \"taskData_column\": name }\r\n                    addTaskData(arrDataTask)\r\n                }\r\n                history.push('/planning')\r\n            } else {\r\n                setErrorDate(\"Date non valide\")\r\n            }\r\n        } else {\r\n\r\n            if (form.dateStart.value === null || form.dateEnd.value === null) {\r\n                setErrorDate(\"Date non valide\")\r\n            }\r\n            if (form.heureEnd.value === null || form.heureStart.value === null) {\r\n                setErrorHeure(\"Heure non valide\")\r\n            }\r\n            if (form.taskTitle.value === null) {\r\n                setErrorTitle(\"Titre manquant\")\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    return (\r\n        <>\r\n        <div className=\"hero-auto\">\r\n            <div className='heroProblemeEnfant'>\r\n                <div className=\"\">\r\n                    <div className=\"container\">\r\n                        <div className=\"mt-5\">\r\n                            <form className=\"mt-5 pt-5\" onSubmit={e => handleSubmit(e)}>\r\n                                <h2 className=\"text-center text-light mb-4 mt-5\"> Ajouter une tache</h2>\r\n                                <div className=\"row\">\r\n                                    <div className=\"col m8\">\r\n                                        <div className=\"card hoverable\" id=\"cardGeneral\">\r\n                                            <div className=\"card-stacked\">\r\n                                                <div className=\"card-content p-0\">\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"taskTitle\">Titre de la tache</label>\r\n                                                        <input id=\"taskTitle\" className=\"form-control\" name=\"taskTitle\" type=\"text\" onChange={e => handleInputChange(e)} />\r\n                                                        <div className=\"red accent-1\">\r\n                                                            {errorTitle}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"dateStart\">Date de début de la tache</label>\r\n                                                        <input id=\"dateStart\" className=\"form-control\" name=\"dateStart\" type=\"date\" onChange={e => handleInputChange(e)} />\r\n                                                        <div className=\"red accent-1\">\r\n                                                            {errorDate}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"heureStart\">Heure de début de la tache</label>\r\n                                                        <input id=\"heureStart\" className=\"form-control\" placeholder=\"10:00\" name=\"heureStart\" min=\"00:00\" max=\"23:59\" onClick={e => e.target.value = \"\"} type=\"time\" onChange={e => handleInputChange(e)} />\r\n                                                        <div className=\"red accent-1\">\r\n                                                            {errorHeure}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"dateEnd\">Date de fin de la tache</label>\r\n                                                        <input id=\"dateEnd\" className=\"form-control\" name=\"dateEnd\" type=\"date\" onChange={e => handleInputChange(e)} />\r\n                                                        <div className=\"red accent-1\">\r\n                                                            {errorDate}\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"heureEnd\">Heure de fin de la tache</label>\r\n                                                        <input id=\"heureEnd\" className=\"form-control\" placeholder=\"10:00\" name=\"heureEnd\" type=\"time\" min=\"00:00\" max=\"23:59\" onClick={e => e.target.value = \"\"} onChange={e => handleInputChange(e)} />\r\n                                                        <div className=\"red accent-1\">\r\n                                                            {errorHeure}\r\n                                                        </div>\r\n                                                    </div>\r\n\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"details\">detail de la tache (facultatif)</label>\r\n                                                        <input id=\"details\" className=\"form-control\" name=\"details\" type=\"text\" onChange={e => handleInputChange(e)} />\r\n                                                    </div>\r\n\r\n\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"site\">Site (facultatif)</label>\r\n                                                        <select id=\"site\" name=\"site\" style={{ display: 'block' }}\r\n                                                            onBlur={e => { handleSelectedChange(e) }}>\r\n                                                            <option selected={true}>Site </option>\r\n                                                            {sites.map((site) => (\r\n                                                                <option key={site.site_id} value={site.site_id}>{\"Site \" + site.site_number_site}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"form-group\">\r\n                                                        <label htmlFor=\"client\">User (facultatif)</label>\r\n                                                        <select id=\"client\" name=\"client\" style={{ display: 'block' }}\r\n                                                            onBlur={e => { handleSelectedChange(e) }}>\r\n                                                            <option selected={true}>User</option>\r\n                                                            {clients.map((client) => (\r\n\r\n                                                                <option key={client.id} value={client.id}>{client.data.map((data) => {\r\n\r\n                                                                    if (data.userData_userId === client.id) {\r\n                                                                        if (data.userData_key === \"Nom\") {\r\n                                                                            test = data.userData_column;\r\n                                                                        }\r\n                                                                        if (data.userData_key === \"Prénom\") {\r\n                                                                            test = test + \" \" + data.userData_column;\r\n                                                                        }\r\n                                                                    }\r\n                                                                    return 0\r\n                                                                })}\r\n                                                                    {test}</option>\r\n                                                            ))}\r\n                                                        </select>\r\n                                                    </div>\r\n                                                    <div className=\"mt-4\">\r\n                                                        <button type=\"submit\" className=\"btn btn-lg btnLogin\">Valider</button>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    <Link className=\"btn-floating btn-large waves-effect waves-light orange lighten-1 z-deepth-3\"\r\n                                        style={{ position: 'fixed', top: '95px', left: '50px' }}\r\n                                        to=\"/planning\">\r\n                                        <i className=\"material-icons\">navigate_before</i>\r\n                                    </Link>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TaskForm;\r\n","import React, { FunctionComponent, useEffect, useState } from \"react\";\r\nimport {  useHistory } from \"react-router-dom\";\r\nimport Task from \"../../models/tasks\";\r\nimport {  addTaskData,   modifyTask,  supprTaskData } from \"../../services/tasksServices\";\r\n\r\n\r\n\r\n\r\n\r\ntype Props = {\r\n    task: Task,\r\n    taskData: [],\r\n    users: [],\r\n    sites: []\r\n}\r\nconst FormModifyTask: FunctionComponent<Props> = ({ task, taskData, users, sites }) => {\r\n    \r\n    const history = useHistory();\r\n    const [taskModify, setTaskModify] = useState(\"\")\r\n    const [dateStartModify, setDateStartModify] = useState(\"\")\r\n    const [heureStartModify, setHeureStartModify] = useState(\"\")\r\n    const [dateEndModify, setDateEndModify] = useState(\"\")\r\n    const [heureEndModify, setHeureEndModify] = useState(\"\")\r\n    const [userId, setUserId] = useState(\"\")\r\n    const [detail, setDetail] = useState(\"\")\r\n    const [siteId, setSiteId] = useState(\"\")\r\n    const [name, setName] = useState(\"\")\r\n    const [errorDate, setErrorDate] = useState(\"\")\r\n    const [errorHeureStart, setErrorHeureStart] = useState(\"\")\r\n    const [errorHeureEnd, setErrorHeureEnd] = useState(\"\")\r\n    const [errorTitle, setErrorTitle] = useState(\"\")\r\n    const [form, setForm] = useState<Form>({\r\n        taskTitle: { value: null },\r\n        dateStart: { value: null },\r\n        dateEnd: { value: null },\r\n        heureStart: { value: null },\r\n        heureEnd: { value: null },\r\n        details: { value: null }\r\n    });\r\n    var test;\r\n\r\n    useEffect(() => {\r\n\r\n        taskData.map((data) => {\r\n            if (data.taskData_key === \"user_id\") {\r\n                setUserId(data.taskData_column)\r\n            }\r\n            else if (data.taskData_key === \"site_id\") {\r\n                setSiteId(data.taskData_column)\r\n            }\r\n            else if (data.taskData_key === \"Description\") {\r\n                setDetail(data.taskData_column)\r\n            } else if (data.taskData_key === \"nameUser\") {\r\n                setName(data.taskData_column)\r\n            }\r\n            return 0 ;\r\n        })\r\n        if (task) {\r\n            var concaStart = task.task_dateStart.split(\" \")\r\n            setDateStartModify(concaStart[0])\r\n            setHeureStartModify(concaStart[1])\r\n\r\n            var concaEnd = task.task_dateEnd.split(\" \")\r\n            setDateEndModify(concaEnd[0])\r\n            setHeureEndModify(concaEnd[1])\r\n            setTaskModify(task)\r\n        }\r\n    }, [task, taskData]);\r\n\r\n\r\n\r\n    const handleSelectedChange = (e: React.FocusEvent<HTMLSelectElement>) => {\r\n        if (e.target.name === \"site\") {\r\n            setSiteId(e.target.value)\r\n        } else if (e.target.name === \"users\") {\r\n            setUserId(e.target.value)\r\n            setName(e.target.selectedOptions[0].text)\r\n        }\r\n\r\n\r\n        const fieldName: string = e.target.name;\r\n        let fieldValue: string = e.target.value;\r\n        const newField: Field = { [fieldName]: { value: fieldValue } };\r\n\r\n        if (fieldName === \"users\") {\r\n\r\n        }\r\n\r\n        setForm({ ...form, ...newField });\r\n    }\r\n    const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n\r\n        if (e.target.name === \"dateStart\") {\r\n            setDateStartModify(e.target.value)\r\n        } else if (e.target.name === \"dateEnd\") {\r\n            setDateEndModify(e.target.value)\r\n        } else if (e.target.name === \"heureStart\") {\r\n            setHeureStartModify(e.target.value)\r\n\r\n        } else if (e.target.name === \"heureEnd\") {\r\n            setHeureEndModify(e.target.value)\r\n        } else if (e.target.name === \"details\") {\r\n            setDetail(e.target.value)\r\n        }\r\n        else if (e.target.name === \"taskTitle\") {\r\n            taskModify.task_title = e.target.value\r\n        }\r\n        const fieldName: string = e.target.name;\r\n        let fieldValue: string = e.target.value;\r\n\r\n        const newField: Field = { [fieldName]: { value: fieldValue } };\r\n        setForm({ ...form, ...newField });\r\n    }\r\n    const handleSubmitModify = async (e: React.FormEvent<HTMLFormElement>) => {\r\n        e.preventDefault();\r\n        var now = new Date();\r\n        var year = now.getFullYear();\r\n        var month = now.getMonth();\r\n        var day = now.getDate()\r\n        var heure = now.getHours();\r\n        var minute = now.getMinutes();\r\n        var date = year + \"-\" + (month + 1) + \"-\" + day + \" \" + heure + \":\" + minute + \":00\"\r\n        let heureStart = heureStartModify\r\n        let heureEnd = heureEndModify\r\n        var DateStart = dateStartModify + \" \" + heureStart\r\n        var DateEnd = dateEndModify + \" \" + heureEnd\r\n\r\n        if (taskModify.task_title !== \"\" && heureStartModify !== \"\" && heureEndModify !== \"\" && dateStartModify !== \"\" && dateEndModify !== \"\") {\r\n\r\n            setErrorHeureStart(\"\")\r\n            setErrorHeureEnd(\"\")\r\n            setErrorDate(\"\")\r\n            setErrorTitle(\"\")\r\n\r\n            if (DateStart <= DateEnd) {\r\n                var arrTask = { \"task_id\": taskModify.task_id, \"task_title\": taskModify.task_title, \"task_dateStart\": DateStart, \"task_dateEnd\": DateEnd, \"updated_at\": date }\r\n                modifyTask(arrTask)\r\n                taskData.map((data) => {\r\n                    console.log(data)\r\n                    supprTaskData(data.taskData_id)\r\n                    return 0;\r\n                })\r\n                if (siteId !== \"Site\") {\r\n                    var arrDataSite = { \"taskData_taskId\": taskModify.task_id, \"taskData_key\": \"site_id\", \"taskData_column\": siteId }\r\n                    addTaskData(arrDataSite)\r\n                }\r\n                if (userId !== \"User\") {\r\n                    var arrDataUser = { \"taskData_taskId\": taskModify.task_id, \"taskData_key\": \"user_id\", \"taskData_column\": userId }\r\n                    var arrName = { \"taskData_taskId\": taskModify.task_id, \"taskData_key\": \"nameUser\", \"taskData_column\": name }\r\n                    addTaskData(arrDataUser)\r\n                    addTaskData(arrName)\r\n                }\r\n                if (detail !== \"\") {\r\n                    var arrDataDetail = { \"taskData_taskId\": taskModify.task_id, \"taskData_key\": \"Description\", \"taskData_column\": detail }\r\n                    addTaskData(arrDataDetail)\r\n                }\r\n                history.push('/planning')\r\n            }\r\n        } else {\r\n\r\n            if (dateStartModify === \"\" || dateEndModify === \"\") {\r\n                setErrorDate(\"Date non valide\")\r\n            }\r\n            if (heureStartModify === \"\") {\r\n                setErrorHeureStart(\"Heure non valide\")\r\n            }\r\n            if (heureEndModify === \"\") {\r\n                setErrorHeureEnd(\"Heure non valide\")\r\n            }\r\n            if (taskModify.task_title === \"\") {\r\n                setErrorTitle(\"Titre manquant\")\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div className=\"hero-site\">\r\n\r\n                <form className=\"mt-5 d-flex justify-content-center\" onSubmit={e => handleSubmitModify(e)}>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-12 m8\">\r\n                            <div className=\"card hoverable\" id=\"cardGeneral\">\r\n                                <h2 className=\"text-center\">Modifier la tache {taskModify ? taskModify.task_title : \"\"}</h2>\r\n                                <div className=\"row\">\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"taskTitle\">Titre de la tache</label>\r\n                                        <input id=\"taskTitle\" className=\"form-control\" value={taskModify ? taskModify.task_title : \"\"} name=\"taskTitle\" type=\"text\" onChange={e => handleInputChange(e)} />\r\n                                    </div>\r\n                                    <div className=\"red accent-1\">\r\n                                        {errorTitle}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"dateStart\">Date de début de la tache</label>\r\n                                        <input id=\"dateStart\" className=\"form-control\" name=\"dateStart\" value={dateStartModify ? dateStartModify : \"\"} type=\"date\" onChange={e => handleInputChange(e)} />\r\n                                    </div>\r\n                                    <div className=\"red accent-1\">\r\n                                        {errorDate}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"heureStart\">Heure de début de la tache</label>\r\n                                        <input id=\"heureStart\" className=\"form-control\" placeholder=\"10:00\" value={heureStartModify ? heureStartModify : \"\"} name=\"heureStart\" min=\"00:00\" max=\"23:59\" onClick={e => { e.target.value = \"\"; setHeureStartModify(\"\") }} type=\"time\" onChange={e => handleInputChange(e)} />\r\n                                    </div>\r\n                                    <div className=\"red accent-1\">\r\n                                        {errorHeureStart}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"dateEnd\">Date de fin de la tache</label>\r\n                                        <input id=\"dateEnd\" className=\"form-control\" name=\"dateEnd\" value={dateEndModify ? dateEndModify : \"\"} type=\"date\" onChange={e => handleInputChange(e)} />\r\n                                    </div>\r\n                                    <div className=\"red accent-1\">\r\n                                        {errorDate}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"heureEnd\">Heure de fin de la tache</label>\r\n                                        <input id=\"heureEnd\" className=\"form-control\" placeholder=\"10:00\" value={heureEndModify ? heureEndModify : \"\"} name=\"heureEnd\" min=\"00:00\" max=\"23:59\" onClick={e => { e.target.value = \"\"; setHeureEndModify(\"\") }} type=\"time\" onChange={e => handleInputChange(e)} />\r\n                                    </div>\r\n                                    <div className=\"red accent-1\">\r\n                                        {errorHeureEnd}\r\n                                    </div>\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"details\">detail de la tache (facultatif)</label>\r\n                                        <input id=\"details\" className=\"form-control\" value={detail ? detail : \"\"} name=\"details\" type=\"text\" onChange={e => handleInputChange(e)} />\r\n                                    </div>\r\n\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"site\">Site (facultatif)</label>\r\n                                        <select id=\"site\" name=\"site\" style={{ display: 'block' }}\r\n                                            onBlur={e => { handleSelectedChange(e) }}>\r\n                                            <option >Site </option>\r\n                                            {sites.map((site) => (\r\n                                                <option selected={siteId === site.site_id ? true : false} key={site.site_id} value={site.site_id}>{\"Site \" + site.site_number_site}</option>\r\n                                            ))}\r\n                                        </select>\r\n                                    </div>\r\n                                    {console.log(users)}\r\n                                    <div className=\"form-group\">\r\n                                        <label htmlFor=\"users\">User (facultatif)</label>\r\n                                        <select id=\"users\" name=\"users\" style={{ display: 'block' }}\r\n                                            onBlur={e => { handleSelectedChange(e) }}>\r\n                                            <option >User</option>\r\n                                            {users.length !== 0 ? users.map((client) => (\r\n\r\n                                                <option selected={userId === client.id ? true : false} key={client.id} value={client.id}>{client.data.map((data) => {\r\n\r\n                                                    if (data.userData_userId === client.id) {\r\n                                                        if (data.userData_key === \"Nom\") {\r\n                                                            test = data.userData_column;\r\n                                                        }\r\n                                                        if (data.userData_key === \"Prénom\") {\r\n                                                            test = test + \" \" + data.userData_column;\r\n                                                        }\r\n                                                    }return 0;\r\n                                                })}\r\n                                                    {test}</option>\r\n                                            )) : null}\r\n                                        </select>\r\n                                    </div>\r\n                                    <div className=\"mt-4\">\r\n                                        <button type=\"submit\" className=\"btn btn-lg btnLogin\">Valider</button>\r\n                                    </div>\r\n\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </form>\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default FormModifyTask;","\r\nimport React, {FunctionComponent, useEffect, useState} from \"react\";\r\nimport {RouteComponentProps} from \"react-router-dom\";\r\n\r\nimport SitesService from \"../../services/sites-service\";\r\nimport {  getTaskById, getTaskDataById } from \"../../services/tasksServices\";\r\nimport {getFullUsers} from \"../../services/usersServices\"\r\n\r\nimport FormModifyTask from \"./ModifyTask\";\r\ntype Params = { id: string };\r\n\r\nconst ContainerModifyTask: FunctionComponent<RouteComponentProps<Params>> = ({match}) => {\r\n    \r\n    const [taskModify, setTaskModify] = useState();\r\n    const [taskModifyData, setTaskModifyData] = useState([])\r\n    const [users, setUsers] = useState([])\r\n    const [sites, setSites] = useState([])\r\n    \r\n    useEffect(() => {\r\n        const getAll = async () => {\r\n            await getTaskById(+match.params.id).then((reponse)=>{\r\n                reponse.map((r)=>setTaskModify(r))\r\n            })\r\n            await getTaskDataById(+match.params.id).then((reponse)=>{\r\n                setTaskModifyData(reponse)\r\n            })\r\n            await getFullUsers().then((reponse)=>{\r\n                setUsers(reponse)\r\n            })\r\n            await SitesService.getAllSites().then((site)=>{\r\n                setSites(site)\r\n            })\r\n        }\r\n        getAll()\r\n    }, [match.params.id]);\r\n\r\n    return(\r\n        <>\r\n        <div className=\"hero-auto\">\r\n           \r\n            <div className=\"container mt-5\">\r\n                <div className=\"mt-5\">\r\n                    <FormModifyTask task={taskModify} taskData={taskModifyData} users={users} sites={sites}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </>\r\n            )\r\n}\r\n\r\nexport default ContainerModifyTask;","import moment from \"moment\";\r\n\r\n\r\nexport const TokenValidity = (): boolean => {\r\n    let validToken = moment().unix() < Number(localStorage.getItem('token_validity'));\r\n    if (!validToken) {\r\n        localStorage.clear();\r\n    }\r\n    return validToken;\r\n}","const fulldata = {\r\n  2022: {\r\n    // Nonbre de chantier à lier avec BDD\r\n    chartChantier: [6, 15, 13, 41, 20, 33, 8, 2, 15, 16, 27, 4],\r\n    // CA ne pas lié prévu pour une v2 mais ça fait jolie ^^\r\n    chartChiffre: [5000, 8000, 20000, 50000, 10000, 7000],\r\n    //à lié avec BDD\r\n    chartJob: [\r\n      //electricity\r\n      4,\r\n      //plomberie\r\n      2,\r\n      //Couverture\r\n      1,\r\n      //Maçonnerie\r\n      5,\r\n      //Menuiserie\r\n      4,\r\n      //Gros oeuvre\r\n      8],\r\n  },\r\n  2021: {\r\n    chartChantier: [4, 12, 11, 51, 10, 53, 2, 1, 11, 10, 7, 5],\r\n    chartChiffre: [2000, 5000, 25000, 20000, 80000, 6000],\r\n    chartJob: [\r\n      //electricity\r\n      10,\r\n      //plomberie\r\n      4,\r\n      //Couverture\r\n      8,\r\n      //Maçonnerie\r\n      4,\r\n      //Menuiserie\r\n      4,\r\n      //Gros oeuvre\r\n      5]\r\n  },\r\n  2020: {\r\n    chartChantier: [4, 12, 11, 51, 10, 53, 2, 1, 11, 10, 7, 5],\r\n    chartChiffre: [2000, 100, 5000, 15000, 80000, 6000],\r\n    chartJob: [\r\n      //electricity\r\n      10,\r\n      //plomberie\r\n      3,\r\n      //Couverture\r\n      8,\r\n      //Maçonnerie\r\n      4,\r\n      //Menuiserie\r\n      4,\r\n      //Gros oeuvre\r\n      5]\r\n\r\n  },\r\n  2019: {\r\n    chartChantier: [4, 16, 11, 51, 1, 5, 2, 1, 11, 10, 7, 5],\r\n    chartChiffre: [2000, 1000, 5000, 10000, 80000, 6000],\r\n    chartJob: [\r\n      //electricity\r\n      1,\r\n      //plomberie\r\n      4,\r\n      //Couverture\r\n      10,\r\n      //Maçonnerie\r\n      4,\r\n      //Menuiserie\r\n      4,\r\n      //Gros oeuvre\r\n      5]\r\n  },\r\n};\r\n\r\nexport default fulldata;\r\n","import \"./DashboardEmployees.css\";\r\nimport React, { useRef, useState } from \"react\";\r\nimport fulldata from \"../../context/fulldata\";\r\nimport { Bar, Line, Pie } from 'react-chartjs-2';\r\n\r\nimport { Chart as ChartJS,\r\n  CategoryScale, LinearScale,\r\n  PointElement, LineElement,\r\n  BarElement, Title,\r\n  Tooltip, Legend,\r\n  ArcElement,\r\n} from 'chart.js';\r\n\r\nChartJS.register(\r\n  CategoryScale, LinearScale, BarElement, PointElement,\r\n  LineElement, ArcElement, Title, Tooltip, Legend\r\n);\r\n\r\nexport default function DashboardEmployees() {\r\n  const yearRef = useRef();\r\n  const labels = ['Janvier', 'Février', 'Mars', 'Avril', 'Mai', 'Juin', 'Juillet', 'Août', 'septembre', 'Octobre', 'Novembre', 'Décembre'];\r\n  const [allData, setAllData] = useState({\r\n    data: {\r\n      labels,\r\n      datasets: [\r\n        {\r\n          label: '2022',\r\n          data: fulldata['2022'].chartChantier,\r\n          backgroundColor: 'rgba(212, 142,\t25, 0.7)',\r\n        },\r\n        {\r\n          label: '2021',\r\n          data: fulldata['2021'].chartChantier,\r\n          backgroundColor: 'rgba(136, 152, 170, 0.7)',\r\n        },\r\n      ]\r\n    },\r\n    dataLine: {\r\n      labels,\r\n      datasets: [{\r\n          label: '2022',\r\n          data: fulldata['2022'].chartChiffre,\r\n          borderColor: 'rgb(212, 142,\t25)',\r\n          backgroundColor: 'rgba(212, 142, 25, 0.7)',\r\n        },\r\n        {\r\n          label: '2021',\r\n          data: fulldata['2021'].chartChiffre,\r\n          borderColor: 'rgb(136, 152, 170)',\r\n          backgroundColor: 'rgba(136, 152, 170, 0.7)',\r\n        },\r\n      ],\r\n    },\r\n    dataPie: {\r\n      labels: ['Electricité', 'Plomberie', 'Couverture', 'Maçonnerie', 'Menuiserie', 'Gros oeuvre'],\r\n      datasets: [{\r\n        label: 'Corps de métier par chantier',\r\n        data: fulldata['2021'].chartJob,\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 0.8)',\r\n          'rgba(54, 162, 235, 0.8)',\r\n          'rgba(255, 206, 86, 0.8)',\r\n          'rgba(75, 192, 192, 0.8)',\r\n          'rgba(153, 102, 255, 0.8)',\r\n          'rgba(255, 159, 64, 0.8)',\r\n        ],\r\n        borderColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 206, 86, 1)',\r\n          'rgba(75, 192, 192, 1)',\r\n          'rgba(153, 102, 255, 1)',\r\n          'rgba(255, 159, 64, 1)',\r\n        ],\r\n        borderWidth: 1,\r\n      }, ],\r\n    }\r\n  });\r\n  const options = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top'\r\n      }\r\n    }\r\n  };\r\n  const optionsLine = {\r\n    responsive: true,\r\n    plugins: {\r\n      legend: {\r\n        position: 'top'\r\n      }\r\n    }\r\n  };\r\n\r\n  function changeYear() {\r\n    var year = yearRef.current.options[yearRef.current.selectedIndex].value;\r\n\r\n    console.log(year);\r\n\r\n    setAllData({\r\n      data: {\r\n        labels,\r\n        datasets: [\r\n          {\r\n            label: '2022',\r\n            data: fulldata[2022].chartChantier,\r\n            backgroundColor: 'rgba(212, 142,\t25, 0.7)',\r\n          },\r\n          {\r\n            label: `${year}`,\r\n            data: fulldata[year].chartChantier,\r\n            backgroundColor: 'rgba(136, 152, 170, 0.7)',\r\n          },\r\n        ]\r\n      },\r\n      dataLine: {\r\n        labels,\r\n        datasets: [{\r\n            label: '2022',\r\n            data: fulldata[2022].chartChiffre,\r\n            borderColor: 'rgb(212, 142,\t25)',\r\n            backgroundColor: 'rgba(212, 142, 25, 0.7)',\r\n          },\r\n          {\r\n            label: `${year}`,\r\n            data: fulldata[year].chartChiffre,\r\n            borderColor: 'rgb(136, 152, 170)',\r\n            backgroundColor: 'rgba(136, 152, 170, 0.7)',\r\n          },\r\n        ],\r\n      },\r\n      dataPie: {\r\n        labels: ['Electricité', 'Plomberie', 'Couverture', 'Maçonnerie', 'Menuiserie', 'Gros oeuvre'],\r\n        datasets: [{\r\n          label: 'Corps de métier par chantier',\r\n          data: fulldata[year].chartJob,\r\n          backgroundColor: [\r\n            'rgba(255, 99, 132, 0.8)',\r\n            'rgba(54, 162, 235, 0.8)',\r\n            'rgba(255, 206, 86, 0.8)',\r\n            'rgba(75, 192, 192, 0.8)',\r\n            'rgba(153, 102, 255, 0.8)',\r\n            'rgba(255, 159, 64, 0.8)',\r\n          ],\r\n          borderColor: [\r\n            'rgba(255, 99, 132, 1)',\r\n            'rgba(54, 162, 235, 1)',\r\n            'rgba(255, 206, 86, 1)',\r\n            'rgba(75, 192, 192, 1)',\r\n            'rgba(153, 102, 255, 1)',\r\n            'rgba(255, 159, 64, 1)',\r\n          ],\r\n          borderWidth: 1,\r\n        }, ],\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"global-container\">\r\n        <h1 className=\"h1v3\">Les résultats de l 'année :</h1>\r\n        <form>\r\n          <label htmlFor=\"year\"> Choisissez une date </label>\r\n          <select onChange={changeYear} ref={yearRef} name='year'>\r\n            <option disabled value=\"2022\">2022</option> \r\n            <option selected value=\"2021\">2021</option>\r\n            <option value=\"2020\">2020</option> \r\n            <option value=\"2019\">2019</option> \r\n          </select> \r\n        </form> \r\n        <div className=\"chart-container\">\r\n          <h2>Nombre de chantiers par mois</h2> \r\n          <Bar options={options} data={allData.data}/>\r\n        </div>\r\n        <div className=\"chart-container\">\r\n          <h2>Chiffres d 'affaire</h2>\r\n          <Line options={optionsLine} data={allData.dataLine}/>\r\n        </div>\r\n        <div className=\"chart-container-pies\">\r\n          <h2>Corps de métier par chantier</h2>\r\n          <Pie data={allData.dataPie}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React, {FunctionComponent} from 'react';\r\nimport {  Link} from \"react-router-dom\";\r\nimport DashboardEmployees from \"../components/dashbaord/Pages/DashboardEmployees/DashboardEmployees\";\r\nimport \"../components/dashbaord/Pages/DashboardEmployees/DashboardEmployees.css\";\r\n\r\n\r\n\r\nconst Dashboard: FunctionComponent = () => {\r\n\r\nreturn (\r\n<>\r\n    <div className=\"hero-auto\">\r\n        <div className=\"container containerWhite\">\r\n            <div>\r\n                <DashboardEmployees />\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div style={{ position: 'fixed', top: '130px', left: '50px' }} className=\"none-sm\">\r\n        <p className=\"h5 text-light\">Ajouter un chantier</p>\r\n    <Link className=\"btn-floating btn-large waves-effect waves-light green lighten-1 z-deepth-3\"\r\n        style={{ position: 'fixed', top: '160px', left: '95px' }} to=\"/sites/add\">\r\n    <i className=\"material-icons\">add</i>\r\n    </Link>\r\n    </div>\r\n\r\n    <div style={{ position: 'fixed', top: '260px', left: '50px' }} className=\"none-sm\">\r\n        <p className=\"h5 text-light\">Ajouter du matériel</p>\r\n    <Link className=\"btn-floating btn-large waves-effect waves-light green lighten-1 z-deepth-3\"\r\n        style={{ position: 'fixed', top: '290px', left: '95px' }} to=\"/CreateMaterial\">\r\n    <i className=\"material-icons\">add</i>\r\n    </Link>\r\n    </div>\r\n\r\n    <div style={{ position: 'fixed', top: '390px', left: '50px' }} className=\"none-sm\">\r\n        <p className=\"h5 text-light\">Ajouter un Rdv</p>\r\n    <Link className=\"btn-floating btn-large waves-effect waves-light green lighten-1 z-deepth-3\"\r\n        style={{ position: 'fixed', top: '420px', left: '95px' }} to=\"/planning/add\">\r\n    <i className=\"material-icons\">add</i>\r\n    </Link>\r\n    </div>\r\n</>\r\n)\r\n};\r\n\r\n\r\n\r\nexport default Dashboard;","import { Calendar, momentLocalizer } from 'react-big-calendar'\r\nimport React,{useEffect} from \"react\";\r\nimport moment from \"moment\";\r\n\r\n\r\n\r\nconst PlanningChantier = ({eventsChantier}) => {\r\n    const localizer = momentLocalizer(moment);\r\n\r\n    \r\n    const detailChantier = (event) => {\r\n\r\n    }\r\n    var buttonMoi ;\r\n    var buttonAgenda ;\r\n\r\n    useEffect(() => {\r\n        \r\n        let collection = document.getElementsByTagName(\"button\")\r\n        for (let i = 0; i < collection.length; i++) {\r\n            if (collection[i].innerHTML === \"Week\" || collection[i].innerHTML === \"Day\" || collection[i].innerHTML === \"Today\") {\r\n                collection[i].style.display = \"none\"\r\n            }else if(collection[i].innerHTML === \"Month\" ){\r\n                collection[i].innerHTML = \"Mois\"\r\n                buttonMoi = collection[i]\r\n            }\r\n            else if(collection[i].innerHTML === \"Mois\" ){\r\n                collection[i].innerHTML = \"Mois\"\r\n                buttonMoi = collection[i]\r\n            }\r\n            else if (collection[i].innerHTML === \"Next\"){\r\n                collection[i].innerHTML = \"Suiv.\"\r\n            }\r\n            else if (collection[i].innerHTML === \"Back\"){\r\n                collection[i].innerHTML = \"Arr.\"\r\n            }else if(collection[i].innerHTML === \"Agenda\"){\r\n                buttonAgenda = collection[i]\r\n            }\r\n            var nameMonth = document.getElementsByClassName(\"rbc-toolbar-label\")\r\n            for (let i = 0; i < nameMonth.length; i++) {\r\n                console.log(nameMonth[i])\r\n            }\r\n        }\r\n        \r\n        buttonMoi ? buttonMoi.click() : console.log()\r\n        buttonAgenda ? buttonAgenda.click() : console.log()\r\n        buttonMoi ? buttonMoi.click() : console.log()\r\n        setTimeout(()=>{\r\n            buttonMoi ? buttonMoi.click() : console.log()\r\n            var tabTextJour = [\"Dimanche\",\"Lundi\",\"Mardi\",\"mercredi\",\"Jeudi\",\"Vendredi\",\"Samedi\"]\r\n            var divHeader = document.getElementsByClassName(\"rbc-header\")\r\n            for (let i = 0; i < divHeader.length; i++) {\r\n                var elem = divHeader[i].childNodes\r\n                for (let j=0;j<elem.length;j++){\r\n                    elem[j].innerHTML = tabTextJour[i]\r\n                }\r\n            };\r\n        }\r\n            ,100)\r\n    }, []);\r\n    return(\r\n        <>\r\n            {console.log(eventsChantier)}\r\n            <div className=\"planningChantier\">\r\n            \r\n           \r\n                    <h1 className=\"center pt-5 mt-5 text-light\">Planning chantier</h1>\r\n                    <div className=\"container\">\r\n                        <div className=\"row\">\r\n\r\n                            <Calendar\r\n                                localizer={localizer}\r\n                                defaultDate={new Date()}\r\n                                defaultView=\"month\"\r\n                                events={eventsChantier}\r\n                                onSelectEvent={(event) => detailChantier(event)}\r\n                                style={{ height: \"100vh\" }}\r\n                            />\r\n\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n     \r\n        \r\n        </>\r\n    )\r\n\r\n}\r\n\r\nexport default PlanningChantier","import React, {useEffect, useState} from \"react\";\r\nimport PlanningChantier from \"../components/planning/PlanningChantier\";\r\nimport SitesService from \"../services/sites-service\";\r\nimport Moment from 'moment';\r\n\r\n\r\n\r\nconst ContainerPlanningChantier = () => {\r\n    const id_user = localStorage.getItem(\"user_id\")\r\n    const [siteList,setSiteList] = useState([])\r\n    const events = [];\r\n    useEffect(() => {\r\n        getSites()\r\n    }, []);\r\n\r\n\r\n    useEffect(()=>{\r\n        formatEvent()\r\n    },[siteList])\r\n\r\n    const getSites = async () => {\r\n        var resp;\r\n        if(localStorage.getItem(\"user_role\") === \"3\" || localStorage.getItem(\"user_role\") === \"4\" ){\r\n            resp = await SitesService.getAllSites()\r\n            \r\n            if(resp.length ===0){\r\n                resp = []\r\n            }\r\n        }else{\r\n\r\n            resp = await SitesService.getSiteByUser(id_user)\r\n            console.log(resp)\r\n        }\r\n        \r\n            setSiteList(resp)\r\n    \r\n        \r\n    }\r\n\r\n    const formatEvent = () => {\r\n        if(siteList){\r\n\r\n            siteList.map((site)=>{\r\n                console.log(site)\r\n                events.push({\r\n                    title:site.site_number_site,\r\n                    start:setDate(site.site_date_start),\r\n                    end:setDate(site.site_date_end),\r\n                    ressourceId:site.site_id\r\n                  })\r\n                  return 0\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    const setDate =(date) => {\r\n        let myDate = Moment.unix(date);\r\n        return myDate.format('YYYY-MM-DD hh:mm:ss');\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <div className=\"hero-auto\">\r\n                <PlanningChantier eventsChantier={events} />\r\n            </div>\r\n        </>\r\n            )\r\n}\r\n\r\nexport default ContainerPlanningChantier;","import React, { useEffect, useState } from 'react'\r\nimport SitesService from '../../services/sites-service'\r\nimport Moment from 'moment';\r\nimport PlanningChantier from './PlanningChantier';\r\nconst ContainerUniqSite = ({ match }) => {\r\n    \r\n    const sit = []\r\n    const site_id = match.params.id\r\n    const [site,setSite] = useState([])\r\n\r\n    useEffect(()=>{\r\n        const getSiteById = async ()=>{\r\n            let resp = await SitesService.getSite(site_id)\r\n            var rep = sit.push(resp.site)\r\n            setSite(sit)\r\n        }\r\n        getSiteById()\r\n    },[])\r\n    useEffect(()=>{\r\n        formatEvent()\r\n    },[site])\r\n    const events = [];\r\n    const formatEvent = () => {\r\n        if(site){\r\n\r\n            site.map((s)=>{\r\n                console.log(s)\r\n                events.push({\r\n                    title:s.site_number_site,\r\n                    start:setDate(s.site_date_start),\r\n                    end:setDate(s.site_date_end),\r\n                    ressourceId:s.site_id\r\n                  })\r\n                  return 0\r\n            })\r\n        }\r\n        \r\n    }\r\n\r\n    const setDate =(date) => {\r\n        let myDate = Moment.unix(date);\r\n        return myDate.format('YYYY-MM-DD hh:mm:ss');\r\n    }\r\n    return(\r\n        <>\r\n            <div className=\"hero-auto\">\r\n            <PlanningChantier eventsChantier={events} />\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ContainerUniqSite","import React, {FunctionComponent} from 'react';\r\nimport {BrowserRouter as Router, Link, Route, Switch, useHistory} from 'react-router-dom';\r\nimport {useUser} from \"../contexts/userContext\";\r\nimport Home from \"../pages/Home\";\r\nimport Login from \"../pages/Login\";\r\nimport EstimateAdd from \"../pages/estimate-add\";\r\nimport TaskList from \"./planning/TasksList\";\r\nimport CheckProfile from \"../pages/CheckProfile\";\r\nimport MaterialDetail from \"./material/MaterialDetail\";\r\nimport SitesList from \"./site/Sites-list\";\r\nimport SiteDetail from \"./site/Site-detail\";\r\nimport SitesAdd from \"../pages/sites-add\";\r\nimport {Container, Nav, Navbar, NavDropdown} from \"react-bootstrap\";\r\nimport CheckProblems from \"../pages/CheckProblems\";\r\nimport UpdateProblem from \"./problem/UpdateProblem\";\r\nimport DetailProblem from './problem/DetailProblem';\r\nimport CreateMaterial from \"./material/CreateMaterial\";\r\nimport CreateProblem from \"./problem/CreateProblem\";\r\nimport logo from \"../assets/img/HeimdallContructionSansFond.png\"\r\nimport SiteEdit from \"./site/site-edit\";\r\nimport CreateUser from './user/CreateUser';\r\nimport UpdateUser from './user/UpdateUser';\r\nimport updateMaterial from './material/UpdateMaterial';\r\nimport AddTask from './planning/AddTask';\r\nimport ContainerModifyTask from './planning/containerModifyTask';\r\nimport {GetRole} from \"../models/role\";\r\nimport {TokenValidity} from \"../services/auth-service\";\r\nimport Dashboard from '../pages/dashboard';\r\nimport ContainerPlanningChantier from '../pages/ContainerPlanningChantier';\r\nimport ContainerUniqSite from './planning/ContainerUniqSite';\r\n\r\n\r\nconst Header: FunctionComponent = () => {\r\n    const userContext = useUser();\r\n    const history = useHistory()\r\n    const onClickLogOut = () => {\r\n        localStorage.clear();\r\n        if (userContext) {\r\n            userContext!.dispatch({type: \"setUser\", payload: {id: undefined, role: undefined}});\r\n        }\r\n    }\r\n\r\n    const checkRole = (role: GetRole) => {\r\n        switch (role) {\r\n            case GetRole.DIRECTOR:\r\n            case GetRole.MANAGER:\r\n                return true;\r\n            case GetRole.CUSTOMER:\r\n            case GetRole.EMPLOYEE:\r\n            case GetRole.UNDEFINED:\r\n            default:\r\n                return false;\r\n        }\r\n    }\r\n    \r\n    // display none the header if user scroll down\r\n    const [isVisible, setIsVisible] = React.useState(true);\r\n    const handleScroll = () => {\r\n        const nav = document.getElementById(\"navv\");\r\n        //console.log(nav);\r\n        if (window.scrollY > 1150) {\r\n            setIsVisible(false);\r\n            //console.log(\"scroll down\");\r\n            // add class to navbar to id nav \r\n           nav!.classList.add(\"navbarScroll\");\r\n\r\n        } else {\r\n            setIsVisible(true);\r\n            //console.log(\"scroll up\");\r\n            // remove class to navbar\r\n           nav!.classList.remove(\"navbarScroll\");\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        window.addEventListener('scroll', handleScroll);\r\n        return () => {\r\n            window.removeEventListener('scroll', handleScroll);\r\n        };\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <Router>\r\n            <div className=\"\">\r\n                <Navbar expand=\"lg\" id=\"navv\">\r\n                    <Container fluid>\r\n                        <Navbar.Brand> <Link to=\"/\"><img src={logo} alt=\"logo\" id=\"logoNav\"/> </Link></Navbar.Brand>\r\n                        <Navbar.Toggle aria-controls=\"navbarScroll\"/>\r\n                        <Navbar.Collapse id=\"navbarScroll\">\r\n                            <Nav className=\"me-auto my-2 my-lg-0\" id=\"navbarScroll\" navbarScroll >\r\n                                <Nav.Link> <Link to=\"/\">Accueil</Link></Nav.Link>\r\n                                {TokenValidity() ? <Nav.Link> <Link to=\"/profile\" className=\"\">Profil</Link></Nav.Link> : ''}\r\n                                {!TokenValidity() ? <Nav.Link> <Link to=\"/login\" className=\"\">Connexion</Link></Nav.Link> : ''}\r\n                                <Nav.Link> <Link to=\"/devis\">Devis</Link></Nav.Link>\r\n                                {TokenValidity() && checkRole(Number(localStorage.getItem('user_role'))) ? <Nav.Link> <Link to=\"/Dashboard\">Dashboard</Link></Nav.Link> : ''}\r\n                                {TokenValidity() && checkRole(Number(localStorage.getItem('user_role'))) ? <Nav.Link> <Link to=\"/material\" className=\"\">Matériel</Link></Nav.Link> : ''}\r\n\r\n\r\n                                 \r\n\r\n\r\n                                 {TokenValidity() ? <NavDropdown title=\"Chantiers\" id=\"nav-dropdown\">\r\n                                    <NavDropdown.Item eventKey=\"4.1\"><Link to=\"/sites\" className=\"\">Liste Chantiers</Link></NavDropdown.Item>\r\n                                    <NavDropdown.Divider />\r\n                                    <NavDropdown.Item eventKey=\"4.2\"><Link to=\"/planningChantier\" className=\"\">Planning Chantiers</Link></NavDropdown.Item>\r\n                                </NavDropdown> : ''}\r\n\r\n                                \r\n                                {TokenValidity() && checkRole(Number(localStorage.getItem('user_role'))) ? <Nav.Link><Link to=\"/problems\" className=\"\">Ticket</Link></Nav.Link> : ''}\r\n                                {TokenValidity() ? <Nav.Link><Link to=\"/planning\" className=\"\">Agenda</Link></Nav.Link> : ''}\r\n                            </Nav>\r\n                            {TokenValidity() ?\r\n                                <Nav className=\"d-flex justify-content-end\">\r\n                                    <Nav.Link><Link to=\"/\" onClick={() => onClickLogOut()}>Déconnexion</Link></Nav.Link>\r\n                                </Nav>\r\n                                :\r\n                                ''\r\n                            }\r\n                        </Navbar.Collapse>\r\n                    </Container>\r\n                </Navbar>\r\n                {\r\n                    TokenValidity() ?\r\n                        checkRole(Number(localStorage.getItem('user_role'))) ?\r\n                            <Switch>\r\n                                <Route exact path=\"/planning\" component={TaskList}/>\r\n                                <Route exact path=\"/planning/add\" component={AddTask}/>\r\n                                <Route exact path=\"/planning/modify/:id\" component={ContainerModifyTask}/>\r\n                                <Route exact path=\"/\" component={Home}/>\r\n                                <Route exact path=\"/profile\" component={CheckProfile}/>\r\n                                <Route exact path=\"/login\" component={Login}/>\r\n                                <Route exact path=\"/devis\" component={EstimateAdd}/>\r\n                                <Route exact path=\"/material\" component={MaterialDetail}/>\r\n                                <Route exact path=\"/sites\" component={SitesList}/>\r\n                                <Route exact path=\"/problems\" component={CheckProblems}/>\r\n                                <Route exact path='/sites/search/:id' component={SiteDetail}/>\r\n                                <Route exact path='/CreateMaterial' component={CreateMaterial}/>\r\n                                <Route exact path='/problems/create/' component={CreateProblem}/>\r\n                                <Route exact path='/problems/update/:id' component={UpdateProblem}/>\r\n                                <Route exact path='/problems/detail/:id' component={DetailProblem}/>\r\n                                <Route exact path='/sites/add' component={SitesAdd}/>\r\n                                <Route exact path='/sites/edit/:id' component={SiteEdit}/>\r\n                                <Route exact path='/CreateUser' component={CreateUser}/>\r\n                                <Route exact path='/users/update/:id' component={UpdateUser}/>\r\n                                <Route exact path='/material/update/:id' component={updateMaterial}/>\r\n                                <Route exact path='/Dashboard' component={Dashboard}/>\r\n                                <Route exact path='/planningChantier' component={ContainerPlanningChantier} />\r\n                                <Route exact path=\"/planningSite/uniq/:id\" component={ContainerUniqSite} />\r\n                            </Switch>\r\n                            :\r\n                            <Switch>\r\n                                <Route exact path=\"/planning\" component={TaskList}/>\r\n                                <Route exact path=\"/planning/add\" component={AddTask}/>\r\n                                <Route exact path=\"/planning/modify/:id\" component={ContainerModifyTask}/>\r\n                                <Route exact path=\"/\" component={Home}/>\r\n                                <Route exact path=\"/profile\" component={CheckProfile}/>\r\n                                <Route exact path=\"/login\" component={Login}/>\r\n                                <Route exact path=\"/devis\" component={EstimateAdd}/>\r\n                                <Route exact path=\"/sites\" component={SitesList}/>\r\n                                <Route exact path='/sites/search/:id' component={SiteDetail}/>\r\n                                <Route exact path='/sites/add' component={SitesAdd}/>\r\n                                <Route exact path='/sites/edit/:id' component={SiteEdit} />\r\n                                <Route exact path='/CreateUser' component={CreateUser}/>\r\n                                <Route exact path='/users/update/:id' component={UpdateUser}/>\r\n                                <Route exact path='/planningChantier' component={ContainerPlanningChantier} />\r\n                                <Route exact path=\"/planningSite/uniq/:id\" component={ContainerUniqSite} />\r\n\r\n                            </Switch>\r\n                        :\r\n                        <Switch>\r\n                            <Route exact path=\"/\" component={Home}/>\r\n                            <Route exact path=\"/login\" component={Login}/>\r\n                            <Route exact path=\"/devis\" component={EstimateAdd}/>\r\n                        </Switch>\r\n                }\r\n            </div>\r\n        </Router>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport logo from \"../assets/img/HeimdallContructionSansFond.png\";\r\nimport { MDBFooter, MDBContainer, MDBRow, MDBCol } from 'mdb-react-ui-kit';\r\nimport { Scroll } from 'react-scroll-top-btn';\r\n\r\n\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <MDBFooter  className='text-white text-center text-lg-left'>\r\n            <MDBContainer className='p-2 pt-4'>\r\n                <MDBRow>\r\n                    <MDBCol lg='6' md='12' className='mb-4 mb-md-0'>\r\n                        <img className='mt-5' src={logo} alt=\"logo\" id=\"logoFooter\"/>\r\n                    </MDBCol>\r\n\r\n                    <MDBCol lg='3' md='6' className='mb-4 mb-md-0'>\r\n                        <h5 className='text-uppercase'><i className=\"fas fa-map-marker-alt\"></i> Nos Adresses</h5>\r\n\r\n                        <h6>Siège social</h6>\r\n                        <p>10 place Léon Meyer <br/>\r\n                            76600 Le Havreeeeeeeee</p>\r\n\r\n                        <h6>Agence Le Havre</h6>\r\n                        <p>12 place Léon Meyer <br/>\r\n                            76600 Le Havre</p>\r\n\r\n                        <h6>Atelier technique</h6>\r\n                        <p>15 place Léon Meyer <br/>\r\n                            76600 Le Havre</p>\r\n                        \r\n                    </MDBCol>\r\n\r\n                    <MDBCol lg='3' md='6' className='mb-4 mb-md-0'>\r\n                        <h5 className='text-uppercase'>Contact</h5>\r\n\r\n                        <p>Siège social <br/>\r\n                        <i className=\"fas fa-mobile-alt\"></i> 02 35 02 02 01</p>\r\n\r\n                        <p>Agence Le Havre <br/>\r\n                        <i className=\"fas fa-mobile-alt\"></i> 02 35 02 02 02</p>\r\n\r\n                        <p>Nous contacter pour un devis : <i className=\"fas fa-envelope\"></i> </p>\r\n                    </MDBCol>\r\n                </MDBRow>\r\n            </MDBContainer>\r\n\r\n            <div className='text-center p-3' style={{ backgroundColor: 'rgba(0, 0, 0, 0.2)' }}>\r\n                &copy; {new Date().getFullYear()} Copyright{' '}\r\n            </div>\r\n\r\n\r\n\r\n            <Scroll />\r\n\r\n        </MDBFooter>\r\n    );\r\n}","import React, {FunctionComponent} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './App.css';\r\n\r\nimport {UserProvider} from \"./contexts/userContext\";\r\nimport Header from \"./components/header\";\r\nimport Footer from '../src/components/Footer';\r\n\r\nconst App: FunctionComponent = () => {\r\n\r\n\r\n  return (\r\n        <UserProvider>\r\n            <Header />\r\n            <Footer />\r\n        </UserProvider>\r\n    );\r\n}\r\n\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <App />, \r\n    document.getElementById('root')\r\n);"],"sourceRoot":""}